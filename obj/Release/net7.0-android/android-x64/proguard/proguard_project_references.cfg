# ACW for TCGPokellection
# ACW for CommunityToolkit.Maui
# ACW for CommunityToolkit.Maui.Core
# ACW for GoogleGson
-keep class com.google.gson.FieldAttributes
-keepclassmembers class com.google.gson.FieldAttributes {
   <init>(...);
   *** getAnnotations(...);
   *** getDeclaredClass(...);
   *** getDeclaredType(...);
   *** getDeclaringClass(...);
   *** getName(...);
   *** getAnnotation(...);
   *** hasModifier(...);
}

-keep class com.google.gson.FieldNamingPolicy
-keepclassmembers class com.google.gson.FieldNamingPolicy {
   *** valueOf(...);
   *** values(...);
   *** translateName(...);
}

-keep class com.google.gson.FieldNamingPolicy
-keepclassmembers class com.google.gson.FieldNamingPolicy {
   *** translateName(...);
}

-keep class com.google.gson.Gson
-keepclassmembers class com.google.gson.Gson {
   <init>(...);
   *** fieldNamingStrategy(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** getAdapter(...);
   *** getAdapter(...);
   *** getDelegateAdapter(...);
   *** htmlSafe(...);
   *** newBuilder(...);
   *** newJsonReader(...);
   *** newJsonWriter(...);
   *** serializeNulls(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJsonTree(...);
   *** toJsonTree(...);
}

-keep class com.google.gson.GsonBuilder
-keepclassmembers class com.google.gson.GsonBuilder {
   <init>(...);
   *** addDeserializationExclusionStrategy(...);
   *** addReflectionAccessFilter(...);
   *** addSerializationExclusionStrategy(...);
   *** create(...);
   *** disableHtmlEscaping(...);
   *** disableInnerClassSerialization(...);
   *** disableJdkUnsafe(...);
   *** enableComplexMapKeySerialization(...);
   *** excludeFieldsWithModifiers(...);
   *** excludeFieldsWithoutExposeAnnotation(...);
   *** generateNonExecutableJson(...);
   *** registerTypeAdapter(...);
   *** registerTypeAdapterFactory(...);
   *** registerTypeHierarchyAdapter(...);
   *** serializeNulls(...);
   *** serializeSpecialFloatingPointValues(...);
   *** setDateFormat(...);
   *** setDateFormat(...);
   *** setDateFormat(...);
   *** setExclusionStrategies(...);
   *** setFieldNamingPolicy(...);
   *** setFieldNamingStrategy(...);
   *** setLenient(...);
   *** setLongSerializationPolicy(...);
   *** setNumberToNumberStrategy(...);
   *** setObjectToNumberStrategy(...);
   *** setPrettyPrinting(...);
   *** setVersion(...);
}

-keep class com.google.gson.ExclusionStrategy
-keepclassmembers class com.google.gson.ExclusionStrategy {
}

-keep class com.google.gson.FieldNamingStrategy
-keepclassmembers class com.google.gson.FieldNamingStrategy {
}

-keep class com.google.gson.InstanceCreator
-keepclassmembers class com.google.gson.InstanceCreator {
}

-keep class com.google.gson.JsonDeserializationContext
-keepclassmembers class com.google.gson.JsonDeserializationContext {
}

-keep class com.google.gson.JsonDeserializer
-keepclassmembers class com.google.gson.JsonDeserializer {
}

-keep class com.google.gson.JsonSerializationContext
-keepclassmembers class com.google.gson.JsonSerializationContext {
}

-keep class com.google.gson.JsonSerializer
-keepclassmembers class com.google.gson.JsonSerializer {
}

-keep class com.google.gson.ReflectionAccessFilter$FilterResult
-keepclassmembers class com.google.gson.ReflectionAccessFilter$FilterResult {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.gson.ReflectionAccessFilter
-keepclassmembers class com.google.gson.ReflectionAccessFilter {
}

-keep class com.google.gson.ReflectionAccessFilter
-keepclassmembers class com.google.gson.ReflectionAccessFilter {
}

-keep class com.google.gson.ReflectionAccessFilter
-keepclassmembers class com.google.gson.ReflectionAccessFilter {
}

-keep class com.google.gson.ToNumberStrategy
-keepclassmembers class com.google.gson.ToNumberStrategy {
}

-keep class com.google.gson.TypeAdapterFactory
-keepclassmembers class com.google.gson.TypeAdapterFactory {
}

-keep class com.google.gson.JsonArray
-keepclassmembers class com.google.gson.JsonArray {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** contains(...);
   *** deepCopy(...);
   *** get(...);
   *** iterator(...);
   *** remove(...);
   *** remove(...);
   *** set(...);
   *** size(...);
}

-keep class com.google.gson.JsonElement
-keepclassmembers class com.google.gson.JsonElement {
   <init>(...);
   *** getAsBigDecimal(...);
   *** getAsBigInteger(...);
   *** getAsBoolean(...);
   *** getAsByte(...);
   *** getAsDouble(...);
   *** getAsFloat(...);
   *** getAsInt(...);
   *** getAsJsonArray(...);
   *** getAsJsonNull(...);
   *** getAsJsonObject(...);
   *** getAsJsonPrimitive(...);
   *** getAsLong(...);
   *** getAsNumber(...);
   *** getAsShort(...);
   *** getAsString(...);
   *** isJsonArray(...);
   *** isJsonNull(...);
   *** isJsonObject(...);
   *** isJsonPrimitive(...);
   *** deepCopy(...);
}

-keep class com.google.gson.JsonElement
-keepclassmembers class com.google.gson.JsonElement {
   *** deepCopy(...);
}

-keep class com.google.gson.JsonIOException
-keepclassmembers class com.google.gson.JsonIOException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.gson.JsonNull
-keepclassmembers class com.google.gson.JsonNull {
   <init>(...);
   *** deepCopy(...);
}

-keep class com.google.gson.JsonObject
-keepclassmembers class com.google.gson.JsonObject {
   <init>(...);
   *** add(...);
   *** addProperty(...);
   *** addProperty(...);
   *** addProperty(...);
   *** addProperty(...);
   *** deepCopy(...);
   *** entrySet(...);
   *** get(...);
   *** getAsJsonArray(...);
   *** getAsJsonObject(...);
   *** getAsJsonPrimitive(...);
   *** has(...);
   *** keySet(...);
   *** remove(...);
   *** size(...);
}

-keep class com.google.gson.JsonParseException
-keepclassmembers class com.google.gson.JsonParseException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.gson.JsonParser
-keepclassmembers class com.google.gson.JsonParser {
   <init>(...);
   *** parseReader(...);
   *** parseReader(...);
   *** parseString(...);
}

-keep class com.google.gson.JsonPrimitive
-keepclassmembers class com.google.gson.JsonPrimitive {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBoolean(...);
   *** isNumber(...);
   *** isString(...);
   *** deepCopy(...);
}

-keep class com.google.gson.JsonStreamParser
-keepclassmembers class com.google.gson.JsonStreamParser {
   <init>(...);
   <init>(...);
   *** hasNext(...);
   *** next(...);
   *** remove(...);
}

-keep class com.google.gson.JsonSyntaxException
-keepclassmembers class com.google.gson.JsonSyntaxException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.gson.LongSerializationPolicy
-keepclassmembers class com.google.gson.LongSerializationPolicy {
   *** serialize(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.gson.LongSerializationPolicy
-keepclassmembers class com.google.gson.LongSerializationPolicy {
   *** serialize(...);
}

-keep class com.google.gson.ToNumberPolicy
-keepclassmembers class com.google.gson.ToNumberPolicy {
   *** valueOf(...);
   *** values(...);
   *** readNumber(...);
}

-keep class com.google.gson.ToNumberPolicy
-keepclassmembers class com.google.gson.ToNumberPolicy {
   *** readNumber(...);
}

-keep class com.google.gson.TypeAdapter
-keepclassmembers class com.google.gson.TypeAdapter {
   <init>(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJsonTree(...);
   *** nullSafe(...);
   *** read(...);
   *** toJson(...);
   *** toJson(...);
   *** toJsonTree(...);
   *** write(...);
}

-keep class com.google.gson.TypeAdapter
-keepclassmembers class com.google.gson.TypeAdapter {
   *** read(...);
   *** write(...);
}

-keep class com.google.gson.stream.JsonReader
-keepclassmembers class com.google.gson.stream.JsonReader {
   <init>(...);
   *** hasNext(...);
   *** isLenient(...);
   *** setLenient(...);
   *** getPath(...);
   *** getPreviousPath(...);
   *** beginArray(...);
   *** beginObject(...);
   *** close(...);
   *** endArray(...);
   *** endObject(...);
   *** nextBoolean(...);
   *** nextDouble(...);
   *** nextInt(...);
   *** nextLong(...);
   *** nextName(...);
   *** nextNull(...);
   *** nextString(...);
   *** peek(...);
   *** skipValue(...);
}

-keep class com.google.gson.stream.JsonToken
-keepclassmembers class com.google.gson.stream.JsonToken {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.gson.stream.JsonWriter
-keepclassmembers class com.google.gson.stream.JsonWriter {
   <init>(...);
   *** isHtmlSafe(...);
   *** setHtmlSafe(...);
   *** isLenient(...);
   *** setLenient(...);
   *** getSerializeNulls(...);
   *** setSerializeNulls(...);
   *** beginArray(...);
   *** beginObject(...);
   *** close(...);
   *** endArray(...);
   *** endObject(...);
   *** flush(...);
   *** jsonValue(...);
   *** name(...);
   *** nullValue(...);
   *** setIndent(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
}

-keep class com.google.gson.stream.MalformedJsonException
-keepclassmembers class com.google.gson.stream.MalformedJsonException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.gson.reflect.TypeToken
-keepclassmembers class com.google.gson.reflect.TypeToken {
   <init>(...);
   *** getRawType(...);
   *** getType(...);
   *** equals(...);
   *** get(...);
   *** get(...);
   *** getArray(...);
   *** getParameterized(...);
   *** hashCode(...);
   *** toString(...);
}

-keep class com.google.gson.annotations.Expose
-keepclassmembers class com.google.gson.annotations.Expose {
}

-keep class com.google.gson.annotations.JsonAdapter
-keepclassmembers class com.google.gson.annotations.JsonAdapter {
}

-keep class com.google.gson.annotations.SerializedName
-keepclassmembers class com.google.gson.annotations.SerializedName {
}

-keep class com.google.gson.annotations.Since
-keepclassmembers class com.google.gson.annotations.Since {
}

-keep class com.google.gson.annotations.Until
-keepclassmembers class com.google.gson.annotations.Until {
}

# ACW for Microsoft.Identity.Client
# ACW for Microsoft.Maui.Graphics
# ACW for Plugin.InAppBilling
# ACW for Plugin.MauiMtAdmob
-keep class com.google.android.gms.ads.interstitial.InterstitialAdLoadCallback
-keepclassmembers class com.google.android.gms.ads.interstitial.InterstitialAdLoadCallback {
   <init>(...);
   *** onAdLoaded(...);
}

-keep class com.google.android.gms.ads.rewarded.RewardedAdLoadCallback
-keepclassmembers class com.google.android.gms.ads.rewarded.RewardedAdLoadCallback {
   <init>(...);
   *** onAdLoaded(...);
}

-keep class com.google.android.gms.ads.rewardedinterstitial.RewardedInterstitialAdLoadCallback
-keepclassmembers class com.google.android.gms.ads.rewardedinterstitial.RewardedInterstitialAdLoadCallback {
   <init>(...);
   *** onAdLoaded(...);
}

# ACW for Xamarin.Android.Glide
-keep class com.bumptech.glide.RequestBuilder
-keepclassmembers class com.bumptech.glide.RequestBuilder {
   <init>(...);
   <init>(...);
   *** getDownloadOnlyRequest(...);
   *** addListener(...);
   *** downloadOnly(...);
   *** downloadOnly(...);
   *** error(...);
   *** error(...);
   *** into(...);
   *** into(...);
   *** into(...);
   *** listener(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** preload(...);
   *** preload(...);
   *** submit(...);
   *** submit(...);
   *** thumbnail(...);
   *** thumbnail(...);
   *** thumbnail(...);
   *** thumbnail(...);
   *** transition(...);
}

-keep class com.bumptech.glide.GeneratedAppGlideModule
-keepclassmembers class com.bumptech.glide.GeneratedAppGlideModule {
   <init>(...);
   *** getExcludedModuleClasses(...);
   *** getRequestManagerFactory(...);
}

-keep class com.bumptech.glide.GeneratedAppGlideModule
-keepclassmembers class com.bumptech.glide.GeneratedAppGlideModule {
   *** getExcludedModuleClasses(...);
}

-keep class com.bumptech.glide.GenericTransitionOptions
-keepclassmembers class com.bumptech.glide.GenericTransitionOptions {
   <init>(...);
   *** with(...);
   *** with(...);
   *** with(...);
   *** withNoTransition(...);
}

-keep class com.bumptech.glide.Glide$RequestOptionsFactory
-keepclassmembers class com.bumptech.glide.Glide$RequestOptionsFactory {
}

-keep class com.bumptech.glide.Glide
-keepclassmembers class com.bumptech.glide.Glide {
   *** getArrayPool(...);
   *** getBitmapPool(...);
   *** getContext(...);
   *** getRegistry(...);
   *** getRequestManagerRetriever(...);
   *** clearDiskCache(...);
   *** clearMemory(...);
   *** enableHardwareBitmaps(...);
   *** get(...);
   *** getPhotoCacheDir(...);
   *** getPhotoCacheDir(...);
   *** init(...);
   *** init(...);
   *** onConfigurationChanged(...);
   *** onLowMemory(...);
   *** onTrimMemory(...);
   *** preFillBitmapPool(...);
   *** setMemoryCategory(...);
   *** tearDown(...);
   *** trimMemory(...);
   *** with(...);
   *** with(...);
   *** with(...);
   *** with(...);
   *** with(...);
   *** with(...);
}

-keep class com.bumptech.glide.GlideBuilder$LogRequestOrigins
-keepclassmembers class com.bumptech.glide.GlideBuilder$LogRequestOrigins {
   <init>(...);
}

-keep class com.bumptech.glide.GlideBuilder$WaitForFramesAfterTrimMemory
-keepclassmembers class com.bumptech.glide.GlideBuilder$WaitForFramesAfterTrimMemory {
}

-keep class com.bumptech.glide.GlideBuilder
-keepclassmembers class com.bumptech.glide.GlideBuilder {
   <init>(...);
   *** addGlobalRequestListener(...);
   *** setAnimationExecutor(...);
   *** setArrayPool(...);
   *** setBitmapPool(...);
   *** setConnectivityMonitorFactory(...);
   *** setDefaultRequestOptions(...);
   *** setDefaultRequestOptions(...);
   *** setDefaultTransitionOptions(...);
   *** setDiskCache(...);
   *** setDiskCacheExecutor(...);
   *** setEnableImageDecoderForAnimatedWebp(...);
   *** setImageDecoderEnabledForBitmaps(...);
   *** setIsActiveResourceRetentionAllowed(...);
   *** setLogLevel(...);
   *** setLogRequestOrigins(...);
   *** setMemoryCache(...);
   *** setMemorySizeCalculator(...);
   *** setMemorySizeCalculator(...);
   *** setResizeExecutor(...);
   *** setSourceExecutor(...);
   *** build(...);
}

-keep class com.bumptech.glide.GlideContext
-keepclassmembers class com.bumptech.glide.GlideContext {
   <init>(...);
   *** getArrayPool(...);
   *** getDefaultRequestListeners(...);
   *** getDefaultRequestOptions(...);
   *** getEngine(...);
   *** getExperiments(...);
   *** getLogLevel(...);
   *** getRegistry(...);
   *** buildImageViewTarget(...);
   *** getDefaultTransitionOptions(...);
}

-keep class com.bumptech.glide.GlideExperiments
-keepclassmembers class com.bumptech.glide.GlideExperiments {
   *** isEnabled(...);
}

-keep class com.bumptech.glide.ListPreloader$PreloadModelProvider
-keepclassmembers class com.bumptech.glide.ListPreloader$PreloadModelProvider {
}

-keep class com.bumptech.glide.ListPreloader$PreloadSizeProvider
-keepclassmembers class com.bumptech.glide.ListPreloader$PreloadSizeProvider {
}

-keep class com.bumptech.glide.ListPreloader
-keepclassmembers class com.bumptech.glide.ListPreloader {
   <init>(...);
   *** onScroll(...);
   *** onScrollStateChanged(...);
}

-keep class com.bumptech.glide.MemoryCategory
-keepclassmembers class com.bumptech.glide.MemoryCategory {
   *** getMultiplier(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.Priority
-keepclassmembers class com.bumptech.glide.Priority {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.Registry$MissingComponentException
-keepclassmembers class com.bumptech.glide.Registry$MissingComponentException {
   <init>(...);
}

-keep class com.bumptech.glide.Registry$NoImageHeaderParserException
-keepclassmembers class com.bumptech.glide.Registry$NoImageHeaderParserException {
   <init>(...);
}

-keep class com.bumptech.glide.Registry$NoModelLoaderAvailableException
-keepclassmembers class com.bumptech.glide.Registry$NoModelLoaderAvailableException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.Registry$NoResultEncoderAvailableException
-keepclassmembers class com.bumptech.glide.Registry$NoResultEncoderAvailableException {
   <init>(...);
}

-keep class com.bumptech.glide.Registry$NoSourceEncoderAvailableException
-keepclassmembers class com.bumptech.glide.Registry$NoSourceEncoderAvailableException {
   <init>(...);
}

-keep class com.bumptech.glide.Registry
-keepclassmembers class com.bumptech.glide.Registry {
   <init>(...);
   *** getImageHeaderParsers(...);
   *** append(...);
   *** append(...);
   *** append(...);
   *** append(...);
   *** append(...);
   *** getLoadPath(...);
   *** getModelLoaders(...);
   *** getRegisteredResourceClasses(...);
   *** getResultEncoder(...);
   *** getRewinder(...);
   *** getSourceEncoder(...);
   *** isResourceEncoderAvailable(...);
   *** prepend(...);
   *** prepend(...);
   *** prepend(...);
   *** prepend(...);
   *** prepend(...);
   *** register(...);
   *** register(...);
   *** register(...);
   *** register(...);
   *** register(...);
   *** replace(...);
   *** setResourceDecoderBucketPriorityList(...);
}

-keep class com.bumptech.glide.RequestManager
-keepclassmembers class com.bumptech.glide.RequestManager {
   <init>(...);
   *** isPaused(...);
   *** addDefaultRequestListener(...);
   *** applyDefaultRequestOptions(...);
   *** as(...);
   *** asBitmap(...);
   *** asDrawable(...);
   *** asFile(...);
   *** asGif(...);
   *** clear(...);
   *** clear(...);
   *** download(...);
   *** downloadOnly(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** onConfigurationChanged(...);
   *** onDestroy(...);
   *** onLowMemory(...);
   *** onStart(...);
   *** onStop(...);
   *** onTrimMemory(...);
   *** pauseAllRequests(...);
   *** pauseAllRequestsRecursive(...);
   *** pauseRequests(...);
   *** pauseRequestsRecursive(...);
   *** resumeRequests(...);
   *** resumeRequestsRecursive(...);
   *** setDefaultRequestOptions(...);
   *** setPauseAllRequestsOnTrimMemoryModerate(...);
   *** setRequestOptions(...);
}

-keep class com.bumptech.glide.TransitionOptions
-keepclassmembers class com.bumptech.glide.TransitionOptions {
   <init>(...);
   *** clone(...);
   *** dontTransition(...);
   *** transition(...);
   *** transition(...);
   *** transition(...);
}

-keep class com.bumptech.glide.TransitionOptions
-keepclassmembers class com.bumptech.glide.TransitionOptions {
}

-keep class com.bumptech.glide.util.ByteBufferUtil
-keepclassmembers class com.bumptech.glide.util.ByteBufferUtil {
   *** fromFile(...);
   *** fromStream(...);
   *** rewind(...);
   *** toBytes(...);
   *** toFile(...);
   *** toStream(...);
   *** toStream(...);
}

-keep class com.bumptech.glide.util.CachedHashCodeArrayMap
-keepclassmembers class com.bumptech.glide.util.CachedHashCodeArrayMap {
   <init>(...);
   *** put(...);
   *** putAll(...);
   *** setValueAt(...);
}

-keep class com.bumptech.glide.util.ContentLengthInputStream
-keepclassmembers class com.bumptech.glide.util.ContentLengthInputStream {
   *** obtain(...);
   *** obtain(...);
}

-keep class com.bumptech.glide.util.ExceptionCatchingInputStream
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream {
   *** getException(...);
   *** obtain(...);
   *** read(...);
   *** release(...);
}

-keep class com.bumptech.glide.util.ExceptionPassthroughInputStream
-keepclassmembers class com.bumptech.glide.util.ExceptionPassthroughInputStream {
   *** getException(...);
   *** obtain(...);
   *** read(...);
   *** release(...);
}

-keep class com.bumptech.glide.util.Executors
-keepclassmembers class com.bumptech.glide.util.Executors {
   *** directExecutor(...);
   *** mainThreadExecutor(...);
   *** shutdownAndAwaitTermination(...);
}

-keep class com.bumptech.glide.util.FixedPreloadSizeProvider
-keepclassmembers class com.bumptech.glide.util.FixedPreloadSizeProvider {
   <init>(...);
   *** getPreloadSize(...);
}

-keep class com.bumptech.glide.util.GlideSuppliers$GlideSupplier
-keepclassmembers class com.bumptech.glide.util.GlideSuppliers$GlideSupplier {
}

-keep class com.bumptech.glide.util.GlideSuppliers
-keepclassmembers class com.bumptech.glide.util.GlideSuppliers {
   *** memorize(...);
}

-keep class com.bumptech.glide.util.Synthetic
-keepclassmembers class com.bumptech.glide.util.Synthetic {
}

-keep class com.bumptech.glide.util.LogTime
-keepclassmembers class com.bumptech.glide.util.LogTime {
   *** getElapsedMillis(...);
   *** getLogTime(...);
}

-keep class com.bumptech.glide.util.LruCache
-keepclassmembers class com.bumptech.glide.util.LruCache {
   <init>(...);
   *** getCount(...);
   *** getCurrentSize(...);
   *** getMaxSize(...);
   *** clearMemory(...);
   *** contains(...);
   *** get(...);
   *** getSize(...);
   *** onItemEvicted(...);
   *** put(...);
   *** remove(...);
   *** setSizeMultiplier(...);
   *** trimToSize(...);
}

-keep class com.bumptech.glide.util.MarkEnforcingInputStream
-keepclassmembers class com.bumptech.glide.util.MarkEnforcingInputStream {
   <init>(...);
}

-keep class com.bumptech.glide.util.MultiClassKey
-keepclassmembers class com.bumptech.glide.util.MultiClassKey {
   <init>(...);
   <init>(...);
   <init>(...);
   *** set(...);
   *** set(...);
}

-keep class com.bumptech.glide.util.Preconditions
-keepclassmembers class com.bumptech.glide.util.Preconditions {
   *** checkArgument(...);
   *** checkNotEmpty(...);
   *** checkNotEmpty(...);
   *** checkNotNull(...);
   *** checkNotNull(...);
}

-keep class com.bumptech.glide.util.Util
-keepclassmembers class com.bumptech.glide.util.Util {
   *** isOnBackgroundThread(...);
   *** isOnMainThread(...);
   *** assertBackgroundThread(...);
   *** assertMainThread(...);
   *** bothModelsNullEquivalentOrEquals(...);
   *** bothNullOrEqual(...);
   *** createQueue(...);
   *** getBitmapByteSize(...);
   *** getBitmapByteSize(...);
   *** getBytesPerPixel(...);
   *** getSize(...);
   *** getSnapshot(...);
   *** hashCode(...);
   *** hashCode(...);
   *** hashCode(...);
   *** hashCode(...);
   *** hashCode(...);
   *** hashCode(...);
   *** hashCode(...);
   *** isValidDimensions(...);
   *** postOnUiThread(...);
   *** removeCallbacksOnUiThread(...);
   *** sha256BytesToHex(...);
}

-keep class com.bumptech.glide.util.ViewPreloadSizeProvider
-keepclassmembers class com.bumptech.glide.util.ViewPreloadSizeProvider {
   <init>(...);
   <init>(...);
   *** getPreloadSize(...);
   *** onSizeReady(...);
   *** setView(...);
}

-keep class com.bumptech.glide.util.pool.FactoryPools$Factory
-keepclassmembers class com.bumptech.glide.util.pool.FactoryPools$Factory {
}

-keep class com.bumptech.glide.util.pool.FactoryPools$Poolable
-keepclassmembers class com.bumptech.glide.util.pool.FactoryPools$Poolable {
}

-keep class com.bumptech.glide.util.pool.FactoryPools$Resetter
-keepclassmembers class com.bumptech.glide.util.pool.FactoryPools$Resetter {
}

-keep class com.bumptech.glide.util.pool.FactoryPools
-keepclassmembers class com.bumptech.glide.util.pool.FactoryPools {
   *** simple(...);
   *** threadSafe(...);
   *** threadSafeList(...);
   *** threadSafeList(...);
}

-keep class com.bumptech.glide.util.pool.GlideTrace
-keepclassmembers class com.bumptech.glide.util.pool.GlideTrace {
   *** beginSection(...);
   *** beginSectionAsync(...);
   *** beginSectionFormat(...);
   *** beginSectionFormat(...);
   *** beginSectionFormat(...);
   *** endSection(...);
   *** endSectionAsync(...);
}

-keep class com.bumptech.glide.util.pool.StateVerifier
-keepclassmembers class com.bumptech.glide.util.pool.StateVerifier {
   *** newInstance(...);
   *** throwIfRecycled(...);
}

-keep class com.bumptech.glide.util.pool.StateVerifier
-keepclassmembers class com.bumptech.glide.util.pool.StateVerifier {
   *** throwIfRecycled(...);
}

-keep class com.bumptech.glide.signature.AndroidResourceSignature
-keepclassmembers class com.bumptech.glide.signature.AndroidResourceSignature {
   *** obtain(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.signature.ApplicationVersionSignature
-keepclassmembers class com.bumptech.glide.signature.ApplicationVersionSignature {
   *** obtain(...);
}

-keep class com.bumptech.glide.signature.EmptySignature
-keepclassmembers class com.bumptech.glide.signature.EmptySignature {
   *** obtain(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.signature.MediaStoreSignature
-keepclassmembers class com.bumptech.glide.signature.MediaStoreSignature {
   <init>(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.signature.ObjectKey
-keepclassmembers class com.bumptech.glide.signature.ObjectKey {
   <init>(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.provider.EncoderRegistry
-keepclassmembers class com.bumptech.glide.provider.EncoderRegistry {
   <init>(...);
   *** append(...);
   *** getEncoder(...);
   *** prepend(...);
}

-keep class com.bumptech.glide.provider.ImageHeaderParserRegistry
-keepclassmembers class com.bumptech.glide.provider.ImageHeaderParserRegistry {
   <init>(...);
   *** getParsers(...);
   *** add(...);
}

-keep class com.bumptech.glide.provider.LoadPathCache
-keepclassmembers class com.bumptech.glide.provider.LoadPathCache {
   <init>(...);
   *** get(...);
   *** isEmptyLoadPath(...);
   *** put(...);
}

-keep class com.bumptech.glide.provider.ModelToResourceClassCache
-keepclassmembers class com.bumptech.glide.provider.ModelToResourceClassCache {
   <init>(...);
   *** clear(...);
   *** get(...);
   *** put(...);
}

-keep class com.bumptech.glide.provider.ResourceDecoderRegistry
-keepclassmembers class com.bumptech.glide.provider.ResourceDecoderRegistry {
   <init>(...);
   *** append(...);
   *** getDecoders(...);
   *** getResourceClasses(...);
   *** prepend(...);
   *** setBucketPriorityList(...);
}

-keep class com.bumptech.glide.provider.ResourceEncoderRegistry
-keepclassmembers class com.bumptech.glide.provider.ResourceEncoderRegistry {
   <init>(...);
   *** append(...);
   *** get(...);
   *** prepend(...);
}

-keep class com.bumptech.glide.module.AppGlideModule
-keepclassmembers class com.bumptech.glide.module.AppGlideModule {
   <init>(...);
   *** isManifestParsingEnabled(...);
   *** applyOptions(...);
}

-keep class com.bumptech.glide.module.AppGlideModule
-keepclassmembers class com.bumptech.glide.module.AppGlideModule {
}

-keep class com.bumptech.glide.module.AppliesOptions
-keepclassmembers class com.bumptech.glide.module.AppliesOptions {
}

-keep class com.bumptech.glide.module.GlideModule
-keepclassmembers class com.bumptech.glide.module.GlideModule {
}

-keep class com.bumptech.glide.module.RegistersComponents
-keepclassmembers class com.bumptech.glide.module.RegistersComponents {
}

-keep class com.bumptech.glide.module.LibraryGlideModule
-keepclassmembers class com.bumptech.glide.module.LibraryGlideModule {
   <init>(...);
   *** registerComponents(...);
}

-keep class com.bumptech.glide.module.LibraryGlideModule
-keepclassmembers class com.bumptech.glide.module.LibraryGlideModule {
}

-keep class com.bumptech.glide.module.ManifestParser
-keepclassmembers class com.bumptech.glide.module.ManifestParser {
   <init>(...);
   *** parse(...);
}

-keep class com.bumptech.glide.manager.DefaultConnectivityMonitorFactory
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitorFactory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener
-keepclassmembers class com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener {
}

-keep class mono.com.bumptech.glide.manager.ConnectivityMonitor_ConnectivityListenerImplementor
-keepclassmembers class mono.com.bumptech.glide.manager.ConnectivityMonitor_ConnectivityListenerImplementor {
}

-keep class com.bumptech.glide.manager.ConnectivityMonitor
-keepclassmembers class com.bumptech.glide.manager.ConnectivityMonitor {
}

-keep class com.bumptech.glide.manager.ConnectivityMonitorFactory
-keepclassmembers class com.bumptech.glide.manager.ConnectivityMonitorFactory {
}

-keep class com.bumptech.glide.manager.Lifecycle
-keepclassmembers class com.bumptech.glide.manager.Lifecycle {
}

-keep class com.bumptech.glide.manager.LifecycleListener
-keepclassmembers class com.bumptech.glide.manager.LifecycleListener {
}

-keep class mono.com.bumptech.glide.manager.LifecycleListenerImplementor
-keepclassmembers class mono.com.bumptech.glide.manager.LifecycleListenerImplementor {
}

-keep class com.bumptech.glide.manager.RequestManagerTreeNode
-keepclassmembers class com.bumptech.glide.manager.RequestManagerTreeNode {
}

-keep class com.bumptech.glide.manager.RequestManagerFragment
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment {
   <init>(...);
   *** getRequestManager(...);
   *** setRequestManager(...);
   *** getRequestManagerTreeNode(...);
}

-keep class com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory {
}

-keep class com.bumptech.glide.manager.RequestManagerRetriever
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever {
   <init>(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** handleMessage(...);
}

-keep class com.bumptech.glide.manager.RequestTracker
-keepclassmembers class com.bumptech.glide.manager.RequestTracker {
   <init>(...);
   *** isPaused(...);
   *** clearAndRemove(...);
   *** clearRequests(...);
   *** pauseAllRequests(...);
   *** pauseRequests(...);
   *** restartRequests(...);
   *** resumeRequests(...);
   *** runRequest(...);
}

-keep class com.bumptech.glide.manager.SupportRequestManagerFragment
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment {
   <init>(...);
   *** getRequestManager(...);
   *** setRequestManager(...);
   *** getRequestManagerTreeNode(...);
}

-keep class com.bumptech.glide.manager.TargetTracker
-keepclassmembers class com.bumptech.glide.manager.TargetTracker {
   <init>(...);
   *** getAll(...);
   *** clear(...);
   *** onDestroy(...);
   *** onStart(...);
   *** onStop(...);
   *** track(...);
   *** untrack(...);
}

-keep class com.bumptech.glide.request.RequestOptions
-keepclassmembers class com.bumptech.glide.request.RequestOptions {
   <init>(...);
   *** bitmapTransform(...);
   *** centerCropTransform(...);
   *** centerInsideTransform(...);
   *** circleCropTransform(...);
   *** decodeTypeOf(...);
   *** diskCacheStrategyOf(...);
   *** downsampleOf(...);
   *** encodeFormatOf(...);
   *** encodeQualityOf(...);
   *** errorOf(...);
   *** errorOf(...);
   *** fitCenterTransform(...);
   *** formatOf(...);
   *** frameOf(...);
   *** noAnimation(...);
   *** noTransformation(...);
   *** option(...);
   *** overrideOf(...);
   *** overrideOf(...);
   *** placeholderOf(...);
   *** placeholderOf(...);
   *** priorityOf(...);
   *** signatureOf(...);
   *** sizeMultiplierOf(...);
   *** skipMemoryCacheOf(...);
   *** timeoutOf(...);
}

-keep class com.bumptech.glide.request.BaseRequestOptions
-keepclassmembers class com.bumptech.glide.request.BaseRequestOptions {
   <init>(...);
   *** getDiskCacheStrategy(...);
   *** getErrorId(...);
   *** getErrorPlaceholder(...);
   *** getFallbackDrawable(...);
   *** getFallbackId(...);
   *** isAutoCloneEnabled(...);
   *** isDiskCacheStrategySet(...);
   *** isLocked(...);
   *** isMemoryCacheable(...);
   *** isPrioritySet(...);
   *** isSkipMemoryCacheSet(...);
   *** isTransformationAllowed(...);
   *** isTransformationRequired(...);
   *** isTransformationSet(...);
   *** isValidOverride(...);
   *** getOnlyRetrieveFromCache(...);
   *** getOptions(...);
   *** getOverrideHeight(...);
   *** getOverrideWidth(...);
   *** getPlaceholderDrawable(...);
   *** getPlaceholderId(...);
   *** getPriority(...);
   *** getResourceClass(...);
   *** getSignature(...);
   *** getSizeMultiplier(...);
   *** getTheme(...);
   *** getTransformations(...);
   *** getUseAnimationPool(...);
   *** getUseUnlimitedSourceGeneratorsPool(...);
   *** apply(...);
   *** autoClone(...);
   *** centerCrop(...);
   *** centerInside(...);
   *** circleCrop(...);
   *** clone(...);
   *** decode(...);
   *** disallowHardwareConfig(...);
   *** diskCacheStrategy(...);
   *** dontAnimate(...);
   *** dontTransform(...);
   *** downsample(...);
   *** encodeFormat(...);
   *** encodeQuality(...);
   *** error(...);
   *** error(...);
   *** fallback(...);
   *** fallback(...);
   *** fitCenter(...);
   *** format(...);
   *** frame(...);
   *** lock(...);
   *** onlyRetrieveFromCache(...);
   *** optionalCenterCrop(...);
   *** optionalCenterInside(...);
   *** optionalCircleCrop(...);
   *** optionalFitCenter(...);
   *** optionalTransform(...);
   *** optionalTransform(...);
   *** override(...);
   *** override(...);
   *** placeholder(...);
   *** placeholder(...);
   *** priority(...);
   *** selfOrThrowIfLocked(...);
   *** set(...);
   *** signature(...);
   *** sizeMultiplier(...);
   *** skipMemoryCache(...);
   *** theme(...);
   *** timeout(...);
   *** transform(...);
   *** transform(...);
   *** transform(...);
   *** transforms(...);
   *** useAnimationPool(...);
   *** useUnlimitedSourceGeneratorsPool(...);
}

-keep class com.bumptech.glide.request.BaseRequestOptions
-keepclassmembers class com.bumptech.glide.request.BaseRequestOptions {
}

-keep class com.bumptech.glide.request.ErrorRequestCoordinator
-keepclassmembers class com.bumptech.glide.request.ErrorRequestCoordinator {
   <init>(...);
   *** isAnyResourceSet(...);
   *** isCleared(...);
   *** isComplete(...);
   *** isRunning(...);
   *** getRoot(...);
   *** begin(...);
   *** canNotifyCleared(...);
   *** canNotifyStatusChanged(...);
   *** canSetImage(...);
   *** clear(...);
   *** isEquivalentTo(...);
   *** onRequestFailed(...);
   *** onRequestSuccess(...);
   *** pause(...);
   *** setRequests(...);
}

-keep class com.bumptech.glide.request.FutureTarget
-keepclassmembers class com.bumptech.glide.request.FutureTarget {
}

-keep class com.bumptech.glide.request.Request
-keepclassmembers class com.bumptech.glide.request.Request {
}

-keep class com.bumptech.glide.request.RequestCoordinator$RequestState
-keepclassmembers class com.bumptech.glide.request.RequestCoordinator$RequestState {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.request.RequestCoordinator
-keepclassmembers class com.bumptech.glide.request.RequestCoordinator {
}

-keep class com.bumptech.glide.request.RequestListener
-keepclassmembers class com.bumptech.glide.request.RequestListener {
}

-keep class mono.com.bumptech.glide.request.RequestListenerImplementor
-keepclassmembers class mono.com.bumptech.glide.request.RequestListenerImplementor {
}

-keep class com.bumptech.glide.request.ResourceCallback
-keepclassmembers class com.bumptech.glide.request.ResourceCallback {
}

-keep class com.bumptech.glide.request.RequestFutureTarget
-keepclassmembers class com.bumptech.glide.request.RequestFutureTarget {
   <init>(...);
   *** isCancelled(...);
   *** isDone(...);
   *** getRequest(...);
   *** setRequest(...);
   *** cancel(...);
   *** get(...);
   *** get(...);
   *** getSize(...);
   *** onDestroy(...);
   *** onLoadCleared(...);
   *** onLoadFailed(...);
   *** onLoadFailed(...);
   *** onLoadStarted(...);
   *** onResourceReady(...);
   *** onResourceReady(...);
   *** onStart(...);
   *** onStop(...);
   *** removeCallback(...);
}

-keep class com.bumptech.glide.request.SingleRequest
-keepclassmembers class com.bumptech.glide.request.SingleRequest {
   *** isAnyResourceSet(...);
   *** isCleared(...);
   *** isComplete(...);
   *** isRunning(...);
   *** getLock(...);
   *** begin(...);
   *** clear(...);
   *** isEquivalentTo(...);
   *** obtain(...);
   *** onLoadFailed(...);
   *** onResourceReady(...);
   *** onSizeReady(...);
   *** pause(...);
}

-keep class com.bumptech.glide.request.ThumbnailRequestCoordinator
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator {
   <init>(...);
   *** isAnyResourceSet(...);
   *** isCleared(...);
   *** isComplete(...);
   *** isRunning(...);
   *** getRoot(...);
   *** begin(...);
   *** canNotifyCleared(...);
   *** canNotifyStatusChanged(...);
   *** canSetImage(...);
   *** clear(...);
   *** isEquivalentTo(...);
   *** onRequestFailed(...);
   *** onRequestSuccess(...);
   *** pause(...);
   *** setRequests(...);
}

-keep class com.bumptech.glide.request.transition.BitmapTransitionFactory
-keepclassmembers class com.bumptech.glide.request.transition.BitmapTransitionFactory {
   <init>(...);
   *** getBitmap(...);
}

-keep class com.bumptech.glide.request.transition.BitmapContainerTransitionFactory
-keepclassmembers class com.bumptech.glide.request.transition.BitmapContainerTransitionFactory {
   <init>(...);
   *** build(...);
   *** getBitmap(...);
}

-keep class com.bumptech.glide.request.transition.BitmapContainerTransitionFactory
-keepclassmembers class com.bumptech.glide.request.transition.BitmapContainerTransitionFactory {
   *** getBitmap(...);
}

-keep class com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder
-keepclassmembers class com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setCrossFadeEnabled(...);
}

-keep class com.bumptech.glide.request.transition.DrawableCrossFadeFactory
-keepclassmembers class com.bumptech.glide.request.transition.DrawableCrossFadeFactory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.request.transition.DrawableCrossFadeTransition
-keepclassmembers class com.bumptech.glide.request.transition.DrawableCrossFadeTransition {
   <init>(...);
   *** transition(...);
}

-keep class com.bumptech.glide.request.transition.Transition$ViewAdapter
-keepclassmembers class com.bumptech.glide.request.transition.Transition$ViewAdapter {
}

-keep class com.bumptech.glide.request.transition.Transition
-keepclassmembers class com.bumptech.glide.request.transition.Transition {
}

-keep class com.bumptech.glide.request.transition.TransitionFactory
-keepclassmembers class com.bumptech.glide.request.transition.TransitionFactory {
}

-keep class com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory
-keepclassmembers class com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.request.transition.NoTransition
-keepclassmembers class com.bumptech.glide.request.transition.NoTransition {
   <init>(...);
   *** getFactory(...);
   *** get(...);
   *** transition(...);
}

-keep class com.bumptech.glide.request.transition.ViewAnimationFactory
-keepclassmembers class com.bumptech.glide.request.transition.ViewAnimationFactory {
   <init>(...);
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.request.transition.ViewPropertyAnimationFactory
-keepclassmembers class com.bumptech.glide.request.transition.ViewPropertyAnimationFactory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.request.transition.ViewPropertyTransition$Animator
-keepclassmembers class com.bumptech.glide.request.transition.ViewPropertyTransition$Animator {
}

-keep class com.bumptech.glide.request.transition.ViewPropertyTransition
-keepclassmembers class com.bumptech.glide.request.transition.ViewPropertyTransition {
   <init>(...);
   *** transition(...);
}

-keep class com.bumptech.glide.request.transition.ViewTransition
-keepclassmembers class com.bumptech.glide.request.transition.ViewTransition {
   *** transition(...);
}

-keep class com.bumptech.glide.request.target.AppWidgetTarget
-keepclassmembers class com.bumptech.glide.request.target.AppWidgetTarget {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** onLoadCleared(...);
   *** onResourceReady(...);
}

-keep class com.bumptech.glide.request.target.BitmapImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.BitmapImageViewTarget {
   <init>(...);
   <init>(...);
   *** setResource(...);
}

-keep class com.bumptech.glide.request.target.BitmapThumbnailImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.BitmapThumbnailImageViewTarget {
   <init>(...);
   <init>(...);
   *** getDrawable(...);
}

-keep class com.bumptech.glide.request.target.DrawableImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.DrawableImageViewTarget {
   <init>(...);
   <init>(...);
   *** setResource(...);
}

-keep class com.bumptech.glide.request.target.DrawableThumbnailImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.DrawableThumbnailImageViewTarget {
   <init>(...);
   <init>(...);
   *** getDrawable(...);
}

-keep class com.bumptech.glide.request.target.NotificationTarget
-keepclassmembers class com.bumptech.glide.request.target.NotificationTarget {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onLoadCleared(...);
   *** onResourceReady(...);
}

-keep class com.bumptech.glide.request.target.BaseTarget
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget {
   <init>(...);
   *** getRequest(...);
   *** setRequest(...);
   *** onDestroy(...);
   *** onLoadCleared(...);
   *** onLoadFailed(...);
   *** onLoadStarted(...);
   *** onStart(...);
   *** onStop(...);
   *** onResourceReady(...);
   *** getSize(...);
   *** removeCallback(...);
}

-keep class com.bumptech.glide.request.target.BaseTarget
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget {
   *** onResourceReady(...);
   *** getSize(...);
   *** removeCallback(...);
}

-keep class com.bumptech.glide.request.target.CustomTarget
-keepclassmembers class com.bumptech.glide.request.target.CustomTarget {
   <init>(...);
   <init>(...);
   *** getRequest(...);
   *** setRequest(...);
   *** getSize(...);
   *** onDestroy(...);
   *** onLoadFailed(...);
   *** onLoadStarted(...);
   *** onStart(...);
   *** onStop(...);
   *** removeCallback(...);
   *** onResourceReady(...);
   *** onLoadCleared(...);
}

-keep class com.bumptech.glide.request.target.CustomTarget
-keepclassmembers class com.bumptech.glide.request.target.CustomTarget {
   *** onResourceReady(...);
   *** onLoadCleared(...);
}

-keep class com.bumptech.glide.request.target.CustomViewTarget
-keepclassmembers class com.bumptech.glide.request.target.CustomViewTarget {
   <init>(...);
   *** getRequest(...);
   *** setRequest(...);
   *** getView(...);
   *** clearOnDetach(...);
   *** getSize(...);
   *** onDestroy(...);
   *** onLoadCleared(...);
   *** onLoadStarted(...);
   *** onResourceCleared(...);
   *** onResourceLoading(...);
   *** onStart(...);
   *** onStop(...);
   *** removeCallback(...);
   *** useTagId(...);
   *** waitForLayout(...);
   *** onResourceReady(...);
   *** onLoadFailed(...);
}

-keep class com.bumptech.glide.request.target.CustomViewTarget
-keepclassmembers class com.bumptech.glide.request.target.CustomViewTarget {
   *** onResourceCleared(...);
   *** onResourceReady(...);
   *** onLoadFailed(...);
}

-keep class com.bumptech.glide.request.target.FixedSizeDrawable
-keepclassmembers class com.bumptech.glide.request.target.FixedSizeDrawable {
   <init>(...);
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

-keep class com.bumptech.glide.request.target.ImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTarget {
   <init>(...);
   <init>(...);
   *** getCurrentDrawable(...);
   *** onResourceReady(...);
   *** setDrawable(...);
   *** setResource(...);
}

-keep class com.bumptech.glide.request.target.ImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTarget {
   *** setResource(...);
}

-keep class com.bumptech.glide.request.target.ImageViewTargetFactory
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTargetFactory {
   <init>(...);
   *** buildTarget(...);
}

-keep class com.bumptech.glide.request.target.SizeReadyCallback
-keepclassmembers class com.bumptech.glide.request.target.SizeReadyCallback {
}

-keep class com.bumptech.glide.request.target.Target
-keepclassmembers class com.bumptech.glide.request.target.Target {
}

-keep class com.bumptech.glide.request.target.Target
-keepclassmembers class com.bumptech.glide.request.target.Target {
}

-keep class com.bumptech.glide.request.target.Target
-keepclassmembers class com.bumptech.glide.request.target.Target {
}

-keep class com.bumptech.glide.request.target.PreloadTarget
-keepclassmembers class com.bumptech.glide.request.target.PreloadTarget {
   *** obtain(...);
   *** onLoadCleared(...);
   *** onResourceReady(...);
}

-keep class com.bumptech.glide.request.target.SimpleTarget
-keepclassmembers class com.bumptech.glide.request.target.SimpleTarget {
   <init>(...);
   <init>(...);
   *** getSize(...);
   *** removeCallback(...);
}

-keep class com.bumptech.glide.request.target.SimpleTarget
-keepclassmembers class com.bumptech.glide.request.target.SimpleTarget {
   *** onResourceReady(...);
}

-keep class com.bumptech.glide.request.target.ThumbnailImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ThumbnailImageViewTarget {
   <init>(...);
   <init>(...);
   *** getDrawable(...);
   *** setResource(...);
}

-keep class com.bumptech.glide.request.target.ThumbnailImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ThumbnailImageViewTarget {
   *** getDrawable(...);
}

-keep class com.bumptech.glide.request.target.ViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget {
   <init>(...);
   <init>(...);
   *** getView(...);
   *** clearOnDetach(...);
   *** getSize(...);
   *** removeCallback(...);
   *** setTagId(...);
   *** waitForLayout(...);
}

-keep class com.bumptech.glide.request.target.ViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget {
   *** onResourceReady(...);
}

-keep class com.bumptech.glide.load.DataSource
-keepclassmembers class com.bumptech.glide.load.DataSource {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.DecodeFormat
-keepclassmembers class com.bumptech.glide.load.DecodeFormat {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.EncodeStrategy
-keepclassmembers class com.bumptech.glide.load.EncodeStrategy {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.HttpException
-keepclassmembers class com.bumptech.glide.load.HttpException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getStatusCode(...);
}

-keep class com.bumptech.glide.load.Encoder
-keepclassmembers class com.bumptech.glide.load.Encoder {
}

-keep class com.bumptech.glide.load.ImageHeaderParser$ImageType
-keepclassmembers class com.bumptech.glide.load.ImageHeaderParser$ImageType {
   *** hasAlpha(...);
   *** isWebp(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.ImageHeaderParser
-keepclassmembers class com.bumptech.glide.load.ImageHeaderParser {
}

-keep class com.bumptech.glide.load.ImageHeaderParser
-keepclassmembers class com.bumptech.glide.load.ImageHeaderParser {
}

-keep class com.bumptech.glide.load.ImageHeaderParser
-keepclassmembers class com.bumptech.glide.load.ImageHeaderParser {
}

-keep class com.bumptech.glide.load.Key
-keepclassmembers class com.bumptech.glide.load.Key {
}

-keep class com.bumptech.glide.load.Key
-keepclassmembers class com.bumptech.glide.load.Key {
}

-keep class com.bumptech.glide.load.Key
-keepclassmembers class com.bumptech.glide.load.Key {
}

-keep class com.bumptech.glide.load.ImageHeaderParserUtils
-keepclassmembers class com.bumptech.glide.load.ImageHeaderParserUtils {
   *** getOrientation(...);
   *** getOrientation(...);
   *** getOrientation(...);
   *** getType(...);
   *** getType(...);
   *** getType(...);
}

-keep class com.bumptech.glide.load.ResourceDecoder
-keepclassmembers class com.bumptech.glide.load.ResourceDecoder {
}

-keep class com.bumptech.glide.load.ResourceEncoder
-keepclassmembers class com.bumptech.glide.load.ResourceEncoder {
}

-keep class com.bumptech.glide.load.Transformation
-keepclassmembers class com.bumptech.glide.load.Transformation {
}

-keep class com.bumptech.glide.load.MultiTransformation
-keepclassmembers class com.bumptech.glide.load.MultiTransformation {
   <init>(...);
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.Option$CacheKeyUpdater
-keepclassmembers class com.bumptech.glide.load.Option$CacheKeyUpdater {
}

-keep class com.bumptech.glide.load.Option
-keepclassmembers class com.bumptech.glide.load.Option {
   *** getDefaultValue(...);
   *** disk(...);
   *** disk(...);
   *** memory(...);
   *** memory(...);
   *** update(...);
}

-keep class com.bumptech.glide.load.Options
-keepclassmembers class com.bumptech.glide.load.Options {
   <init>(...);
   *** get(...);
   *** putAll(...);
   *** set(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.PreferredColorSpace
-keepclassmembers class com.bumptech.glide.load.PreferredColorSpace {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener
-keepclassmembers class com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener {
   <init>(...);
   *** onHeaderDecoded(...);
}

-keep class com.bumptech.glide.load.resource.SimpleResource
-keepclassmembers class com.bumptech.glide.load.resource.SimpleResource {
   <init>(...);
   *** getResourceClass(...);
   *** getSize(...);
   *** get(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.UnitTransformation
-keepclassmembers class com.bumptech.glide.load.resource.UnitTransformation {
   *** get(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder {
   <init>(...);
   <init>(...);
   *** transcode(...);
}

-keep class com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** transcode(...);
}

-keep class com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder {
   <init>(...);
   *** transcode(...);
}

-keep class com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder {
   <init>(...);
   *** transcode(...);
}

-keep class com.bumptech.glide.load.resource.transcode.ResourceTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.ResourceTranscoder {
}

-keep class com.bumptech.glide.load.resource.transcode.TranscoderRegistry
-keepclassmembers class com.bumptech.glide.load.resource.transcode.TranscoderRegistry {
   <init>(...);
   *** get(...);
   *** getTranscodeClasses(...);
   *** register(...);
}

-keep class com.bumptech.glide.load.resource.transcode.UnitTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.UnitTranscoder {
   <init>(...);
   *** get(...);
   *** transcode(...);
}

-keep class com.bumptech.glide.load.resource.file.FileDecoder
-keepclassmembers class com.bumptech.glide.load.resource.file.FileDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.file.FileResource
-keepclassmembers class com.bumptech.glide.load.resource.file.FileResource {
   <init>(...);
}

-keep class com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder
-keepclassmembers class com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder {
   *** byteBufferDecoder(...);
   *** streamDecoder(...);
}

-keep class com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat
-keepclassmembers class com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat {
   *** getDrawable(...);
   *** getDrawable(...);
}

-keep class com.bumptech.glide.load.resource.drawable.DrawableResource
-keepclassmembers class com.bumptech.glide.load.resource.drawable.DrawableResource {
   <init>(...);
   *** get(...);
   *** initialize(...);
   *** recycle(...);
   *** getResourceClass(...);
   *** getSize(...);
}

-keep class com.bumptech.glide.load.resource.drawable.DrawableResource
-keepclassmembers class com.bumptech.glide.load.resource.drawable.DrawableResource {
   *** getResourceClass(...);
   *** getSize(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions
-keepclassmembers class com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions {
   <init>(...);
   *** crossFade(...);
   *** crossFade(...);
   *** crossFade(...);
   *** crossFade(...);
   *** with(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
}

-keep class com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder
-keepclassmembers class com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder
-keepclassmembers class com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory
-keepclassmembers class com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory {
   <init>(...);
   *** getDataClass(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.resource.bytes.ByteBufferRewinder
-keepclassmembers class com.bumptech.glide.load.resource.bytes.ByteBufferRewinder {
   <init>(...);
   *** cleanup(...);
   *** rewindAndGet(...);
}

-keep class com.bumptech.glide.load.resource.bytes.BytesResource
-keepclassmembers class com.bumptech.glide.load.resource.bytes.BytesResource {
   <init>(...);
   *** getResourceClass(...);
   *** getSize(...);
   *** get(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder {
   <init>(...);
   *** encode(...);
   *** getEncodeStrategy(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapEncoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapEncoder {
   <init>(...);
   <init>(...);
   *** encode(...);
   *** getEncodeStrategy(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapDrawableResource
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapDrawableResource {
   <init>(...);
   *** getResourceClass(...);
   *** getSize(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapResource
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapResource {
   <init>(...);
   *** getResourceClass(...);
   *** getSize(...);
   *** get(...);
   *** initialize(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapTransformation
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapTransformation {
   <init>(...);
   *** transform(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapTransformation
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapTransformation {
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions {
   <init>(...);
   *** crossFade(...);
   *** crossFade(...);
   *** crossFade(...);
   *** crossFade(...);
   *** transitionUsing(...);
   *** with(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
   *** withWrapped(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.CenterCrop
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.CenterCrop {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.CenterInside
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.CenterInside {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.CircleCrop
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.CircleCrop {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser {
   <init>(...);
   *** getOrientation(...);
   *** getOrientation(...);
   *** getType(...);
   *** getType(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks {
}

-keep class com.bumptech.glide.load.resource.bitmap.Downsampler
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler {
   <init>(...);
   *** decode(...);
   *** decode(...);
   *** decode(...);
   *** decode(...);
   *** handles(...);
   *** handles(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy {
   <init>(...);
   *** getSampleSizeRounding(...);
   *** getScaleFactor(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy {
   *** getSampleSizeRounding(...);
   *** getScaleFactor(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.DrawableTransformation
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.DrawableTransformation {
   <init>(...);
   *** asBitmapDrawable(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser {
   <init>(...);
   *** getOrientation(...);
   *** getOrientation(...);
   *** getType(...);
   *** getType(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.FitCenter
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FitCenter {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.GranularRoundedCorners
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GranularRoundedCorners {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.HardwareConfigState
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.HardwareConfigState {
   *** getInstance(...);
   *** areHardwareBitmapsBlocked(...);
   *** blockHardwareBitmaps(...);
   *** isHardwareConfigAllowed(...);
   *** unblockHardwareBitmaps(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource {
   *** getResourceClass(...);
   *** getSize(...);
   *** get(...);
   *** initialize(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream {
   <init>(...);
   *** fixMarkLimit(...);
   *** release(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.Rotate
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Rotate {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.RoundedCorners
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RoundedCorners {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.TransformationUtils
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.TransformationUtils {
   *** getBitmapDrawableLock(...);
   *** centerCrop(...);
   *** centerInside(...);
   *** circleCrop(...);
   *** fitCenter(...);
   *** getExifOrientationDegrees(...);
   *** isExifOrientationRequired(...);
   *** rotateImage(...);
   *** rotateImageExif(...);
   *** roundedCorners(...);
   *** roundedCorners(...);
   *** roundedCorners(...);
   *** setAlpha(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder {
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.VideoDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.VideoDecoder {
   *** asset(...);
   *** byteBuffer(...);
   *** decode(...);
   *** handles(...);
   *** parcel(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifDrawableEncoder
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableEncoder {
   <init>(...);
   *** encode(...);
   *** getEncodeStrategy(...);
}

-keep class com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder
-keepclassmembers class com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder {
   <init>(...);
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifBitmapProvider
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifBitmapProvider {
   <init>(...);
   <init>(...);
   *** obtain(...);
   *** obtainByteArray(...);
   *** obtainIntArray(...);
   *** release(...);
   *** release(...);
   *** release(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifDrawable
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable {
   <init>(...);
   <init>(...);
   *** getBuffer(...);
   *** getFirstFrame(...);
   *** getFrameCount(...);
   *** getFrameIndex(...);
   *** getFrameTransformation(...);
   *** isRunning(...);
   *** getOpacity(...);
   *** getSize(...);
   *** clearAnimationCallbacks(...);
   *** draw(...);
   *** onFrameReady(...);
   *** recycle(...);
   *** registerAnimationCallback(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setFrameTransformation(...);
   *** setLoopCount(...);
   *** start(...);
   *** startFromFirstFrame(...);
   *** stop(...);
   *** unregisterAnimationCallback(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifDrawableResource
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableResource {
   <init>(...);
   *** getResourceClass(...);
   *** getSize(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifDrawableTransformation
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableTransformation {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifOptions
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifOptions {
}

-keep class com.bumptech.glide.load.resource.gif.StreamGifDecoder
-keepclassmembers class com.bumptech.glide.load.resource.gif.StreamGifDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory
-keepclassmembers class com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory {
}

-keep class com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** buildFetcher(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.AssetUriLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.AssetUriLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** buildFetcher(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.AssetUriLoader
-keepclassmembers class com.bumptech.glide.load.model.AssetUriLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory
-keepclassmembers class com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ByteArrayLoader$Converter
-keepclassmembers class com.bumptech.glide.load.model.ByteArrayLoader$Converter {
}

-keep class com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ByteArrayLoader
-keepclassmembers class com.bumptech.glide.load.model.ByteArrayLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.StringLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.StringLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.StringLoader
-keepclassmembers class com.bumptech.glide.load.model.StringLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.FileLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.FileLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory {
   <init>(...);
}

-keep class com.bumptech.glide.load.model.FileLoader$FileOpener
-keepclassmembers class com.bumptech.glide.load.model.FileLoader$FileOpener {
}

-keep class com.bumptech.glide.load.model.FileLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.FileLoader$StreamFactory {
   <init>(...);
}

-keep class com.bumptech.glide.load.model.FileLoader
-keepclassmembers class com.bumptech.glide.load.model.FileLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ResourceLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ResourceLoader$UriFactory
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader$UriFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ResourceLoader
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory
-keepclassmembers class com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory {
}

-keep class com.bumptech.glide.load.model.UriLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.UriLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.UriLoader
-keepclassmembers class com.bumptech.glide.load.model.UriLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.UrlUriLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.UrlUriLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.UrlUriLoader
-keepclassmembers class com.bumptech.glide.load.model.UrlUriLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.ByteBufferEncoder
-keepclassmembers class com.bumptech.glide.load.model.ByteBufferEncoder {
   <init>(...);
   *** encode(...);
}

-keep class com.bumptech.glide.load.model.ByteBufferFileLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.ByteBufferFileLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ByteBufferFileLoader
-keepclassmembers class com.bumptech.glide.load.model.ByteBufferFileLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.DataUrlLoader$DataDecoder
-keepclassmembers class com.bumptech.glide.load.model.DataUrlLoader$DataDecoder {
}

-keep class com.bumptech.glide.load.model.DataUrlLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.DataUrlLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.DataUrlLoader
-keepclassmembers class com.bumptech.glide.load.model.DataUrlLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.GlideUrl
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCacheKey(...);
   *** getHeaders(...);
   *** toStringUrl(...);
   *** toURL(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.model.Headers
-keepclassmembers class com.bumptech.glide.load.model.Headers {
}

-keep class com.bumptech.glide.load.model.Headers
-keepclassmembers class com.bumptech.glide.load.model.Headers {
}

-keep class com.bumptech.glide.load.model.Headers
-keepclassmembers class com.bumptech.glide.load.model.Headers {
}

-keep class com.bumptech.glide.load.model.LazyHeaderFactory
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaderFactory {
}

-keep class com.bumptech.glide.load.model.Model
-keepclassmembers class com.bumptech.glide.load.model.Model {
}

-keep class com.bumptech.glide.load.model.ModelLoader$LoadData
-keepclassmembers class com.bumptech.glide.load.model.ModelLoader$LoadData {
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.load.model.ModelLoader
-keepclassmembers class com.bumptech.glide.load.model.ModelLoader {
}

-keep class com.bumptech.glide.load.model.ModelLoaderFactory
-keepclassmembers class com.bumptech.glide.load.model.ModelLoaderFactory {
}

-keep class com.bumptech.glide.load.model.LazyHeaders$Builder
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders$Builder {
   <init>(...);
   *** addHeader(...);
   *** addHeader(...);
   *** build(...);
   *** setHeader(...);
   *** setHeader(...);
}

-keep class com.bumptech.glide.load.model.LazyHeaders
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders {
   *** getHeaders(...);
}

-keep class com.bumptech.glide.load.model.MediaStoreFileLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.MediaStoreFileLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.MediaStoreFileLoader
-keepclassmembers class com.bumptech.glide.load.model.MediaStoreFileLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.ModelCache
-keepclassmembers class com.bumptech.glide.load.model.ModelCache {
   <init>(...);
   <init>(...);
   *** clear(...);
   *** get(...);
   *** put(...);
}

-keep class com.bumptech.glide.load.model.ModelLoaderRegistry
-keepclassmembers class com.bumptech.glide.load.model.ModelLoaderRegistry {
   <init>(...);
   *** append(...);
   *** build(...);
   *** getDataClasses(...);
   *** getModelLoaders(...);
   *** prepend(...);
   *** remove(...);
   *** replace(...);
}

-keep class com.bumptech.glide.load.model.MultiModelLoaderFactory
-keepclassmembers class com.bumptech.glide.load.model.MultiModelLoaderFactory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.model.StreamEncoder
-keepclassmembers class com.bumptech.glide.load.model.StreamEncoder {
   <init>(...);
   *** encode(...);
}

-keep class com.bumptech.glide.load.model.UnitModelLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.UnitModelLoader$Factory {
   <init>(...);
   *** getInstance(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.UnitModelLoader
-keepclassmembers class com.bumptech.glide.load.model.UnitModelLoader {
   <init>(...);
   *** getInstance(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.QMediaStoreUriLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.QMediaStoreUriLoader {
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.BaseGlideUrlLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.BaseGlideUrlLoader {
   <init>(...);
   <init>(...);
   *** buildLoadData(...);
   *** getAlternateUrls(...);
   *** getHeaders(...);
   *** getUrl(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.BaseGlideUrlLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.BaseGlideUrlLoader {
   *** getUrl(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.stream.HttpGlideUrlLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpGlideUrlLoader {
   <init>(...);
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.HttpUriLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpUriLoader$Factory {
   <init>(...);
}

-keep class com.bumptech.glide.load.model.stream.HttpUriLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpUriLoader {
   <init>(...);
}

-keep class com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.stream.UrlLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.UrlLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.engine.DecodePath
-keepclassmembers class com.bumptech.glide.load.engine.DecodePath {
   <init>(...);
}

-keep class com.bumptech.glide.load.engine.DiskCacheStrategy
-keepclassmembers class com.bumptech.glide.load.engine.DiskCacheStrategy {
   <init>(...);
   *** decodeCachedData(...);
   *** decodeCachedResource(...);
   *** isDataCacheable(...);
   *** isResourceCacheable(...);
}

-keep class com.bumptech.glide.load.engine.DiskCacheStrategy
-keepclassmembers class com.bumptech.glide.load.engine.DiskCacheStrategy {
   *** decodeCachedData(...);
   *** decodeCachedResource(...);
   *** isDataCacheable(...);
   *** isResourceCacheable(...);
}

-keep class com.bumptech.glide.load.engine.Engine$LoadStatus
-keepclassmembers class com.bumptech.glide.load.engine.Engine$LoadStatus {
   *** cancel(...);
}

-keep class com.bumptech.glide.load.engine.Engine
-keepclassmembers class com.bumptech.glide.load.engine.Engine {
   <init>(...);
   *** clearDiskCache(...);
   *** load(...);
   *** onResourceRemoved(...);
   *** release(...);
   *** shutdown(...);
}

-keep class com.bumptech.glide.load.engine.GlideException
-keepclassmembers class com.bumptech.glide.load.engine.GlideException {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCauses(...);
   *** getOrigin(...);
   *** setOrigin(...);
   *** getRootCauses(...);
   *** logRootCauses(...);
}

-keep class com.bumptech.glide.load.engine.Initializable
-keepclassmembers class com.bumptech.glide.load.engine.Initializable {
}

-keep class com.bumptech.glide.load.engine.Resource
-keepclassmembers class com.bumptech.glide.load.engine.Resource {
}

-keep class com.bumptech.glide.load.engine.LoadPath
-keepclassmembers class com.bumptech.glide.load.engine.LoadPath {
   <init>(...);
   *** getDataClass(...);
}

-keep class com.bumptech.glide.load.engine.prefill.BitmapPreFiller
-keepclassmembers class com.bumptech.glide.load.engine.prefill.BitmapPreFiller {
   <init>(...);
   *** preFill(...);
}

-keep class com.bumptech.glide.load.engine.prefill.PreFillType$Builder
-keepclassmembers class com.bumptech.glide.load.engine.prefill.PreFillType$Builder {
   <init>(...);
   <init>(...);
   *** setConfig(...);
   *** setWeight(...);
}

-keep class com.bumptech.glide.load.engine.prefill.PreFillType
-keepclassmembers class com.bumptech.glide.load.engine.prefill.PreFillType {
}

-keep class com.bumptech.glide.load.engine.cache.DiskCacheAdapter$Factory
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheAdapter$Factory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.engine.cache.DiskCacheAdapter
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheAdapter {
   <init>(...);
   *** clear(...);
   *** delete(...);
   *** get(...);
   *** put(...);
}

-keep class com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter {
}

-keep class com.bumptech.glide.load.engine.cache.DiskLruCacheFactory
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheFactory {
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper {
   <init>(...);
   *** clear(...);
   *** create(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** put(...);
}

-keep class com.bumptech.glide.load.engine.cache.ExternalCacheDiskCacheFactory
-keepclassmembers class com.bumptech.glide.load.engine.cache.ExternalCacheDiskCacheFactory {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.load.engine.cache.ExternalPreferredCacheDiskCacheFactory
-keepclassmembers class com.bumptech.glide.load.engine.cache.ExternalPreferredCacheDiskCacheFactory {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.load.engine.cache.DiskCache$Factory
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCache$Factory {
}

-keep class com.bumptech.glide.load.engine.cache.DiskCache$Factory
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCache$Factory {
}

-keep class com.bumptech.glide.load.engine.cache.DiskCache$Factory
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCache$Factory {
}

-keep class com.bumptech.glide.load.engine.cache.DiskCache$Writer
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCache$Writer {
}

-keep class com.bumptech.glide.load.engine.cache.DiskCache
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCache {
}

-keep class com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener {
}

-keep class mono.com.bumptech.glide.load.engine.cache.MemoryCache_ResourceRemovedListenerImplementor
-keepclassmembers class mono.com.bumptech.glide.load.engine.cache.MemoryCache_ResourceRemovedListenerImplementor {
}

-keep class com.bumptech.glide.load.engine.cache.MemoryCache
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemoryCache {
}

-keep class com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory
-keepclassmembers class com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.load.engine.cache.LruResourceCache
-keepclassmembers class com.bumptech.glide.load.engine.cache.LruResourceCache {
   <init>(...);
   *** getSize(...);
   *** onItemEvicted(...);
   *** put(...);
   *** remove(...);
   *** setResourceRemovedListener(...);
   *** trimMemory(...);
}

-keep class com.bumptech.glide.load.engine.cache.MemoryCacheAdapter
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemoryCacheAdapter {
   <init>(...);
   *** getCurrentSize(...);
   *** getMaxSize(...);
   *** clearMemory(...);
   *** put(...);
   *** remove(...);
   *** setResourceRemovedListener(...);
   *** setSizeMultiplier(...);
   *** trimMemory(...);
}

-keep class com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder {
   <init>(...);
   *** build(...);
   *** setArrayPoolSize(...);
   *** setBitmapPoolScreens(...);
   *** setLowMemoryMaxSizeMultiplier(...);
   *** setMaxSizeMultiplier(...);
   *** setMemoryCacheScreens(...);
}

-keep class com.bumptech.glide.load.engine.cache.MemorySizeCalculator
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator {
   *** getArrayPoolSizeInBytes(...);
   *** getBitmapPoolSize(...);
   *** getMemoryCacheSize(...);
}

-keep class com.bumptech.glide.load.engine.cache.SafeKeyGenerator
-keepclassmembers class com.bumptech.glide.load.engine.cache.SafeKeyGenerator {
   <init>(...);
   *** getSafeKey(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool {
   *** offer(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter {
   <init>(...);
   *** getMaxSize(...);
   *** clearMemory(...);
   *** get(...);
   *** getDirty(...);
   *** put(...);
   *** setSizeMultiplier(...);
   *** trimMemory(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter {
   <init>(...);
   *** getElementSizeInBytes(...);
   *** getTag(...);
   *** getArrayLength(...);
   *** newArray(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter {
   <init>(...);
   *** getElementSizeInBytes(...);
   *** getTag(...);
   *** getArrayLength(...);
   *** newArray(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.Poolable
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.Poolable {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool {
   <init>(...);
   <init>(...);
   *** clearMemory(...);
   *** get(...);
   *** getExact(...);
   *** put(...);
   *** put(...);
   *** trimMemory(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool {
   <init>(...);
   <init>(...);
   *** getCurrentSize(...);
   *** getMaxSize(...);
   *** clearMemory(...);
   *** evictionCount(...);
   *** get(...);
   *** getDirty(...);
   *** hitCount(...);
   *** missCount(...);
   *** put(...);
   *** setSizeMultiplier(...);
   *** trimMemory(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy {
   <init>(...);
   *** get(...);
   *** getSize(...);
   *** logBitmap(...);
   *** logBitmap(...);
   *** put(...);
   *** removeLast(...);
}

-keep class com.bumptech.glide.load.engine.executor.GlideExecutor$Builder
-keepclassmembers class com.bumptech.glide.load.engine.executor.GlideExecutor$Builder {
   *** build(...);
   *** setName(...);
   *** setThreadCount(...);
   *** setThreadTimeoutMillis(...);
   *** setUncaughtThrowableStrategy(...);
}

-keep class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy
-keepclassmembers class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy {
}

-keep class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy
-keepclassmembers class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy {
}

-keep class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy
-keepclassmembers class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy {
}

-keep class com.bumptech.glide.load.engine.executor.GlideExecutor
-keepclassmembers class com.bumptech.glide.load.engine.executor.GlideExecutor {
   *** isShutdown(...);
   *** isTerminated(...);
   *** awaitTermination(...);
   *** calculateBestThreadCount(...);
   *** execute(...);
   *** invokeAll(...);
   *** invokeAll(...);
   *** invokeAny(...);
   *** invokeAny(...);
   *** newAnimationBuilder(...);
   *** newAnimationExecutor(...);
   *** newAnimationExecutor(...);
   *** newDiskCacheBuilder(...);
   *** newDiskCacheExecutor(...);
   *** newDiskCacheExecutor(...);
   *** newDiskCacheExecutor(...);
   *** newSourceBuilder(...);
   *** newSourceExecutor(...);
   *** newSourceExecutor(...);
   *** newSourceExecutor(...);
   *** newUnlimitedSourceExecutor(...);
   *** shutdown(...);
   *** shutdownNow(...);
   *** submit(...);
   *** submit(...);
   *** submit(...);
}

-keep class com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher
-keepclassmembers class com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher {
   <init>(...);
   *** getDataClass(...);
   *** close(...);
   *** loadResource(...);
}

-keep class com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher {
   <init>(...);
   *** getDataClass(...);
   *** close(...);
   *** loadResource(...);
}

-keep class com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher {
   <init>(...);
   *** getDataClass(...);
   *** close(...);
   *** loadResource(...);
}

-keep class com.bumptech.glide.load.data.StreamAssetPathFetcher
-keepclassmembers class com.bumptech.glide.load.data.StreamAssetPathFetcher {
   <init>(...);
   *** getDataClass(...);
   *** close(...);
   *** loadResource(...);
}

-keep class com.bumptech.glide.load.data.StreamLocalUriFetcher
-keepclassmembers class com.bumptech.glide.load.data.StreamLocalUriFetcher {
   <init>(...);
   *** getDataClass(...);
   *** close(...);
   *** loadResource(...);
}

-keep class com.bumptech.glide.load.data.AssetPathFetcher
-keepclassmembers class com.bumptech.glide.load.data.AssetPathFetcher {
   <init>(...);
   *** getDataSource(...);
   *** cancel(...);
   *** cleanup(...);
   *** close(...);
   *** loadData(...);
   *** loadResource(...);
   *** getDataClass(...);
}

-keep class com.bumptech.glide.load.data.AssetPathFetcher
-keepclassmembers class com.bumptech.glide.load.data.AssetPathFetcher {
   *** close(...);
   *** loadResource(...);
   *** getDataClass(...);
}

-keep class com.bumptech.glide.load.data.BufferedOutputStream
-keepclassmembers class com.bumptech.glide.load.data.BufferedOutputStream {
   <init>(...);
   *** write(...);
}

-keep class com.bumptech.glide.load.data.DataRewinderRegistry
-keepclassmembers class com.bumptech.glide.load.data.DataRewinderRegistry {
   <init>(...);
   *** build(...);
   *** register(...);
}

-keep class com.bumptech.glide.load.data.ExifOrientationStream
-keepclassmembers class com.bumptech.glide.load.data.ExifOrientationStream {
   <init>(...);
}

-keep class com.bumptech.glide.load.data.HttpUrlFetcher
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher {
   <init>(...);
   *** getDataClass(...);
   *** getDataSource(...);
   *** cancel(...);
   *** cleanup(...);
   *** loadData(...);
}

-keep class com.bumptech.glide.load.data.DataFetcher$DataCallback
-keepclassmembers class com.bumptech.glide.load.data.DataFetcher$DataCallback {
}

-keep class com.bumptech.glide.load.data.DataFetcher
-keepclassmembers class com.bumptech.glide.load.data.DataFetcher {
}

-keep class com.bumptech.glide.load.data.DataRewinder$Factory
-keepclassmembers class com.bumptech.glide.load.data.DataRewinder$Factory {
}

-keep class com.bumptech.glide.load.data.DataRewinder
-keepclassmembers class com.bumptech.glide.load.data.DataRewinder {
}

-keep class com.bumptech.glide.load.data.InputStreamRewinder$Factory
-keepclassmembers class com.bumptech.glide.load.data.InputStreamRewinder$Factory {
   <init>(...);
   *** getDataClass(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.data.InputStreamRewinder
-keepclassmembers class com.bumptech.glide.load.data.InputStreamRewinder {
   <init>(...);
   *** cleanup(...);
   *** fixMarkLimits(...);
   *** rewindAndGet(...);
}

-keep class com.bumptech.glide.load.data.LocalUriFetcher
-keepclassmembers class com.bumptech.glide.load.data.LocalUriFetcher {
   <init>(...);
   *** getDataSource(...);
   *** cancel(...);
   *** cleanup(...);
   *** close(...);
   *** loadData(...);
   *** loadResource(...);
   *** getDataClass(...);
}

-keep class com.bumptech.glide.load.data.LocalUriFetcher
-keepclassmembers class com.bumptech.glide.load.data.LocalUriFetcher {
   *** close(...);
   *** loadResource(...);
   *** getDataClass(...);
}

-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory
-keepclassmembers class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory {
   <init>(...);
   *** getDataClass(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder
-keepclassmembers class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder {
   <init>(...);
   *** isSupported(...);
   *** cleanup(...);
   *** rewindAndGet(...);
}

-keep class com.bumptech.glide.load.data.mediastore.ThumbnailQuery
-keepclassmembers class com.bumptech.glide.load.data.mediastore.ThumbnailQuery {
}

-keep class com.bumptech.glide.load.data.mediastore.MediaStoreUtil
-keepclassmembers class com.bumptech.glide.load.data.mediastore.MediaStoreUtil {
   *** isMediaStoreImageUri(...);
   *** isMediaStoreUri(...);
   *** isMediaStoreVideoUri(...);
   *** isThumbnailSize(...);
}

-keep class com.bumptech.glide.load.data.mediastore.ThumbFetcher
-keepclassmembers class com.bumptech.glide.load.data.mediastore.ThumbFetcher {
   *** getDataClass(...);
   *** getDataSource(...);
   *** buildImageFetcher(...);
   *** buildVideoFetcher(...);
   *** cancel(...);
   *** cleanup(...);
   *** loadData(...);
}

# ACW for Xamarin.Android.Glide.DiskLruCache
-keep class com.bumptech.glide.disklrucache.DiskLruCache$Editor
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Editor {
   *** abort(...);
   *** abortUnlessCommitted(...);
   *** commit(...);
   *** getFile(...);
   *** getString(...);
   *** set(...);
}

-keep class com.bumptech.glide.disklrucache.DiskLruCache$Value
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Value {
   *** edit(...);
   *** getFile(...);
   *** getLength(...);
   *** getString(...);
}

-keep class com.bumptech.glide.disklrucache.DiskLruCache
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache {
   *** getDirectory(...);
   *** isClosed(...);
   *** getMaxSize(...);
   *** setMaxSize(...);
   *** close(...);
   *** delete(...);
   *** edit(...);
   *** flush(...);
   *** get(...);
   *** open(...);
   *** remove(...);
   *** size(...);
}

# ACW for Xamarin.Android.Glide.GifDecoder
-keep class com.bumptech.glide.gifdecoder.GifHeader
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeader {
   <init>(...);
   *** getHeight(...);
   *** getNumFrames(...);
   *** getStatus(...);
   *** getWidth(...);
}

-keep class com.bumptech.glide.gifdecoder.GifHeaderParser
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser {
   <init>(...);
   *** isAnimated(...);
   *** clear(...);
   *** parseHeader(...);
   *** setData(...);
   *** setData(...);
}

-keep class com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider {
}

-keep class com.bumptech.glide.gifdecoder.GifDecoder$GifDecodeStatus
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder$GifDecodeStatus {
}

-keep class com.bumptech.glide.gifdecoder.GifDecoder
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder {
}

-keep class com.bumptech.glide.gifdecoder.GifDecoder
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder {
}

-keep class com.bumptech.glide.gifdecoder.GifDecoder
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder {
}

-keep class com.bumptech.glide.gifdecoder.StandardGifDecoder
-keepclassmembers class com.bumptech.glide.gifdecoder.StandardGifDecoder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getByteSize(...);
   *** getCurrentFrameIndex(...);
   *** getData(...);
   *** getFrameCount(...);
   *** getHeight(...);
   *** getLoopCount(...);
   *** getNetscapeLoopCount(...);
   *** getNextDelay(...);
   *** getNextFrame(...);
   *** getStatus(...);
   *** getTotalIterationCount(...);
   *** getWidth(...);
   *** advance(...);
   *** clear(...);
   *** getDelay(...);
   *** read(...);
   *** read(...);
   *** resetFrameIndex(...);
   *** setData(...);
   *** setData(...);
   *** setData(...);
   *** setDefaultBitmapConfig(...);
}

# ACW for Xamarin.Android.Google.BillingClient
-keep class com.android.billingclient.api.BillingClient$Builder
-keepclassmembers class com.android.billingclient.api.BillingClient$Builder {
   *** build(...);
   *** enableAlternativeBilling(...);
   *** enablePendingPurchases(...);
   *** setListener(...);
}

-keep class com.android.billingclient.api.BillingClient
-keepclassmembers class com.android.billingclient.api.BillingClient {
   <init>(...);
   *** isReady(...);
   *** acknowledgePurchase(...);
   *** consumeAsync(...);
   *** endConnection(...);
   *** getConnectionState(...);
   *** isFeatureSupported(...);
   *** launchBillingFlow(...);
   *** newBuilder(...);
   *** queryProductDetailsAsync(...);
   *** queryPurchaseHistoryAsync(...);
   *** queryPurchaseHistoryAsync(...);
   *** queryPurchasesAsync(...);
   *** queryPurchasesAsync(...);
   *** querySkuDetailsAsync(...);
   *** showInAppMessages(...);
   *** startConnection(...);
}

-keep class com.android.billingclient.api.AccountIdentifiers
-keepclassmembers class com.android.billingclient.api.AccountIdentifiers {
   *** getObfuscatedAccountId(...);
   *** getObfuscatedProfileId(...);
}

-keep class com.android.billingclient.api.AcknowledgePurchaseParams$Builder
-keepclassmembers class com.android.billingclient.api.AcknowledgePurchaseParams$Builder {
   *** build(...);
   *** setPurchaseToken(...);
}

-keep class com.android.billingclient.api.AcknowledgePurchaseParams
-keepclassmembers class com.android.billingclient.api.AcknowledgePurchaseParams {
   *** getPurchaseToken(...);
   *** newBuilder(...);
}

-keep class com.android.billingclient.api.AlternativeChoiceDetails$Product
-keepclassmembers class com.android.billingclient.api.AlternativeChoiceDetails$Product {
   *** getId(...);
   *** getOfferToken(...);
   *** getType(...);
   *** equals(...);
   *** hashCode(...);
   *** toString(...);
}

-keep class com.android.billingclient.api.AlternativeChoiceDetails
-keepclassmembers class com.android.billingclient.api.AlternativeChoiceDetails {
   *** getExternalTransactionToken(...);
   *** getOriginalExternalTransactionId(...);
   *** getProducts(...);
}

-keep class com.android.billingclient.api.BillingClient
-keepclassmembers class com.android.billingclient.api.BillingClient {
   *** isReady(...);
   *** acknowledgePurchase(...);
   *** consumeAsync(...);
   *** endConnection(...);
   *** getConnectionState(...);
   *** isFeatureSupported(...);
   *** launchBillingFlow(...);
   *** queryProductDetailsAsync(...);
   *** queryPurchaseHistoryAsync(...);
   *** queryPurchaseHistoryAsync(...);
   *** queryPurchasesAsync(...);
   *** queryPurchasesAsync(...);
   *** querySkuDetailsAsync(...);
   *** showInAppMessages(...);
   *** startConnection(...);
}

-keep class com.android.billingclient.api.BillingFlowParams$Builder
-keepclassmembers class com.android.billingclient.api.BillingFlowParams$Builder {
   *** build(...);
   *** setIsOfferPersonalized(...);
   *** setObfuscatedAccountId(...);
   *** setObfuscatedProfileId(...);
   *** setProductDetailsParamsList(...);
   *** setSkuDetails(...);
   *** setSubscriptionUpdateParams(...);
}

-keep class com.android.billingclient.api.BillingFlowParams$ProductDetailsParams$Builder
-keepclassmembers class com.android.billingclient.api.BillingFlowParams$ProductDetailsParams$Builder {
   *** build(...);
   *** setOfferToken(...);
   *** setProductDetails(...);
}

-keep class com.android.billingclient.api.BillingFlowParams$ProductDetailsParams
-keepclassmembers class com.android.billingclient.api.BillingFlowParams$ProductDetailsParams {
   *** newBuilder(...);
   *** zza(...);
   *** zzb(...);
}

-keep class com.android.billingclient.api.BillingFlowParams$SubscriptionUpdateParams$Builder
-keepclassmembers class com.android.billingclient.api.BillingFlowParams$SubscriptionUpdateParams$Builder {
   *** build(...);
   *** setOldPurchaseToken(...);
   *** setOldSkuPurchaseToken(...);
   *** setOriginalExternalTransactionId(...);
   *** setReplaceProrationMode(...);
   *** setReplaceSkusProrationMode(...);
   *** setSubscriptionReplacementMode(...);
}

-keep class com.android.billingclient.api.BillingFlowParams$SubscriptionUpdateParams
-keepclassmembers class com.android.billingclient.api.BillingFlowParams$SubscriptionUpdateParams {
   *** newBuilder(...);
}

-keep class com.android.billingclient.api.BillingFlowParams
-keepclassmembers class com.android.billingclient.api.BillingFlowParams {
   *** newBuilder(...);
   *** zza(...);
   *** zzb(...);
   *** zzc(...);
   *** zzd(...);
   *** zze(...);
   *** zzf(...);
   *** zzg(...);
   *** zzh(...);
   *** zzp(...);
}

-keep class com.android.billingclient.api.BillingResult$Builder
-keepclassmembers class com.android.billingclient.api.BillingResult$Builder {
   *** build(...);
   *** setDebugMessage(...);
   *** setResponseCode(...);
}

-keep class com.android.billingclient.api.BillingResult
-keepclassmembers class com.android.billingclient.api.BillingResult {
   <init>(...);
   *** getDebugMessage(...);
   *** getResponseCode(...);
   *** newBuilder(...);
}

-keep class com.android.billingclient.api.ConsumeParams$Builder
-keepclassmembers class com.android.billingclient.api.ConsumeParams$Builder {
   *** build(...);
   *** setPurchaseToken(...);
}

-keep class com.android.billingclient.api.ConsumeParams
-keepclassmembers class com.android.billingclient.api.ConsumeParams {
   *** getPurchaseToken(...);
   *** newBuilder(...);
}

-keep class com.android.billingclient.api.AcknowledgePurchaseResponseListener
-keepclassmembers class com.android.billingclient.api.AcknowledgePurchaseResponseListener {
}

-keep class com.android.billingclient.api.AlternativeBillingListener
-keepclassmembers class com.android.billingclient.api.AlternativeBillingListener {
}

-keep class com.android.billingclient.api.BillingClientStateListener
-keepclassmembers class com.android.billingclient.api.BillingClientStateListener {
}

-keep class com.android.billingclient.api.ConsumeResponseListener
-keepclassmembers class com.android.billingclient.api.ConsumeResponseListener {
}

-keep class com.android.billingclient.api.InAppMessageResponseListener
-keepclassmembers class com.android.billingclient.api.InAppMessageResponseListener {
}

-keep class com.android.billingclient.api.InAppMessageParams$Builder
-keepclassmembers class com.android.billingclient.api.InAppMessageParams$Builder {
   <init>(...);
   *** addAllInAppMessageCategoriesToShow(...);
   *** addInAppMessageCategoryToShow(...);
   *** build(...);
}

-keep class com.android.billingclient.api.InAppMessageParams
-keepclassmembers class com.android.billingclient.api.InAppMessageParams {
   *** newBuilder(...);
}

-keep class com.android.billingclient.api.InAppMessageResult
-keepclassmembers class com.android.billingclient.api.InAppMessageResult {
   <init>(...);
   *** getPurchaseToken(...);
   *** getResponseCode(...);
}

-keep class com.android.billingclient.api.ProductDetailsResponseListener
-keepclassmembers class com.android.billingclient.api.ProductDetailsResponseListener {
}

-keep class com.android.billingclient.api.PurchaseHistoryResponseListener
-keepclassmembers class com.android.billingclient.api.PurchaseHistoryResponseListener {
}

-keep class com.android.billingclient.api.PurchasesResponseListener
-keepclassmembers class com.android.billingclient.api.PurchasesResponseListener {
}

-keep class com.android.billingclient.api.PurchasesUpdatedListener
-keepclassmembers class com.android.billingclient.api.PurchasesUpdatedListener {
}

-keep class com.android.billingclient.api.SkuDetailsResponseListener
-keepclassmembers class com.android.billingclient.api.SkuDetailsResponseListener {
}

-keep class com.android.billingclient.api.ProductDetails$OneTimePurchaseOfferDetails
-keepclassmembers class com.android.billingclient.api.ProductDetails$OneTimePurchaseOfferDetails {
   *** getFormattedPrice(...);
   *** getPriceAmountMicros(...);
   *** getPriceCurrencyCode(...);
   *** zza(...);
}

-keep class com.android.billingclient.api.ProductDetails$PricingPhase
-keepclassmembers class com.android.billingclient.api.ProductDetails$PricingPhase {
   *** getBillingCycleCount(...);
   *** getBillingPeriod(...);
   *** getFormattedPrice(...);
   *** getPriceAmountMicros(...);
   *** getPriceCurrencyCode(...);
   *** getRecurrenceMode(...);
}

-keep class com.android.billingclient.api.ProductDetails$PricingPhases
-keepclassmembers class com.android.billingclient.api.ProductDetails$PricingPhases {
   *** getPricingPhaseList(...);
}

-keep class com.android.billingclient.api.ProductDetails$SubscriptionOfferDetails
-keepclassmembers class com.android.billingclient.api.ProductDetails$SubscriptionOfferDetails {
   *** getBasePlanId(...);
   *** getOfferId(...);
   *** getOfferTags(...);
   *** getOfferToken(...);
   *** getPricingPhases(...);
}

-keep class com.android.billingclient.api.ProductDetails
-keepclassmembers class com.android.billingclient.api.ProductDetails {
   *** getDescription(...);
   *** getName(...);
   *** getProductId(...);
   *** getProductType(...);
   *** getTitle(...);
   *** getOneTimePurchaseOfferDetails(...);
   *** getSubscriptionOfferDetails(...);
   *** zza(...);
   *** zzc(...);
}

-keep class com.android.billingclient.api.Purchase
-keepclassmembers class com.android.billingclient.api.Purchase {
   <init>(...);
   *** getAccountIdentifiers(...);
   *** getDeveloperPayload(...);
   *** isAcknowledged(...);
   *** isAutoRenewing(...);
   *** getOrderId(...);
   *** getOriginalJson(...);
   *** getPackageName(...);
   *** getProducts(...);
   *** getPurchaseState(...);
   *** getPurchaseTime(...);
   *** getPurchaseToken(...);
   *** getQuantity(...);
   *** getSignature(...);
   *** getSkus(...);
}

-keep class com.android.billingclient.api.PurchaseHistoryRecord
-keepclassmembers class com.android.billingclient.api.PurchaseHistoryRecord {
   <init>(...);
   *** getDeveloperPayload(...);
   *** getOriginalJson(...);
   *** getProducts(...);
   *** getPurchaseTime(...);
   *** getPurchaseToken(...);
   *** getQuantity(...);
   *** getSignature(...);
   *** getSkus(...);
}

-keep class com.android.billingclient.api.QueryProductDetailsParams$Builder
-keepclassmembers class com.android.billingclient.api.QueryProductDetailsParams$Builder {
   *** build(...);
   *** setProductList(...);
}

-keep class com.android.billingclient.api.QueryProductDetailsParams$Product$Builder
-keepclassmembers class com.android.billingclient.api.QueryProductDetailsParams$Product$Builder {
   *** build(...);
   *** setProductId(...);
   *** setProductType(...);
}

-keep class com.android.billingclient.api.QueryProductDetailsParams$Product
-keepclassmembers class com.android.billingclient.api.QueryProductDetailsParams$Product {
   *** newBuilder(...);
   *** zza(...);
   *** zzb(...);
}

-keep class com.android.billingclient.api.QueryProductDetailsParams
-keepclassmembers class com.android.billingclient.api.QueryProductDetailsParams {
   *** newBuilder(...);
   *** zzb(...);
}

-keep class com.android.billingclient.api.QueryPurchaseHistoryParams$Builder
-keepclassmembers class com.android.billingclient.api.QueryPurchaseHistoryParams$Builder {
   *** build(...);
   *** setProductType(...);
}

-keep class com.android.billingclient.api.QueryPurchaseHistoryParams
-keepclassmembers class com.android.billingclient.api.QueryPurchaseHistoryParams {
   *** newBuilder(...);
   *** zza(...);
}

-keep class com.android.billingclient.api.QueryPurchasesParams$Builder
-keepclassmembers class com.android.billingclient.api.QueryPurchasesParams$Builder {
   *** build(...);
   *** setProductType(...);
}

-keep class com.android.billingclient.api.QueryPurchasesParams
-keepclassmembers class com.android.billingclient.api.QueryPurchasesParams {
   *** newBuilder(...);
   *** zza(...);
}

-keep class com.android.billingclient.api.SkuDetails
-keepclassmembers class com.android.billingclient.api.SkuDetails {
   <init>(...);
   *** getDescription(...);
   *** getFreeTrialPeriod(...);
   *** getIconUrl(...);
   *** getIntroductoryPrice(...);
   *** getIntroductoryPriceAmountMicros(...);
   *** getIntroductoryPriceCycles(...);
   *** getIntroductoryPricePeriod(...);
   *** getOriginalJson(...);
   *** getOriginalPrice(...);
   *** getOriginalPriceAmountMicros(...);
   *** getPrice(...);
   *** getPriceAmountMicros(...);
   *** getPriceCurrencyCode(...);
   *** getSku(...);
   *** getSubscriptionPeriod(...);
   *** getTitle(...);
   *** getType(...);
   *** zza(...);
   *** zzb(...);
   *** zzc(...);
   *** zzd(...);
   *** zze(...);
}

-keep class com.android.billingclient.api.SkuDetailsParams$Builder
-keepclassmembers class com.android.billingclient.api.SkuDetailsParams$Builder {
   *** build(...);
   *** setSkusList(...);
   *** setType(...);
}

-keep class com.android.billingclient.api.SkuDetailsParams
-keepclassmembers class com.android.billingclient.api.SkuDetailsParams {
   <init>(...);
   *** getSkuType(...);
   *** getSkusList(...);
   *** newBuilder(...);
}

# ACW for Xamarin.Essentials
# ACW for Xamarin.Firebase.Encoders
-keep class com.google.firebase.encoders.EncodingException
-keepclassmembers class com.google.firebase.encoders.EncodingException {
   <init>(...);
   <init>(...);
}

-keep class com.google.firebase.encoders.FieldDescriptor$Builder
-keepclassmembers class com.google.firebase.encoders.FieldDescriptor$Builder {
   *** build(...);
   *** withProperty(...);
}

-keep class com.google.firebase.encoders.FieldDescriptor
-keepclassmembers class com.google.firebase.encoders.FieldDescriptor {
   *** getName(...);
   *** builder(...);
   *** getProperty(...);
   *** of(...);
}

-keep class com.google.firebase.encoders.DataEncoder
-keepclassmembers class com.google.firebase.encoders.DataEncoder {
}

-keep class com.google.firebase.encoders.ObjectEncoderContext
-keepclassmembers class com.google.firebase.encoders.ObjectEncoderContext {
}

-keep class com.google.firebase.encoders.ValueEncoderContext
-keepclassmembers class com.google.firebase.encoders.ValueEncoderContext {
}

-keep class com.google.firebase.encoders.annotations.Encodable$Field
-keepclassmembers class com.google.firebase.encoders.annotations.Encodable$Field {
}

-keep class com.google.firebase.encoders.annotations.Encodable$Ignore
-keepclassmembers class com.google.firebase.encoders.annotations.Encodable$Ignore {
}

-keep class com.google.firebase.encoders.annotations.Encodable
-keepclassmembers class com.google.firebase.encoders.annotations.Encodable {
}

-keep class com.google.firebase.encoders.annotations.ExtraProperty
-keepclassmembers class com.google.firebase.encoders.annotations.ExtraProperty {
}

# ACW for Xamarin.Firebase.Encoders.JSON
-keep class com.google.firebase.encoders.json.BuildConfig
-keepclassmembers class com.google.firebase.encoders.json.BuildConfig {
   <init>(...);
}

-keep class com.google.firebase.encoders.json.NumberedEnum
-keepclassmembers class com.google.firebase.encoders.json.NumberedEnum {
}

# ACW for Xamarin.Firebase.Encoders.Proto
-keep class com.google.firebase.encoders.proto.AtProtobuf
-keepclassmembers class com.google.firebase.encoders.proto.AtProtobuf {
   <init>(...);
   *** build(...);
   *** builder(...);
   *** intEncoding(...);
   *** tag(...);
}

-keep class com.google.firebase.encoders.proto.Protobuf$IntEncoding
-keepclassmembers class com.google.firebase.encoders.proto.Protobuf$IntEncoding {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.firebase.encoders.proto.Protobuf
-keepclassmembers class com.google.firebase.encoders.proto.Protobuf {
}

-keep class com.google.firebase.encoders.proto.ProtoEnum
-keepclassmembers class com.google.firebase.encoders.proto.ProtoEnum {
}

-keep class com.google.firebase.encoders.proto.ProtobufEncoder
-keepclassmembers class com.google.firebase.encoders.proto.ProtobufEncoder {
   *** encode(...);
   *** encode(...);
}

# ACW for Xamarin.JavaX.Inject
-keep class javax.inject.Inject
-keepclassmembers class javax.inject.Inject {
}

-keep class javax.inject.Named
-keepclassmembers class javax.inject.Named {
}

-keep class javax.inject.Provider
-keepclassmembers class javax.inject.Provider {
}

-keep class javax.inject.Qualifier
-keepclassmembers class javax.inject.Qualifier {
}

-keep class javax.inject.Scope
-keepclassmembers class javax.inject.Scope {
}

-keep class javax.inject.Singleton
-keepclassmembers class javax.inject.Singleton {
}

# ACW for Xamarin.Jetbrains.Annotations
-keep class org.jetbrains.annotations.ApiStatus$AvailableSince
-keepclassmembers class org.jetbrains.annotations.ApiStatus$AvailableSince {
}

-keep class org.jetbrains.annotations.ApiStatus$Experimental
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Experimental {
}

-keep class org.jetbrains.annotations.ApiStatus$Internal
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Internal {
}

-keep class org.jetbrains.annotations.ApiStatus$NonExtendable
-keepclassmembers class org.jetbrains.annotations.ApiStatus$NonExtendable {
}

-keep class org.jetbrains.annotations.ApiStatus$Obsolete
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Obsolete {
}

-keep class org.jetbrains.annotations.ApiStatus$OverrideOnly
-keepclassmembers class org.jetbrains.annotations.ApiStatus$OverrideOnly {
}

-keep class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval
-keepclassmembers class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval {
}

-keep class org.jetbrains.annotations.ApiStatus
-keepclassmembers class org.jetbrains.annotations.ApiStatus {
}

-keep class org.jetbrains.annotations.Async$Execute
-keepclassmembers class org.jetbrains.annotations.Async$Execute {
}

-keep class org.jetbrains.annotations.Async$Schedule
-keepclassmembers class org.jetbrains.annotations.Async$Schedule {
}

-keep class org.jetbrains.annotations.Async
-keepclassmembers class org.jetbrains.annotations.Async {
}

-keep class org.jetbrains.annotations.Debug$Renderer
-keepclassmembers class org.jetbrains.annotations.Debug$Renderer {
}

-keep class org.jetbrains.annotations.Debug
-keepclassmembers class org.jetbrains.annotations.Debug {
}

-keep class org.jetbrains.annotations.Blocking
-keepclassmembers class org.jetbrains.annotations.Blocking {
}

-keep class org.jetbrains.annotations.BlockingExecutor
-keepclassmembers class org.jetbrains.annotations.BlockingExecutor {
}

-keep class org.jetbrains.annotations.CheckReturnValue
-keepclassmembers class org.jetbrains.annotations.CheckReturnValue {
}

-keep class org.jetbrains.annotations.Contract
-keepclassmembers class org.jetbrains.annotations.Contract {
}

-keep class org.jetbrains.annotations.MustBeInvokedByOverriders
-keepclassmembers class org.jetbrains.annotations.MustBeInvokedByOverriders {
}

-keep class org.jetbrains.annotations.Nls$Capitalization
-keepclassmembers class org.jetbrains.annotations.Nls$Capitalization {
   *** valueOf(...);
   *** values(...);
}

-keep class org.jetbrains.annotations.Nls
-keepclassmembers class org.jetbrains.annotations.Nls {
}

-keep class org.jetbrains.annotations.NonBlocking
-keepclassmembers class org.jetbrains.annotations.NonBlocking {
}

-keep class org.jetbrains.annotations.NonBlockingExecutor
-keepclassmembers class org.jetbrains.annotations.NonBlockingExecutor {
}

-keep class org.jetbrains.annotations.NonNls
-keepclassmembers class org.jetbrains.annotations.NonNls {
}

-keep class org.jetbrains.annotations.NotNull
-keepclassmembers class org.jetbrains.annotations.NotNull {
}

-keep class org.jetbrains.annotations.Nullable
-keepclassmembers class org.jetbrains.annotations.Nullable {
}

-keep class org.jetbrains.annotations.PropertyKey
-keepclassmembers class org.jetbrains.annotations.PropertyKey {
}

-keep class org.jetbrains.annotations.Range
-keepclassmembers class org.jetbrains.annotations.Range {
}

-keep class org.jetbrains.annotations.TestOnly
-keepclassmembers class org.jetbrains.annotations.TestOnly {
}

-keep class org.jetbrains.annotations.UnknownNullability
-keepclassmembers class org.jetbrains.annotations.UnknownNullability {
}

-keep class org.jetbrains.annotations.Unmodifiable
-keepclassmembers class org.jetbrains.annotations.Unmodifiable {
}

-keep class org.jetbrains.annotations.UnmodifiableView
-keepclassmembers class org.jetbrains.annotations.UnmodifiableView {
}

-keep class org.jetbrains.annotations.VisibleForTesting
-keepclassmembers class org.jetbrains.annotations.VisibleForTesting {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Identifier
-keepclassmembers class org.intellij.lang.annotations.Identifier {
}

-keep class org.intellij.lang.annotations.Language
-keepclassmembers class org.intellij.lang.annotations.Language {
}

-keep class org.intellij.lang.annotations.MagicConstant
-keepclassmembers class org.intellij.lang.annotations.MagicConstant {
}

-keep class org.intellij.lang.annotations.Pattern
-keepclassmembers class org.intellij.lang.annotations.Pattern {
}

-keep class org.intellij.lang.annotations.PrintFormat
-keepclassmembers class org.intellij.lang.annotations.PrintFormat {
}

-keep class org.intellij.lang.annotations.RegExp
-keepclassmembers class org.intellij.lang.annotations.RegExp {
}

-keep class org.intellij.lang.annotations.Subst
-keepclassmembers class org.intellij.lang.annotations.Subst {
}

-keep class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation {
}

-keep class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis {
}

-keep class org.intellij.lang.annotations.JdkConstants$CalendarMonth
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CalendarMonth {
}

-keep class org.intellij.lang.annotations.JdkConstants$CursorType
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CursorType {
}

-keep class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$FontStyle
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FontStyle {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$InputEventMask
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$InputEventMask {
}

-keep class org.intellij.lang.annotations.JdkConstants$ListSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$ListSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$PatternFlags
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$PatternFlags {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabPlacement
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabPlacement {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition {
}

-keep class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants
-keepclassmembers class org.intellij.lang.annotations.JdkConstants {
}

# ACW for Xamarin.Kotlin.StdLib
-keep class kotlin.Function
-keepclassmembers class kotlin.Function {
}

-keep class kotlin.sequences.Sequence
-keepclassmembers class kotlin.sequences.Sequence {
}

-keep class kotlin.jvm.internal.DefaultConstructorMarker
-keepclassmembers class kotlin.jvm.internal.DefaultConstructorMarker {
}

-keep class kotlin.jvm.functions.Function1
-keepclassmembers class kotlin.jvm.functions.Function1 {
}

-keep class kotlin.jvm.functions.Function2
-keepclassmembers class kotlin.jvm.functions.Function2 {
}

-keep class kotlin.coroutines.Continuation
-keepclassmembers class kotlin.coroutines.Continuation {
}

-keep class kotlin.coroutines.CoroutineContext$Key
-keepclassmembers class kotlin.coroutines.CoroutineContext$Key {
}

-keep class kotlin.coroutines.CoroutineContext
-keepclassmembers class kotlin.coroutines.CoroutineContext {
}

-keep class kotlin.collections.AbstractMutableList
-keepclassmembers class kotlin.collections.AbstractMutableList {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** remove(...);
   *** removeAt(...);
   *** set(...);
   *** size(...);
}

-keep class kotlin.collections.AbstractMutableList
-keepclassmembers class kotlin.collections.AbstractMutableList {
   *** add(...);
   *** getSize(...);
   *** removeAt(...);
   *** set(...);
   *** get(...);
}

-keep class kotlin.collections.ArrayDeque
-keepclassmembers class kotlin.collections.ArrayDeque {
   <init>(...);
   <init>(...);
   <init>(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** addAll(...);
   *** addFirst(...);
   *** addLast(...);
   *** first(...);
   *** firstOrNull(...);
   *** get(...);
   *** getSize(...);
   *** last(...);
   *** lastOrNull(...);
   *** removeAll(...);
   *** removeAt(...);
   *** removeFirst(...);
   *** removeFirstOrNull(...);
   *** removeLast(...);
   *** removeLastOrNull(...);
   *** retainAll(...);
   *** set(...);
   *** toArray(...);
}

# ACW for Xamarin.Kotlin.StdLib.Common
# ACW for Xamarin.Kotlin.StdLib.Jdk7
# ACW for Xamarin.Kotlin.StdLib.Jdk8
# ACW for Xamarin.KotlinX.Coroutines.Android
-keep class kotlinx.coroutines.android.HandlerDispatcher
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcher {
   <init>(...);
   *** delay(...);
   *** invokeOnTimeout(...);
   *** scheduleResumeAfterDelay(...);
}

-keep class kotlinx.coroutines.android.HandlerDispatcher
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcher {
   *** getImmediate(...);
   *** scheduleResumeAfterDelay(...);
   *** dispatch(...);
}

-keep class kotlinx.coroutines.android.HandlerDispatcherKt
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcherKt {
   *** awaitFrame(...);
   *** from(...);
   *** from(...);
}

# ACW for Xamarin.KotlinX.Coroutines.Core.Jvm
-keep class kotlinx.coroutines.flow.Flow
-keepclassmembers class kotlinx.coroutines.flow.Flow {
}

-keep class kotlinx.coroutines.flow.FlowCollector
-keepclassmembers class kotlinx.coroutines.flow.FlowCollector {
}

-keep class kotlinx.coroutines.flow.SharedFlow
-keepclassmembers class kotlinx.coroutines.flow.SharedFlow {
}

-keep class kotlinx.coroutines.flow.StateFlow
-keepclassmembers class kotlinx.coroutines.flow.StateFlow {
}

# ACW for Mono.Android.Export
# ACW for Microsoft.Maui
-keep class com.microsoft.maui.BuildConfig
-keepclassmembers class com.microsoft.maui.BuildConfig {
   <init>(...);
}

-keep class com.microsoft.maui.ImageLoaderCallback
-keepclassmembers class com.microsoft.maui.ImageLoaderCallback {
}

-keep class com.microsoft.maui.MauiViewGroup
-keepclassmembers class com.microsoft.maui.MauiViewGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInputTransparent(...);
   *** setInputTransparent(...);
   *** measureAndLayout(...);
   *** onLayout(...);
   *** sendBatchUpdate(...);
   *** sendViewBatchUpdate(...);
}

-keep class com.microsoft.maui.PlatformInterop
-keepclassmembers class com.microsoft.maui.PlatformInterop {
   <init>(...);
   *** createEditTextColorStateList(...);
   *** createNavigationBar(...);
   *** createNavigationBarArea(...);
   *** createNavigationBarOuterLayout(...);
   *** createShellAppBar(...);
   *** createShellCoordinatorLayout(...);
   *** createShellTabLayout(...);
   *** createShellViewPager(...);
   *** createToolbar(...);
   *** getButtonColorStateList(...);
   *** getCheckBoxColorStateList(...);
   *** getColorStateListForToolbarStyleableAttribute(...);
   *** getDefaultColorStateList(...);
   *** getEditTextColorStateList(...);
   *** getSemanticPlatformElement(...);
   *** getSwitchColorStateList(...);
   *** loadImageFromFile(...);
   *** loadImageFromFile(...);
   *** loadImageFromFont(...);
   *** loadImageFromFont(...);
   *** loadImageFromStream(...);
   *** loadImageFromStream(...);
   *** loadImageFromUri(...);
   *** loadImageFromUri(...);
   *** measureAndGetWidthAndHeight(...);
   *** removeFromParent(...);
   *** requestLayoutIfNeeded(...);
   *** set(...);
   *** setContentDescriptionForAutomationId(...);
   *** setPivotXIfNeeded(...);
   *** setPivotYIfNeeded(...);
}

# ACW for Microsoft.Maui.Controls.Compatibility
# ACW for Microsoft.Maui.Controls
# ACW for Microsoft.Maui.Essentials
# ACW for Xamarin.GooglePlayServices.Ads.Lite
-keep class com.google.ads.mediation.AbstractAdViewAdapter
-keepclassmembers class com.google.ads.mediation.AbstractAdViewAdapter {
   <init>(...);
   *** getBannerView(...);
   *** getInterstitialAdapterInfo(...);
   *** buildExtrasBundle(...);
   *** getAdUnitId(...);
   *** onDestroy(...);
   *** onImmersiveModeUpdated(...);
   *** onPause(...);
   *** onResume(...);
   *** requestBannerAd(...);
   *** requestInterstitialAd(...);
   *** showInterstitial(...);
}

-keep class com.google.ads.mediation.AbstractAdViewAdapter
-keepclassmembers class com.google.ads.mediation.AbstractAdViewAdapter {
   *** buildExtrasBundle(...);
}

-keep class com.google.ads.mediation.admob.AdMobAdapter
-keepclassmembers class com.google.ads.mediation.admob.AdMobAdapter {
   <init>(...);
   *** buildExtrasBundle(...);
}

-keep class com.google.android.gms.ads.AdapterResponseInfo
-keepclassmembers class com.google.android.gms.ads.AdapterResponseInfo {
   *** getAdError(...);
   *** getAdSourceId(...);
   *** getAdSourceInstanceId(...);
   *** getAdSourceInstanceName(...);
   *** getAdSourceName(...);
   *** getAdapterClassName(...);
   *** getCredentials(...);
   *** getLatencyMillis(...);
   *** zzb(...);
}

-keep class com.google.android.gms.ads.AdError
-keepclassmembers class com.google.android.gms.ads.AdError {
   <init>(...);
   <init>(...);
   *** getCause(...);
   *** getCode(...);
   *** getDomain(...);
   *** getMessage(...);
   *** zzb(...);
}

-keep class com.google.android.gms.ads.AdFormat
-keepclassmembers class com.google.android.gms.ads.AdFormat {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.android.gms.ads.AdInspectorError
-keepclassmembers class com.google.android.gms.ads.AdInspectorError {
   <init>(...);
}

-keep class com.google.android.gms.ads.AdListener
-keepclassmembers class com.google.android.gms.ads.AdListener {
   <init>(...);
   *** onAdClicked(...);
   *** onAdClosed(...);
   *** onAdFailedToLoad(...);
   *** onAdImpression(...);
   *** onAdLoaded(...);
   *** onAdOpened(...);
   *** onAdSwipeGestureClicked(...);
}

-keep class com.google.android.gms.ads.AdListener
-keepclassmembers class com.google.android.gms.ads.AdListener {
}

-keep class com.google.android.gms.ads.AdLoadCallback
-keepclassmembers class com.google.android.gms.ads.AdLoadCallback {
   <init>(...);
   *** onAdFailedToLoad(...);
   *** onAdLoaded(...);
}

-keep class com.google.android.gms.ads.AdLoadCallback
-keepclassmembers class com.google.android.gms.ads.AdLoadCallback {
}

-keep class com.google.android.gms.ads.AdRequest$Builder
-keepclassmembers class com.google.android.gms.ads.AdRequest$Builder {
   <init>(...);
   *** addCustomEventExtrasBundle(...);
   *** addKeyword(...);
   *** addNetworkExtrasBundle(...);
   *** build(...);
   *** setAdInfo(...);
   *** setAdString(...);
   *** setContentUrl(...);
   *** setHttpTimeoutMillis(...);
   *** setNeighboringContentUrls(...);
   *** setRequestAgent(...);
   *** zza(...);
   *** zzb(...);
   *** zzc(...);
   *** zzd(...);
   *** zze(...);
}

-keep class com.google.android.gms.ads.AdRequest
-keepclassmembers class com.google.android.gms.ads.AdRequest {
   <init>(...);
   *** getContentUrl(...);
   *** getCustomTargeting(...);
   *** getKeywords(...);
   *** getNeighboringContentUrls(...);
   *** getCustomEventExtrasBundle(...);
   *** getNetworkExtrasBundle(...);
   *** isTestDevice(...);
}

-keep class com.google.android.gms.ads.AdSize
-keepclassmembers class com.google.android.gms.ads.AdSize {
   <init>(...);
   *** getHeight(...);
   *** isAutoHeight(...);
   *** isFluid(...);
   *** isFullWidth(...);
   *** getWidth(...);
   *** getCurrentOrientationAnchoredAdaptiveBannerAdSize(...);
   *** getCurrentOrientationInlineAdaptiveBannerAdSize(...);
   *** getCurrentOrientationInterscrollerAdSize(...);
   *** getHeightInPixels(...);
   *** getInlineAdaptiveBannerAdSize(...);
   *** getLandscapeAnchoredAdaptiveBannerAdSize(...);
   *** getLandscapeInlineAdaptiveBannerAdSize(...);
   *** getLandscapeInterscrollerAdSize(...);
   *** getPortraitAnchoredAdaptiveBannerAdSize(...);
   *** getPortraitInlineAdaptiveBannerAdSize(...);
   *** getPortraitInterscrollerAdSize(...);
   *** getWidthInPixels(...);
}

-keep class com.google.android.gms.ads.AdValue
-keepclassmembers class com.google.android.gms.ads.AdValue {
   *** getCurrencyCode(...);
   *** getValueMicros(...);
   *** getPrecisionType(...);
   *** zza(...);
}

-keep class com.google.android.gms.ads.AdView
-keepclassmembers class com.google.android.gms.ads.AdView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** zza(...);
}

-keep class com.google.android.gms.ads.BaseAdView
-keepclassmembers class com.google.android.gms.ads.BaseAdView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAdListener(...);
   *** setAdListener(...);
   *** getAdSize(...);
   *** setAdSize(...);
   *** getAdUnitId(...);
   *** setAdUnitId(...);
   *** isLoading(...);
   *** getOnPaidEventListener(...);
   *** setOnPaidEventListener(...);
   *** getResponseInfo(...);
   *** destroy(...);
   *** loadAd(...);
   *** onLayout(...);
   *** pause(...);
   *** resume(...);
}

-keep class com.google.android.gms.ads.BaseAdView
-keepclassmembers class com.google.android.gms.ads.BaseAdView {
}

-keep class com.google.android.gms.ads.FullScreenContentCallback
-keepclassmembers class com.google.android.gms.ads.FullScreenContentCallback {
   <init>(...);
   *** onAdClicked(...);
   *** onAdDismissedFullScreenContent(...);
   *** onAdFailedToShowFullScreenContent(...);
   *** onAdImpression(...);
   *** onAdShowedFullScreenContent(...);
}

-keep class com.google.android.gms.ads.FullScreenContentCallback
-keepclassmembers class com.google.android.gms.ads.FullScreenContentCallback {
}

-keep class com.google.android.gms.ads.OnAdInspectorClosedListener
-keepclassmembers class com.google.android.gms.ads.OnAdInspectorClosedListener {
}

-keep class com.google.android.gms.ads.OnPaidEventListener
-keepclassmembers class com.google.android.gms.ads.OnPaidEventListener {
}

-keep class mono.com.google.android.gms.ads.OnPaidEventListenerImplementor
-keepclassmembers class mono.com.google.android.gms.ads.OnPaidEventListenerImplementor {
}

-keep class com.google.android.gms.ads.OnUserEarnedRewardListener
-keepclassmembers class com.google.android.gms.ads.OnUserEarnedRewardListener {
}

-keep class com.google.android.gms.ads.LoadAdError
-keepclassmembers class com.google.android.gms.ads.LoadAdError {
   <init>(...);
   *** getResponseInfo(...);
   *** zzb(...);
}

-keep class com.google.android.gms.ads.MobileAds
-keepclassmembers class com.google.android.gms.ads.MobileAds {
   *** getInitializationStatus(...);
   *** getRequestConfiguration(...);
   *** setRequestConfiguration(...);
   *** getVersion(...);
   *** getVersionString(...);
   *** disableMediationAdapterInitialization(...);
   *** enableSameAppKey(...);
   *** initialize(...);
   *** initialize(...);
   *** openAdInspector(...);
   *** openDebugMenu(...);
   *** registerRtbAdapter(...);
   *** registerWebView(...);
   *** setAppMuted(...);
   *** setAppVolume(...);
}

-keep class com.google.android.gms.ads.RequestConfiguration$Builder
-keepclassmembers class com.google.android.gms.ads.RequestConfiguration$Builder {
   <init>(...);
   *** build(...);
   *** setMaxAdContentRating(...);
   *** setTagForChildDirectedTreatment(...);
   *** setTagForUnderAgeOfConsent(...);
   *** setTestDeviceIds(...);
}

-keep class com.google.android.gms.ads.RequestConfiguration
-keepclassmembers class com.google.android.gms.ads.RequestConfiguration {
   *** getMaxAdContentRating(...);
   *** getTagForChildDirectedTreatment(...);
   *** getTagForUnderAgeOfConsent(...);
   *** getTestDeviceIds(...);
   *** toBuilder(...);
}

-keep class com.google.android.gms.ads.ResponseInfo
-keepclassmembers class com.google.android.gms.ads.ResponseInfo {
   *** getAdapterResponses(...);
   *** getLoadedAdapterResponseInfo(...);
   *** getMediationAdapterClassName(...);
   *** getResponseExtras(...);
   *** getResponseId(...);
   *** zzd(...);
}

-keep class com.google.android.gms.ads.VersionInfo
-keepclassmembers class com.google.android.gms.ads.VersionInfo {
   <init>(...);
   *** getMajorVersion(...);
   *** getMicroVersion(...);
   *** getMinorVersion(...);
}

-keep class com.google.android.gms.ads.VideoController$VideoLifecycleCallbacks
-keepclassmembers class com.google.android.gms.ads.VideoController$VideoLifecycleCallbacks {
   <init>(...);
   *** onVideoEnd(...);
   *** onVideoMute(...);
   *** onVideoPause(...);
   *** onVideoPlay(...);
   *** onVideoStart(...);
}

-keep class com.google.android.gms.ads.VideoController$VideoLifecycleCallbacks
-keepclassmembers class com.google.android.gms.ads.VideoController$VideoLifecycleCallbacks {
}

-keep class com.google.android.gms.ads.VideoController
-keepclassmembers class com.google.android.gms.ads.VideoController {
   <init>(...);
   *** hasVideoContent(...);
   *** isClickToExpandEnabled(...);
   *** isCustomControlsEnabled(...);
   *** isMuted(...);
   *** getPlaybackState(...);
   *** getVideoLifecycleCallbacks(...);
   *** mute(...);
   *** pause(...);
   *** play(...);
   *** setVideoLifecycleCallbacks(...);
   *** stop(...);
}

-keep class com.google.android.gms.ads.rewardedinterstitial.RewardedInterstitialAd
-keepclassmembers class com.google.android.gms.ads.rewardedinterstitial.RewardedInterstitialAd {
   <init>(...);
   *** getAdMetadata(...);
   *** getAdUnitId(...);
   *** getFullScreenContentCallback(...);
   *** setFullScreenContentCallback(...);
   *** getOnAdMetadataChangedListener(...);
   *** setOnAdMetadataChangedListener(...);
   *** getOnPaidEventListener(...);
   *** setOnPaidEventListener(...);
   *** getResponseInfo(...);
   *** getRewardItem(...);
   *** load(...);
   *** load(...);
   *** setImmersiveMode(...);
   *** setServerSideVerificationOptions(...);
   *** show(...);
}

-keep class com.google.android.gms.ads.rewardedinterstitial.RewardedInterstitialAd
-keepclassmembers class com.google.android.gms.ads.rewardedinterstitial.RewardedInterstitialAd {
   *** getAdMetadata(...);
   *** getAdUnitId(...);
   *** getFullScreenContentCallback(...);
   *** setFullScreenContentCallback(...);
   *** getOnAdMetadataChangedListener(...);
   *** setOnAdMetadataChangedListener(...);
   *** getOnPaidEventListener(...);
   *** setOnPaidEventListener(...);
   *** getResponseInfo(...);
   *** getRewardItem(...);
   *** setImmersiveMode(...);
   *** setServerSideVerificationOptions(...);
   *** show(...);
}

-keep class com.google.android.gms.ads.rewardedinterstitial.RewardedInterstitialAdLoadCallback
-keepclassmembers class com.google.android.gms.ads.rewardedinterstitial.RewardedInterstitialAdLoadCallback {
   <init>(...);
}

-keep class com.google.android.gms.ads.rewardedinterstitial.RewardedInterstitialAdLoadCallback
-keepclassmembers class com.google.android.gms.ads.rewardedinterstitial.RewardedInterstitialAdLoadCallback {
}

-keep class com.google.android.gms.ads.rewarded.OnAdMetadataChangedListener
-keepclassmembers class com.google.android.gms.ads.rewarded.OnAdMetadataChangedListener {
}

-keep class mono.com.google.android.gms.ads.rewarded.OnAdMetadataChangedListenerImplementor
-keepclassmembers class mono.com.google.android.gms.ads.rewarded.OnAdMetadataChangedListenerImplementor {
}

-keep class com.google.android.gms.ads.rewarded.RewardItem
-keepclassmembers class com.google.android.gms.ads.rewarded.RewardItem {
}

-keep class com.google.android.gms.ads.rewarded.RewardedAd
-keepclassmembers class com.google.android.gms.ads.rewarded.RewardedAd {
   <init>(...);
   *** getAdMetadata(...);
   *** getAdUnitId(...);
   *** getFullScreenContentCallback(...);
   *** setFullScreenContentCallback(...);
   *** getOnAdMetadataChangedListener(...);
   *** setOnAdMetadataChangedListener(...);
   *** getOnPaidEventListener(...);
   *** setOnPaidEventListener(...);
   *** getResponseInfo(...);
   *** getRewardItem(...);
   *** load(...);
   *** load(...);
   *** setImmersiveMode(...);
   *** setServerSideVerificationOptions(...);
   *** show(...);
}

-keep class com.google.android.gms.ads.rewarded.RewardedAd
-keepclassmembers class com.google.android.gms.ads.rewarded.RewardedAd {
   *** getAdMetadata(...);
   *** getAdUnitId(...);
   *** getFullScreenContentCallback(...);
   *** setFullScreenContentCallback(...);
   *** getOnAdMetadataChangedListener(...);
   *** setOnAdMetadataChangedListener(...);
   *** getOnPaidEventListener(...);
   *** setOnPaidEventListener(...);
   *** getResponseInfo(...);
   *** getRewardItem(...);
   *** setImmersiveMode(...);
   *** setServerSideVerificationOptions(...);
   *** show(...);
}

-keep class com.google.android.gms.ads.rewarded.RewardedAdLoadCallback
-keepclassmembers class com.google.android.gms.ads.rewarded.RewardedAdLoadCallback {
   <init>(...);
}

-keep class com.google.android.gms.ads.rewarded.RewardedAdLoadCallback
-keepclassmembers class com.google.android.gms.ads.rewarded.RewardedAdLoadCallback {
}

-keep class com.google.android.gms.ads.rewarded.ServerSideVerificationOptions
-keepclassmembers class com.google.android.gms.ads.rewarded.ServerSideVerificationOptions {
   *** getCustomData(...);
   *** getUserId(...);
}

-keep class com.google.android.gms.ads.query.AdInfo
-keepclassmembers class com.google.android.gms.ads.query.AdInfo {
   <init>(...);
   *** getAdString(...);
   *** getQueryInfo(...);
   *** getRequestId(...);
}

-keep class com.google.android.gms.ads.query.QueryInfo
-keepclassmembers class com.google.android.gms.ads.query.QueryInfo {
   *** getQuery(...);
   *** getQueryBundle(...);
   *** getRequestId(...);
   *** generate(...);
}

-keep class com.google.android.gms.ads.query.QueryInfoGenerationCallback
-keepclassmembers class com.google.android.gms.ads.query.QueryInfoGenerationCallback {
   <init>(...);
   *** onFailure(...);
   *** onSuccess(...);
}

-keep class com.google.android.gms.ads.query.QueryInfoGenerationCallback
-keepclassmembers class com.google.android.gms.ads.query.QueryInfoGenerationCallback {
}

-keep class com.google.android.gms.ads.mediation.MediationAdapter
-keepclassmembers class com.google.android.gms.ads.mediation.MediationAdapter {
}

-keep class com.google.android.gms.ads.mediation.MediationAdRequest
-keepclassmembers class com.google.android.gms.ads.mediation.MediationAdRequest {
}

-keep class com.google.android.gms.ads.mediation.MediationBannerAdapter
-keepclassmembers class com.google.android.gms.ads.mediation.MediationBannerAdapter {
}

-keep class com.google.android.gms.ads.mediation.MediationBannerListener
-keepclassmembers class com.google.android.gms.ads.mediation.MediationBannerListener {
}

-keep class com.google.android.gms.ads.mediation.MediationExtrasReceiver
-keepclassmembers class com.google.android.gms.ads.mediation.MediationExtrasReceiver {
}

-keep class com.google.android.gms.ads.mediation.MediationInterstitialAdapter
-keepclassmembers class com.google.android.gms.ads.mediation.MediationInterstitialAdapter {
}

-keep class com.google.android.gms.ads.mediation.MediationInterstitialListener
-keepclassmembers class com.google.android.gms.ads.mediation.MediationInterstitialListener {
}

-keep class com.google.android.gms.ads.interstitial.InterstitialAd
-keepclassmembers class com.google.android.gms.ads.interstitial.InterstitialAd {
   <init>(...);
   *** getAdUnitId(...);
   *** getFullScreenContentCallback(...);
   *** setFullScreenContentCallback(...);
   *** getOnPaidEventListener(...);
   *** setOnPaidEventListener(...);
   *** getResponseInfo(...);
   *** load(...);
   *** setImmersiveMode(...);
   *** show(...);
}

-keep class com.google.android.gms.ads.interstitial.InterstitialAd
-keepclassmembers class com.google.android.gms.ads.interstitial.InterstitialAd {
   *** getAdUnitId(...);
   *** getFullScreenContentCallback(...);
   *** setFullScreenContentCallback(...);
   *** getOnPaidEventListener(...);
   *** setOnPaidEventListener(...);
   *** getResponseInfo(...);
   *** setImmersiveMode(...);
   *** show(...);
}

-keep class com.google.android.gms.ads.interstitial.InterstitialAdLoadCallback
-keepclassmembers class com.google.android.gms.ads.interstitial.InterstitialAdLoadCallback {
   <init>(...);
}

-keep class com.google.android.gms.ads.interstitial.InterstitialAdLoadCallback
-keepclassmembers class com.google.android.gms.ads.interstitial.InterstitialAdLoadCallback {
}

-keep class com.google.android.gms.ads.initialization.AdapterStatus$State
-keepclassmembers class com.google.android.gms.ads.initialization.AdapterStatus$State {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.android.gms.ads.initialization.AdapterStatus
-keepclassmembers class com.google.android.gms.ads.initialization.AdapterStatus {
}

-keep class com.google.android.gms.ads.initialization.InitializationStatus
-keepclassmembers class com.google.android.gms.ads.initialization.InitializationStatus {
}

-keep class com.google.android.gms.ads.initialization.OnInitializationCompleteListener
-keepclassmembers class com.google.android.gms.ads.initialization.OnInitializationCompleteListener {
}

-keep class com.google.android.gms.ads.admanager.AdManagerAdRequest
-keepclassmembers class com.google.android.gms.ads.admanager.AdManagerAdRequest {
   *** getPublisherProvidedId(...);
}

# ACW for Xamarin.AndroidX.AppCompat
-keep class androidx.appcompat.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class androidx.appcompat.app.AlertDialog$Builder
-keepclassmembers class androidx.appcompat.app.AlertDialog$Builder {
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** create(...);
   *** setAdapter(...);
   *** setCancelable(...);
   *** setCursor(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setInverseBackgroundForced(...);
   *** setItems(...);
   *** setItems(...);
   *** setMessage(...);
   *** setMessage(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setNegativeButton(...);
   *** setNegativeButton(...);
   *** setNegativeButtonIcon(...);
   *** setNeutralButton(...);
   *** setNeutralButton(...);
   *** setNeutralButtonIcon(...);
   *** setOnCancelListener(...);
   *** setOnDismissListener(...);
   *** setOnItemSelectedListener(...);
   *** setOnKeyListener(...);
   *** setPositiveButton(...);
   *** setPositiveButton(...);
   *** setPositiveButtonIcon(...);
   *** setRecycleOnMeasureEnabled(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setView(...);
   *** setView(...);
   *** setView(...);
   *** show(...);
}

-keep class androidx.appcompat.app.AlertDialog
-keepclassmembers class androidx.appcompat.app.AlertDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getListView(...);
   *** getButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setMessage(...);
   *** setView(...);
   *** setView(...);
}

-keep class androidx.appcompat.app.ActionBar$LayoutParams
-keepclassmembers class androidx.appcompat.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class androidx.appcompat.app.ActionBar$OnNavigationListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnNavigationListener {
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$TabListener
-keepclassmembers class androidx.appcompat.app.ActionBar$TabListener {
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$Delegate {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class androidx.appcompat.app.AppCompatActivity
-keepclassmembers class androidx.appcompat.app.AppCompatActivity {
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onMenuItemSelected(...);
   *** onNightModeChanged(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getLocalNightMode(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** attachBaseContext(...);
   *** attachBaseContext2(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTheme(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDialog
-keepclassmembers class androidx.appcompat.app.AppCompatDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getSupportActionBar(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onWindowStartingSupportActionMode(...);
   *** supportRequestWindowFeature(...);
}

-keep class androidx.appcompat.app.AppCompatCallback
-keepclassmembers class androidx.appcompat.app.AppCompatCallback {
}

-keep class androidx.appcompat.widget.Toolbar$LayoutParams
-keepclassmembers class androidx.appcompat.widget.Toolbar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class androidx.appcompat.widget.Toolbar
-keepclassmembers class androidx.appcompat.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCollapseContentDescription(...);
   *** setCollapseContentDescription(...);
   *** getCollapseIcon(...);
   *** setCollapseIcon(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** invalidateMenu(...);
   *** onLayout(...);
   *** removeMenuProvider(...);
   *** setCollapseContentDescription(...);
   *** setCollapseIcon(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class androidx.appcompat.widget.AppCompatAutoCompleteTextView
-keepclassmembers class androidx.appcompat.widget.AppCompatAutoCompleteTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatButton
-keepclassmembers class androidx.appcompat.widget.AppCompatButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** setSupportAllCaps(...);
}

-keep class androidx.appcompat.widget.AppCompatCheckBox
-keepclassmembers class androidx.appcompat.widget.AppCompatCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatEditText
-keepclassmembers class androidx.appcompat.widget.AppCompatEditText {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** onReceiveContent(...);
}

-keep class androidx.appcompat.widget.AppCompatImageButton
-keepclassmembers class androidx.appcompat.widget.AppCompatImageButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatImageView
-keepclassmembers class androidx.appcompat.widget.AppCompatImageView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatRadioButton
-keepclassmembers class androidx.appcompat.widget.AppCompatRadioButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatTextView
-keepclassmembers class androidx.appcompat.widget.AppCompatTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** getTextMetricsParamsCompat(...);
   *** setTextMetricsParamsCompat(...);
   *** setPrecomputedText(...);
   *** setTextFuture(...);
}

-keep class androidx.appcompat.widget.DecorToolbar
-keepclassmembers class androidx.appcompat.widget.DecorToolbar {
}

-keep class androidx.appcompat.widget.LinearLayoutCompat$LayoutParams
-keepclassmembers class androidx.appcompat.widget.LinearLayoutCompat$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.widget.LinearLayoutCompat
-keepclassmembers class androidx.appcompat.widget.LinearLayoutCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBaselineAligned(...);
   *** setBaselineAligned(...);
   *** getBaselineAlignedChildIndex(...);
   *** setBaselineAlignedChildIndex(...);
   *** getDividerDrawable(...);
   *** setDividerDrawable(...);
   *** getDividerPadding(...);
   *** setDividerPadding(...);
   *** getDividerWidth(...);
   *** getGravity(...);
   *** setGravity(...);
   *** isMeasureWithLargestChildEnabled(...);
   *** setMeasureWithLargestChildEnabled(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getShowDividers(...);
   *** setShowDividers(...);
   *** getWeightSum(...);
   *** setWeightSum(...);
   *** hasDividerBeforeChildAt(...);
   *** onLayout(...);
   *** setHorizontalGravity(...);
   *** setVerticalGravity(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class androidx.appcompat.widget.SearchView$OnCloseListener
-keepclassmembers class androidx.appcompat.widget.SearchView$OnCloseListener {
}

-keep class mono.androidx.appcompat.widget.SearchView_OnCloseListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.SearchView_OnCloseListenerImplementor {
}

-keep class androidx.appcompat.widget.SearchView$OnQueryTextListener
-keepclassmembers class androidx.appcompat.widget.SearchView$OnQueryTextListener {
}

-keep class mono.androidx.appcompat.widget.SearchView_OnQueryTextListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.SearchView_OnQueryTextListenerImplementor {
}

-keep class androidx.appcompat.widget.SearchView$OnSuggestionListener
-keepclassmembers class androidx.appcompat.widget.SearchView$OnSuggestionListener {
}

-keep class mono.androidx.appcompat.widget.SearchView_OnSuggestionListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.SearchView_OnSuggestionListenerImplementor {
}

-keep class androidx.appcompat.widget.SearchView
-keepclassmembers class androidx.appcompat.widget.SearchView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isIconified(...);
   *** setIconified(...);
   *** getImeOptions(...);
   *** setImeOptions(...);
   *** getInputType(...);
   *** setInputType(...);
   *** isIconfiedByDefault(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getQuery(...);
   *** getQueryHint(...);
   *** setQueryHint(...);
   *** isQueryRefinementEnabled(...);
   *** setQueryRefinementEnabled(...);
   *** isSubmitButtonEnabled(...);
   *** setSubmitButtonEnabled(...);
   *** getSuggestionsAdapter(...);
   *** setSuggestionsAdapter(...);
   *** onActionViewCollapsed(...);
   *** onActionViewExpanded(...);
   *** onQueryRefine(...);
   *** setAppSearchData(...);
   *** setIconifiedByDefault(...);
   *** setOnCloseListener(...);
   *** setOnQueryTextFocusChangeListener(...);
   *** setOnQueryTextListener(...);
   *** setOnSearchClickListener(...);
   *** setOnSuggestionListener(...);
   *** setQuery(...);
   *** setSearchableInfo(...);
}

-keep class androidx.appcompat.widget.SwitchCompat
-keepclassmembers class androidx.appcompat.widget.SwitchCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getShowText(...);
   *** setShowText(...);
   *** getSplitTrack(...);
   *** setSplitTrack(...);
   *** getSwitchMinWidth(...);
   *** setSwitchMinWidth(...);
   *** getSwitchPadding(...);
   *** setSwitchPadding(...);
   *** getTextOff(...);
   *** setTextOff(...);
   *** getTextOn(...);
   *** setTextOn(...);
   *** getThumbDrawable(...);
   *** setThumbDrawable(...);
   *** getThumbPosition(...);
   *** getThumbTextPadding(...);
   *** setThumbTextPadding(...);
   *** getThumbTintList(...);
   *** setThumbTintList(...);
   *** getThumbTintMode(...);
   *** setThumbTintMode(...);
   *** getTrackDrawable(...);
   *** setTrackDrawable(...);
   *** getTrackTintList(...);
   *** setTrackTintList(...);
   *** getTrackTintMode(...);
   *** setTrackTintMode(...);
   *** onMeasure(...);
   *** setEnforceSwitchWidth(...);
   *** setSwitchTextAppearance(...);
   *** setSwitchTypeface(...);
   *** setSwitchTypeface(...);
   *** setThumbResource(...);
   *** setTrackResource(...);
}

-keep class androidx.appcompat.widget.TooltipCompat
-keepclassmembers class androidx.appcompat.widget.TooltipCompat {
   *** setTooltipText(...);
}

-keep class androidx.appcompat.view.ActionMode$Callback
-keepclassmembers class androidx.appcompat.view.ActionMode$Callback {
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.ContextThemeWrapper
-keepclassmembers class androidx.appcompat.view.ContextThemeWrapper {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getThemeResId(...);
   *** applyOverrideConfiguration(...);
   *** onApplyThemeResource(...);
}

-keep class androidx.appcompat.view.menu.MenuBuilder$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder$Callback {
}

-keep class androidx.appcompat.view.menu.MenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class androidx.appcompat.view.menu.MenuPresenter$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter$Callback {
}

-keep class androidx.appcompat.view.menu.MenuPresenter
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter {
}

-keep class androidx.appcompat.view.menu.MenuView
-keepclassmembers class androidx.appcompat.view.menu.MenuView {
}

-keep class androidx.appcompat.view.menu.MenuItemImpl
-keepclassmembers class androidx.appcompat.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** requiresOverflow(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class androidx.appcompat.view.menu.SubMenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.Google.Android.Material
-keep class com.google.android.material.shape.CornerTreatment
-keepclassmembers class com.google.android.material.shape.CornerTreatment {
   <init>(...);
   *** getCornerPath(...);
   *** getCornerPath(...);
   *** getCornerPath(...);
}

-keep class com.google.android.material.shape.EdgeTreatment
-keepclassmembers class com.google.android.material.shape.EdgeTreatment {
   <init>(...);
   *** getEdgePath(...);
   *** getEdgePath(...);
}

-keep class com.google.android.material.shape.CornerSize
-keepclassmembers class com.google.android.material.shape.CornerSize {
}

-keep class com.google.android.material.shape.MaterialShapeDrawable
-keepclassmembers class com.google.android.material.shape.MaterialShapeDrawable {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBottomLeftCornerResolvedSize(...);
   *** getBottomRightCornerResolvedSize(...);
   *** getBoundsAsRectF(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getFillColor(...);
   *** setFillColor(...);
   *** getInterpolation(...);
   *** setInterpolation(...);
   *** isElevationOverlayEnabled(...);
   *** isElevationOverlayInitialized(...);
   *** isRoundRect(...);
   *** getOpacity(...);
   *** getPaintStyle(...);
   *** setPaintStyle(...);
   *** getParentAbsoluteElevation(...);
   *** setParentAbsoluteElevation(...);
   *** getResolvedTintColor(...);
   *** getScale(...);
   *** setScale(...);
   *** getShadowCompatRotation(...);
   *** setShadowCompatRotation(...);
   *** getShadowCompatibilityMode(...);
   *** setShadowCompatibilityMode(...);
   *** getShadowElevation(...);
   *** setShadowElevation(...);
   *** isShadowEnabled(...);
   *** setShadowEnabled(...);
   *** getShadowOffsetX(...);
   *** getShadowOffsetY(...);
   *** getShadowRadius(...);
   *** setShadowRadius(...);
   *** getShadowVerticalOffset(...);
   *** setShadowVerticalOffset(...);
   *** getShapeAppearanceModel(...);
   *** setShapeAppearanceModel(...);
   *** getShapedViewModel(...);
   *** setShapedViewModel(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokeTintList(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** getTintList(...);
   *** getTopLeftCornerResolvedSize(...);
   *** getTopRightCornerResolvedSize(...);
   *** getTranslationZ(...);
   *** setTranslationZ(...);
   *** calculatePathForSize(...);
   *** compositeElevationOverlayIfNeeded(...);
   *** createWithElevationOverlay(...);
   *** createWithElevationOverlay(...);
   *** draw(...);
   *** drawShape(...);
   *** drawStrokeShape(...);
   *** getPathForSize(...);
   *** getZ(...);
   *** initializeElevationOverlay(...);
   *** isPointInTransparentRegion(...);
   *** requiresCompatShadow(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setCornerSize(...);
   *** setCornerSize(...);
   *** setEdgeIntersectionCheckEnable(...);
   *** setPadding(...);
   *** setShadowBitmapDrawingEnable(...);
   *** setShadowColor(...);
   *** setStroke(...);
   *** setStroke(...);
   *** setStrokeTint(...);
   *** setStrokeTint(...);
   *** setUseTintColorForShadow(...);
   *** setZ(...);
}

-keep class com.google.android.material.shape.ShapeAppearanceModel$Builder
-keepclassmembers class com.google.android.material.shape.ShapeAppearanceModel$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setAllCornerSizes(...);
   *** setAllCornerSizes(...);
   *** setAllCorners(...);
   *** setAllCorners(...);
   *** setAllEdges(...);
   *** setBottomEdge(...);
   *** setBottomLeftCorner(...);
   *** setBottomLeftCorner(...);
   *** setBottomLeftCorner(...);
   *** setBottomLeftCornerSize(...);
   *** setBottomLeftCornerSize(...);
   *** setBottomRightCorner(...);
   *** setBottomRightCorner(...);
   *** setBottomRightCorner(...);
   *** setBottomRightCornerSize(...);
   *** setBottomRightCornerSize(...);
   *** setLeftEdge(...);
   *** setRightEdge(...);
   *** setTopEdge(...);
   *** setTopLeftCorner(...);
   *** setTopLeftCorner(...);
   *** setTopLeftCorner(...);
   *** setTopLeftCornerSize(...);
   *** setTopLeftCornerSize(...);
   *** setTopRightCorner(...);
   *** setTopRightCorner(...);
   *** setTopRightCorner(...);
   *** setTopRightCornerSize(...);
   *** setTopRightCornerSize(...);
}

-keep class com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator
-keepclassmembers class com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator {
}

-keep class com.google.android.material.shape.ShapeAppearanceModel
-keepclassmembers class com.google.android.material.shape.ShapeAppearanceModel {
   <init>(...);
   *** getBottomEdge(...);
   *** getBottomLeftCorner(...);
   *** getBottomLeftCornerSize(...);
   *** getBottomRightCorner(...);
   *** getBottomRightCornerSize(...);
   *** getLeftEdge(...);
   *** getRightEdge(...);
   *** getTopEdge(...);
   *** getTopLeftCorner(...);
   *** getTopLeftCornerSize(...);
   *** getTopRightCorner(...);
   *** getTopRightCornerSize(...);
   *** builder(...);
   *** builder(...);
   *** builder(...);
   *** builder(...);
   *** builder(...);
   *** isRoundRect(...);
   *** toBuilder(...);
   *** withCornerSize(...);
   *** withCornerSize(...);
   *** withTransformedCornerSizes(...);
}

-keep class com.google.android.material.shape.ShapePath
-keepclassmembers class com.google.android.material.shape.ShapePath {
   <init>(...);
   <init>(...);
   *** addArc(...);
   *** applyToPath(...);
   *** cubicToPoint(...);
   *** lineTo(...);
   *** lineTo(...);
   *** quadToPoint(...);
   *** reset(...);
   *** reset(...);
}

-keep class com.google.android.material.shape.ShapePathModel
-keepclassmembers class com.google.android.material.shape.ShapePathModel {
   <init>(...);
   *** setAllCorners(...);
   *** setAllEdges(...);
   *** setBottomEdge(...);
   *** setBottomLeftCorner(...);
   *** setBottomRightCorner(...);
   *** setCornerTreatments(...);
   *** setEdgeTreatments(...);
   *** setLeftEdge(...);
   *** setRightEdge(...);
   *** setTopEdge(...);
   *** setTopLeftCorner(...);
   *** setTopRightCorner(...);
}

-keep class com.google.android.material.imageview.ShapeableImageView
-keepclassmembers class com.google.android.material.imageview.ShapeableImageView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingEnd(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingStart(...);
   *** getContentPaddingTop(...);
   *** getShapeAppearanceModel(...);
   *** setShapeAppearanceModel(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** setContentPadding(...);
   *** setContentPaddingRelative(...);
   *** setStrokeColorResource(...);
   *** setStrokeWidthResource(...);
}

-keep class com.google.android.material.checkbox.MaterialCheckBox$OnCheckedStateChangedListener
-keepclassmembers class com.google.android.material.checkbox.MaterialCheckBox$OnCheckedStateChangedListener {
}

-keep class mono.com.google.android.material.checkbox.MaterialCheckBox_OnCheckedStateChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.checkbox.MaterialCheckBox_OnCheckedStateChangedListenerImplementor {
}

-keep class com.google.android.material.checkbox.MaterialCheckBox$OnErrorChangedListener
-keepclassmembers class com.google.android.material.checkbox.MaterialCheckBox$OnErrorChangedListener {
}

-keep class mono.com.google.android.material.checkbox.MaterialCheckBox_OnErrorChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.checkbox.MaterialCheckBox_OnErrorChangedListenerImplementor {
}

-keep class com.google.android.material.checkbox.MaterialCheckBox
-keepclassmembers class com.google.android.material.checkbox.MaterialCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getButtonIconDrawable(...);
   *** setButtonIconDrawable(...);
   *** getButtonIconTintList(...);
   *** setButtonIconTintList(...);
   *** getButtonIconTintMode(...);
   *** setButtonIconTintMode(...);
   *** isCenterIfNoTextEnabled(...);
   *** setCenterIfNoTextEnabled(...);
   *** getCheckedState(...);
   *** setCheckedState(...);
   *** getErrorAccessibilityLabel(...);
   *** setErrorAccessibilityLabel(...);
   *** isErrorShown(...);
   *** setErrorShown(...);
   *** isUseMaterialThemeColors(...);
   *** setUseMaterialThemeColors(...);
   *** addOnCheckedStateChangedListener(...);
   *** addOnErrorChangedListener(...);
   *** clearOnCheckedStateChangedListeners(...);
   *** clearOnErrorChangedListeners(...);
   *** removeOnCheckedStateChangedListener(...);
   *** removeOnErrorChangedListener(...);
   *** setButtonIconDrawableResource(...);
   *** setErrorAccessibilityLabelResource(...);
}

-keep class com.google.android.material.button.MaterialButton$OnCheckedChangeListener
-keepclassmembers class com.google.android.material.button.MaterialButton$OnCheckedChangeListener {
}

-keep class mono.com.google.android.material.button.MaterialButton_OnCheckedChangeListenerImplementor
-keepclassmembers class mono.com.google.android.material.button.MaterialButton_OnCheckedChangeListenerImplementor {
}

-keep class com.google.android.material.button.MaterialButton
-keepclassmembers class com.google.android.material.button.MaterialButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getCornerRadius(...);
   *** setCornerRadius(...);
   *** getIcon(...);
   *** setIcon(...);
   *** getIconGravity(...);
   *** setIconGravity(...);
   *** getIconPadding(...);
   *** setIconPadding(...);
   *** getIconSize(...);
   *** setIconSize(...);
   *** getIconTint(...);
   *** setIconTint(...);
   *** getIconTintMode(...);
   *** setIconTintMode(...);
   *** getInsetBottom(...);
   *** setInsetBottom(...);
   *** getInsetTop(...);
   *** setInsetTop(...);
   *** getRippleColor(...);
   *** setRippleColor(...);
   *** getShapeAppearanceModel(...);
   *** setShapeAppearanceModel(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** isToggleCheckedStateOnClick(...);
   *** setToggleCheckedStateOnClick(...);
   *** addOnCheckedChangeListener(...);
   *** clearOnCheckedChangeListeners(...);
   *** removeOnCheckedChangeListener(...);
   *** setCornerRadiusResource(...);
   *** setIconResource(...);
   *** setIconTintResource(...);
   *** setRippleColorResource(...);
   *** setStrokeColorResource(...);
   *** setStrokeWidthResource(...);
   *** toggle(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   <init>(...);
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior {
   <init>(...);
   <init>(...);
   *** isDraggable(...);
   *** setDraggable(...);
   *** getExpandedOffset(...);
   *** setExpandedOffset(...);
   *** isFitToContents(...);
   *** setFitToContents(...);
   *** isGestureInsetBottomIgnored(...);
   *** setGestureInsetBottomIgnored(...);
   *** getHalfExpandedRatio(...);
   *** setHalfExpandedRatio(...);
   *** getHideFriction(...);
   *** setHideFriction(...);
   *** isHideable(...);
   *** setHideable(...);
   *** isNestedScrollingCheckEnabled(...);
   *** getLastStableState(...);
   *** getMaxHeight(...);
   *** setMaxHeight(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getPeekHeight(...);
   *** setPeekHeight(...);
   *** getSaveFlags(...);
   *** setSaveFlags(...);
   *** getSkipCollapsed(...);
   *** setSkipCollapsed(...);
   *** getState(...);
   *** setState(...);
   *** addBottomSheetCallback(...);
   *** disableShapeAnimations(...);
   *** from(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** removeBottomSheetCallback(...);
   *** setBottomSheetCallback(...);
   *** setHideableInternal(...);
   *** setPeekHeight(...);
   *** setUpdateImportantForAccessibilityOnSiblings(...);
   *** shouldExpandOnUpwardDrag(...);
   *** shouldSkipHalfExpandedStateWhenDragging(...);
   *** shouldSkipSmoothAnimation(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetDialog
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBehavior(...);
   *** getDismissWithAnimation(...);
   *** setDismissWithAnimation(...);
   *** getEdgeToEdgeEnabled(...);
   *** setLightStatusBar(...);
}

-keep class com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener
-keepclassmembers class com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener {
}

-keep class mono.com.google.android.material.behavior.SwipeDismissBehavior_OnDismissListenerImplementor
-keepclassmembers class mono.com.google.android.material.behavior.SwipeDismissBehavior_OnDismissListenerImplementor {
}

-keep class com.google.android.material.behavior.SwipeDismissBehavior
-keepclassmembers class com.google.android.material.behavior.SwipeDismissBehavior {
   <init>(...);
   *** getDragState(...);
   *** getListener(...);
   *** setListener(...);
   *** canSwipeDismissView(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onTouchEvent(...);
   *** setDragDismissDistance(...);
   *** setEndAlphaSwipeDistance(...);
   *** setSensitivity(...);
   *** setStartAlphaSwipeDistance(...);
   *** setSwipeDirection(...);
}

-keep class com.google.android.material.badge.BadgeDrawable
-keepclassmembers class com.google.android.material.badge.BadgeDrawable {
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getBadgeGravity(...);
   *** setBadgeGravity(...);
   *** getBadgeNumberLocale(...);
   *** setBadgeNumberLocale(...);
   *** getBadgeTextColor(...);
   *** setBadgeTextColor(...);
   *** getContentDescription(...);
   *** getCustomBadgeParent(...);
   *** hasNumber(...);
   *** getHorizontalOffset(...);
   *** setHorizontalOffset(...);
   *** getHorizontalOffsetWithText(...);
   *** setHorizontalOffsetWithText(...);
   *** getHorizontalOffsetWithoutText(...);
   *** setHorizontalOffsetWithoutText(...);
   *** getMaxCharacterCount(...);
   *** setMaxCharacterCount(...);
   *** getNumber(...);
   *** setNumber(...);
   *** getOpacity(...);
   *** getVerticalOffset(...);
   *** setVerticalOffset(...);
   *** getVerticalOffsetWithText(...);
   *** setVerticalOffsetWithText(...);
   *** getVerticalOffsetWithoutText(...);
   *** setVerticalOffsetWithoutText(...);
   *** clearNumber(...);
   *** create(...);
   *** createFromResource(...);
   *** draw(...);
   *** onStateChange(...);
   *** onTextSizeChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setContentDescriptionExceedsMaxBadgeNumberStringResource(...);
   *** setContentDescriptionNumberless(...);
   *** setContentDescriptionQuantityStringsResource(...);
   *** setVisible(...);
   *** updateBadgeCoordinates(...);
   *** updateBadgeCoordinates(...);
   *** updateBadgeCoordinates(...);
}

-keep class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationBarView
-keepclassmembers class com.google.android.material.navigation.NavigationBarView {
   <init>(...);
   *** getItemActiveIndicatorColor(...);
   *** setItemActiveIndicatorColor(...);
   *** isItemActiveIndicatorEnabled(...);
   *** setItemActiveIndicatorEnabled(...);
   *** getItemActiveIndicatorHeight(...);
   *** setItemActiveIndicatorHeight(...);
   *** getItemActiveIndicatorMarginHorizontal(...);
   *** setItemActiveIndicatorMarginHorizontal(...);
   *** getItemActiveIndicatorShapeAppearance(...);
   *** setItemActiveIndicatorShapeAppearance(...);
   *** getItemActiveIndicatorWidth(...);
   *** setItemActiveIndicatorWidth(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundResource(...);
   *** setItemBackgroundResource(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemPaddingBottom(...);
   *** setItemPaddingBottom(...);
   *** getItemPaddingTop(...);
   *** setItemPaddingTop(...);
   *** getItemRippleColor(...);
   *** setItemRippleColor(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMaxItemCount(...);
   *** getMenu(...);
   *** getMenuView(...);
   *** getPresenter(...);
   *** getSelectedItemId(...);
   *** setSelectedItemId(...);
   *** createNavigationBarMenuView(...);
   *** getBadge(...);
   *** getOrCreateBadge(...);
   *** inflateMenu(...);
   *** removeBadge(...);
   *** setItemIconSizeRes(...);
   *** setItemOnTouchListener(...);
   *** setOnItemReselectedListener(...);
   *** setOnItemSelectedListener(...);
}

-keep class com.google.android.material.navigation.NavigationBarItemView
-keepclassmembers class com.google.android.material.navigation.NavigationBarItemView {
   *** setEnabled(...);
   <init>(...);
   *** getActiveIndicatorDrawable(...);
   *** setActiveIndicatorDrawable(...);
   *** getBadge(...);
   *** getItemBackgroundResId(...);
   *** getItemData(...);
   *** getItemDefaultMarginResId(...);
   *** getItemLayoutResId(...);
   *** getItemPosition(...);
   *** setItemPosition(...);
   *** initialize(...);
   *** onCreateDrawableState(...);
   *** prefersCondensedTitle(...);
   *** setActiveIndicatorEnabled(...);
   *** setActiveIndicatorHeight(...);
   *** setActiveIndicatorMarginHorizontal(...);
   *** setActiveIndicatorResizeable(...);
   *** setActiveIndicatorWidth(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setIcon(...);
   *** setIconSize(...);
   *** setIconTintList(...);
   *** setItemBackground(...);
   *** setItemBackground(...);
   *** setItemPaddingBottom(...);
   *** setItemPaddingTop(...);
   *** setItemRippleColor(...);
   *** setLabelVisibilityMode(...);
   *** setShifting(...);
   *** setShortcut(...);
   *** setTextAppearanceActive(...);
   *** setTextAppearanceInactive(...);
   *** setTextColor(...);
   *** setTitle(...);
   *** showsIcon(...);
}

-keep class com.google.android.material.navigation.NavigationBarItemView
-keepclassmembers class com.google.android.material.navigation.NavigationBarItemView {
   *** getItemLayoutResId(...);
}

-keep class com.google.android.material.navigation.NavigationBarMenuView
-keepclassmembers class com.google.android.material.navigation.NavigationBarMenuView {
   <init>(...);
   *** getIconTintList(...);
   *** setIconTintList(...);
   *** getItemActiveIndicatorColor(...);
   *** setItemActiveIndicatorColor(...);
   *** getItemActiveIndicatorEnabled(...);
   *** setItemActiveIndicatorEnabled(...);
   *** getItemActiveIndicatorHeight(...);
   *** setItemActiveIndicatorHeight(...);
   *** getItemActiveIndicatorMarginHorizontal(...);
   *** setItemActiveIndicatorMarginHorizontal(...);
   *** isItemActiveIndicatorResizeable(...);
   *** setItemActiveIndicatorResizeable(...);
   *** getItemActiveIndicatorShapeAppearance(...);
   *** setItemActiveIndicatorShapeAppearance(...);
   *** getItemActiveIndicatorWidth(...);
   *** setItemActiveIndicatorWidth(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundRes(...);
   *** setItemBackgroundRes(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemPaddingBottom(...);
   *** setItemPaddingBottom(...);
   *** getItemPaddingTop(...);
   *** setItemPaddingTop(...);
   *** getItemRippleColor(...);
   *** setItemRippleColor(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMenu(...);
   *** getSelectedItemId(...);
   *** getSelectedItemPosition(...);
   *** getWindowAnimations(...);
   *** buildMenuView(...);
   *** createDefaultColorStateList(...);
   *** createNavigationBarItemView(...);
   *** findItemView(...);
   *** getBadge(...);
   *** initialize(...);
   *** isShifting(...);
   *** setItemOnTouchListener(...);
   *** setPresenter(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationBarMenuView
-keepclassmembers class com.google.android.material.navigation.NavigationBarMenuView {
   *** createNavigationBarItemView(...);
   *** onLayout(...);
}

-keep class com.google.android.material.navigation.NavigationBarPresenter
-keepclassmembers class com.google.android.material.navigation.NavigationBarPresenter {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** flagActionItems(...);
   *** getMenuView(...);
   *** initForMenu(...);
   *** onCloseMenu(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSubMenuSelected(...);
   *** setCallback(...);
   *** setMenuView(...);
   *** setUpdateSuspended(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationBarView
-keepclassmembers class com.google.android.material.navigation.NavigationBarView {
   *** getMaxItemCount(...);
   *** createNavigationBarMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationView
-keepclassmembers class com.google.android.material.navigation.NavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBottomInsetScrimEnabled(...);
   *** setBottomInsetScrimEnabled(...);
   *** getCheckedItem(...);
   *** setCheckedItem(...);
   *** getDividerInsetEnd(...);
   *** setDividerInsetEnd(...);
   *** getDividerInsetStart(...);
   *** setDividerInsetStart(...);
   *** getHeaderCount(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemHorizontalPadding(...);
   *** setItemHorizontalPadding(...);
   *** getItemIconPadding(...);
   *** setItemIconPadding(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemMaxLines(...);
   *** setItemMaxLines(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getItemVerticalPadding(...);
   *** setItemVerticalPadding(...);
   *** getMenu(...);
   *** getSubheaderInsetEnd(...);
   *** setSubheaderInsetEnd(...);
   *** getSubheaderInsetStart(...);
   *** setSubheaderInsetStart(...);
   *** isTopInsetScrimEnabled(...);
   *** setTopInsetScrimEnabled(...);
   *** addHeaderView(...);
   *** getHeaderView(...);
   *** inflateHeaderView(...);
   *** inflateMenu(...);
   *** removeHeaderView(...);
   *** setCheckedItem(...);
   *** setItemBackgroundResource(...);
   *** setItemHorizontalPaddingResource(...);
   *** setItemIconPaddingResource(...);
   *** setItemIconSize(...);
   *** setItemTextAppearance(...);
   *** setItemVerticalPaddingResource(...);
   *** setNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.tabs.TabLayout$TabView
-keepclassmembers class com.google.android.material.tabs.TabLayout$TabView {
   <init>(...);
   *** getTab(...);
   *** onMeasure(...);
}

-keep class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener {
}

-keep class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor {
}

-keep class com.google.android.material.tabs.TabLayout$OnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$OnTabSelectedListener {
}

-keep class com.google.android.material.tabs.TabLayout$Tab
-keepclassmembers class com.google.android.material.tabs.TabLayout$Tab {
   <init>(...);
   *** getBadge(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getId(...);
   *** isSelected(...);
   *** getOrCreateBadge(...);
   *** getPosition(...);
   *** getTabLabelVisibility(...);
   *** getTag(...);
   *** getText(...);
   *** removeBadge(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setId(...);
   *** setTabLabelVisibility(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class com.google.android.material.tabs.TabLayout
-keepclassmembers class com.google.android.material.tabs.TabLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasUnboundedRipple(...);
   *** isInlineLabel(...);
   *** setInlineLabel(...);
   *** getSelectedTabPosition(...);
   *** getTabCount(...);
   *** getTabGravity(...);
   *** setTabGravity(...);
   *** getTabIconTint(...);
   *** setTabIconTint(...);
   *** getTabIndicatorAnimationMode(...);
   *** setTabIndicatorAnimationMode(...);
   *** isTabIndicatorFullWidth(...);
   *** setTabIndicatorFullWidth(...);
   *** getTabIndicatorGravity(...);
   *** getTabMode(...);
   *** setTabMode(...);
   *** getTabRippleColor(...);
   *** setTabRippleColor(...);
   *** getTabSelectedIndicator(...);
   *** getTabTextColors(...);
   *** setTabTextColors(...);
   *** addOnTabSelectedListener(...);
   *** addOnTabSelectedListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** clearOnTabSelectedListeners(...);
   *** createTabFromPool(...);
   *** getTabAt(...);
   *** newTab(...);
   *** releaseFromTabPool(...);
   *** removeAllTabs(...);
   *** removeOnTabSelectedListener(...);
   *** removeOnTabSelectedListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** selectTab(...);
   *** setInlineLabelResource(...);
   *** setOnTabSelectedListener(...);
   *** setOnTabSelectedListener(...);
   *** setScrollPosition(...);
   *** setScrollPosition(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicatorColor(...);
   *** setSelectedTabIndicatorGravity(...);
   *** setSelectedTabIndicatorHeight(...);
   *** setTabIconTintResource(...);
   *** setTabRippleColorResource(...);
   *** setTabTextColors(...);
   *** setTabsFromPagerAdapter(...);
   *** setUnboundedRipple(...);
   *** setUnboundedRippleResource(...);
   *** setupWithViewPager(...);
   *** setupWithViewPager(...);
}

-keep class com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy
-keepclassmembers class com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy {
}

-keep class com.google.android.material.tabs.TabLayoutMediator
-keepclassmembers class com.google.android.material.tabs.TabLayoutMediator {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isAttached(...);
   *** attach(...);
   *** detach(...);
}

-keep class com.google.android.material.snackbar.Snackbar$Callback
-keepclassmembers class com.google.android.material.snackbar.Snackbar$Callback {
   <init>(...);
   *** onDismissed(...);
   *** onShown(...);
}

-keep class com.google.android.material.snackbar.Snackbar
-keepclassmembers class com.google.android.material.snackbar.Snackbar {
   *** hasSnackbarButtonStyleAttr(...);
   *** make(...);
   *** make(...);
   *** make(...);
   *** setAction(...);
   *** setAction(...);
   *** setActionTextColor(...);
   *** setActionTextColor(...);
   *** setBackgroundTint(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setCallback(...);
   *** setMaxInlineActionWidth(...);
   *** setText(...);
   *** setText(...);
   *** setTextColor(...);
   *** setTextColor(...);
   *** setTextMaxLines(...);
}

-keep class com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback
-keepclassmembers class com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback {
   <init>(...);
   *** onDismissed(...);
   *** onShown(...);
}

-keep class com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback
-keepclassmembers class com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback {
}

-keep class com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
-keepclassmembers class com.google.android.material.snackbar.BaseTransientBottomBar$Behavior {
   <init>(...);
   *** onInterceptTouchEvent(...);
}

-keep class com.google.android.material.snackbar.BaseTransientBottomBar
-keepclassmembers class com.google.android.material.snackbar.BaseTransientBottomBar {
   <init>(...);
   <init>(...);
   *** getAnchorView(...);
   *** isAnchorViewLayoutListenerEnabled(...);
   *** setAnchorViewLayoutListenerEnabled(...);
   *** getAnimationMode(...);
   *** getContext(...);
   *** getDuration(...);
   *** hasSnackbarStyleAttr(...);
   *** isGestureInsetBottomIgnored(...);
   *** isShown(...);
   *** isShownOrQueued(...);
   *** getNewBehavior(...);
   *** getSnackbarBaseLayoutResId(...);
   *** getView(...);
   *** addCallback(...);
   *** dismiss(...);
   *** dispatchDismiss(...);
   *** getBehavior(...);
   *** removeCallback(...);
   *** setAnchorView(...);
   *** setAnchorView(...);
   *** setAnimationMode(...);
   *** setBehavior(...);
   *** setDuration(...);
   *** setGestureInsetBottomIgnored(...);
   *** show(...);
}

-keep class com.google.android.material.snackbar.BaseTransientBottomBar
-keepclassmembers class com.google.android.material.snackbar.BaseTransientBottomBar {
}

-keep class com.google.android.material.snackbar.ContentViewCallback
-keepclassmembers class com.google.android.material.snackbar.ContentViewCallback {
}

-keep class com.google.android.material.internal.StaticLayoutBuilderConfigurer
-keepclassmembers class com.google.android.material.internal.StaticLayoutBuilderConfigurer {
}

-keep class com.google.android.material.internal.ScrimInsetsFrameLayout
-keepclassmembers class com.google.android.material.internal.ScrimInsetsFrameLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onInsetsChanged(...);
   *** setDrawBottomInsetForeground(...);
   *** setDrawTopInsetForeground(...);
   *** setScrimInsetForeground(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationItemView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationItemView {
   <init>(...);
   *** getItemLayoutResId(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationMenuView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationMenuView {
   <init>(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** createNavigationBarItemView(...);
   *** onLayout(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getMaxItemCount(...);
   *** createNavigationBarMenuView(...);
   *** setOnNavigationItemReselectedListener(...);
   *** setOnNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer
-keepclassmembers class com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer {
}

-keep class com.google.android.material.appbar.CollapsingToolbarLayout
-keepclassmembers class com.google.android.material.appbar.CollapsingToolbarLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCollapsedTitleGravity(...);
   *** setCollapsedTitleGravity(...);
   *** getCollapsedTitleTypeface(...);
   *** setCollapsedTitleTypeface(...);
   *** getContentScrim(...);
   *** setContentScrim(...);
   *** getExpandedTitleGravity(...);
   *** setExpandedTitleGravity(...);
   *** getExpandedTitleMarginBottom(...);
   *** setExpandedTitleMarginBottom(...);
   *** getExpandedTitleMarginEnd(...);
   *** setExpandedTitleMarginEnd(...);
   *** getExpandedTitleMarginStart(...);
   *** setExpandedTitleMarginStart(...);
   *** getExpandedTitleMarginTop(...);
   *** setExpandedTitleMarginTop(...);
   *** getExpandedTitleTypeface(...);
   *** setExpandedTitleTypeface(...);
   *** isExtraMultilineHeightEnabled(...);
   *** setExtraMultilineHeightEnabled(...);
   *** isForceApplySystemWindowInsetTop(...);
   *** setForceApplySystemWindowInsetTop(...);
   *** getHyphenationFrequency(...);
   *** setHyphenationFrequency(...);
   *** getLineCount(...);
   *** getLineSpacingAdd(...);
   *** setLineSpacingAdd(...);
   *** getLineSpacingMultiplier(...);
   *** setLineSpacingMultiplier(...);
   *** getMaxLines(...);
   *** setMaxLines(...);
   *** isRtlTextDirectionHeuristicsEnabled(...);
   *** setRtlTextDirectionHeuristicsEnabled(...);
   *** getScrimAnimationDuration(...);
   *** setScrimAnimationDuration(...);
   *** getScrimVisibleHeightTrigger(...);
   *** setScrimVisibleHeightTrigger(...);
   *** getStatusBarScrim(...);
   *** setStatusBarScrim(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleCollapseMode(...);
   *** setTitleCollapseMode(...);
   *** isTitleEnabled(...);
   *** setTitleEnabled(...);
   *** getTitlePositionInterpolator(...);
   *** setTitlePositionInterpolator(...);
   *** getTitleTextEllipsize(...);
   *** setCollapsedTitleTextAppearance(...);
   *** setCollapsedTitleTextColor(...);
   *** setCollapsedTitleTextColor(...);
   *** setContentScrimColor(...);
   *** setContentScrimResource(...);
   *** setExpandedTitleColor(...);
   *** setExpandedTitleMargin(...);
   *** setExpandedTitleTextAppearance(...);
   *** setExpandedTitleTextColor(...);
   *** setScrimsShown(...);
   *** setScrimsShown(...);
   *** setStaticLayoutBuilderConfigurer(...);
   *** setStatusBarScrimColor(...);
   *** setStatusBarScrimResource(...);
   *** setTitleEllipsize(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback {
   <init>(...);
   *** canDrag(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback {
   *** canDrag(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$BaseBehavior
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$BaseBehavior {
   <init>(...);
   <init>(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setDragCallback(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$Behavior
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$Behavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setDragCallback(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$ChildScrollEffect
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$ChildScrollEffect {
   <init>(...);
   *** onOffsetChanged(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$ChildScrollEffect
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$ChildScrollEffect {
   *** onOffsetChanged(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$LayoutParams
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getScrollEffect(...);
   *** setScrollEffect(...);
   *** getScrollFlags(...);
   *** setScrollFlags(...);
   *** getScrollInterpolator(...);
   *** setScrollInterpolator(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$LiftOnScrollListener
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$LiftOnScrollListener {
}

-keep class mono.com.google.android.material.appbar.AppBarLayout_LiftOnScrollListenerImplementor
-keepclassmembers class mono.com.google.android.material.appbar.AppBarLayout_LiftOnScrollListenerImplementor {
}

-keep class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener {
}

-keep class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor {
}

-keep class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** onMeasureChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class com.google.android.material.appbar.AppBarLayout
-keepclassmembers class com.google.android.material.appbar.AppBarLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isLifted(...);
   *** isLiftOnScroll(...);
   *** setLiftOnScroll(...);
   *** getLiftOnScrollTargetViewId(...);
   *** setLiftOnScrollTargetViewId(...);
   *** getMinimumHeightForVisibleOverlappingContent(...);
   *** getStatusBarForeground(...);
   *** setStatusBarForeground(...);
   *** getTargetElevation(...);
   *** setTargetElevation(...);
   *** getTotalScrollRange(...);
   *** addLiftOnScrollListener(...);
   *** addOnOffsetChangedListener(...);
   *** clearLiftOnScrollListener(...);
   *** getBehavior(...);
   *** removeLiftOnScrollListener(...);
   *** removeOnOffsetChangedListener(...);
   *** setExpanded(...);
   *** setExpanded(...);
   *** setLiftOnScrollTargetView(...);
   *** setLiftable(...);
   *** setLiftableOverrideEnabled(...);
   *** setLifted(...);
   *** setStatusBarForegroundColor(...);
   *** setStatusBarForegroundResource(...);
}

-keep class com.google.android.material.appbar.HeaderBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderBehavior {
   <init>(...);
   <init>(...);
   *** onInterceptTouchEvent(...);
   *** onTouchEvent(...);
}

-keep class com.google.android.material.appbar.HeaderBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderBehavior {
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** getOverlayTop(...);
   *** setOverlayTop(...);
   *** layoutChild(...);
   *** shouldHeaderOverlapScrollingChild(...);
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
}

-keep class com.google.android.material.appbar.MaterialToolbar
-keepclassmembers class com.google.android.material.appbar.MaterialToolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isLogoAdjustViewBounds(...);
   *** setLogoAdjustViewBounds(...);
   *** getLogoScaleType(...);
   *** setLogoScaleType(...);
   *** getNavigationIconTint(...);
   *** isSubtitleCentered(...);
   *** setSubtitleCentered(...);
   *** isTitleCentered(...);
   *** setTitleCentered(...);
   *** clearNavigationIconTint(...);
   *** setNavigationIconTint(...);
}

-keep class com.google.android.material.appbar.ViewOffsetBehavior
-keepclassmembers class com.google.android.material.appbar.ViewOffsetBehavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** layoutChild(...);
   *** onLayoutChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
   *** onMeasureChild(...);
}

# ACW for Xamarin.AndroidX.Core
-keep class androidx.core.util.Consumer
-keepclassmembers class androidx.core.util.Consumer {
}

-keep class androidx.core.util.Predicate
-keepclassmembers class androidx.core.util.Predicate {
}

-keep class androidx.core.util.Pair
-keepclassmembers class androidx.core.util.Pair {
   <init>(...);
   *** create(...);
}

-keep class androidx.core.internal.view.SupportMenuItem
-keepclassmembers class androidx.core.internal.view.SupportMenuItem {
}

-keep class androidx.core.graphics.Insets
-keepclassmembers class androidx.core.graphics.Insets {
   *** add(...);
   *** max(...);
   *** min(...);
   *** of(...);
   *** of(...);
   *** subtract(...);
   *** toCompatInsets(...);
   *** toPlatformInsets(...);
   *** wrap(...);
}

-keep class androidx.core.graphics.drawable.DrawableCompat
-keepclassmembers class androidx.core.graphics.drawable.DrawableCompat {
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** clearColorFilter(...);
   *** getAlpha(...);
   *** getColorFilter(...);
   *** getLayoutDirection(...);
   *** inflate(...);
   *** isAutoMirrored(...);
   *** jumpToCurrentState(...);
   *** setAutoMirrored(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setLayoutDirection(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.content.ContextCompat
-keepclassmembers class androidx.core.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getAttributionTag(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDataDir(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getMainExecutor(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** registerReceiver(...);
   *** registerReceiver(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class androidx.core.content.FileProvider
-keepclassmembers class androidx.core.content.FileProvider {
   <init>(...);
   <init>(...);
   *** delete(...);
   *** getType(...);
   *** getUriForFile(...);
   *** getUriForFile(...);
   *** insert(...);
   *** onCreate(...);
   *** query(...);
   *** update(...);
}

-keep class androidx.core.content.LocusIdCompat
-keepclassmembers class androidx.core.content.LocusIdCompat {
   <init>(...);
   *** getId(...);
   *** toLocusId(...);
   *** toLocusIdCompat(...);
}

-keep class androidx.core.content.PermissionChecker
-keepclassmembers class androidx.core.content.PermissionChecker {
   *** checkCallingOrSelfPermission(...);
   *** checkCallingPermission(...);
   *** checkPermission(...);
   *** checkSelfPermission(...);
}

-keep class androidx.core.content.pm.PackageInfoCompat
-keepclassmembers class androidx.core.content.pm.PackageInfoCompat {
   *** getLongVersionCode(...);
   *** getSignatures(...);
   *** hasSignatures(...);
}

-keep class androidx.core.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class androidx.core.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class androidx.core.app.ActivityCompat
-keepclassmembers class androidx.core.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** isLaunchedFromBubble(...);
   *** postponeEnterTransition(...);
   *** recreate(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setLocusContext(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class androidx.core.app.ActivityOptionsCompat
-keepclassmembers class androidx.core.app.ActivityOptionsCompat {
   <init>(...);
   *** getLaunchBounds(...);
   *** makeBasic(...);
   *** makeClipRevealAnimation(...);
   *** makeCustomAnimation(...);
   *** makeScaleUpAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeTaskLaunchBehind(...);
   *** makeThumbnailScaleUpAnimation(...);
   *** requestUsageTimeReport(...);
   *** setLaunchBounds(...);
   *** toBundle(...);
   *** update(...);
}

-keep class androidx.core.app.ComponentActivity$ExtraData
-keepclassmembers class androidx.core.app.ComponentActivity$ExtraData {
   <init>(...);
}

-keep class androidx.core.app.ComponentActivity
-keepclassmembers class androidx.core.app.ComponentActivity {
   <init>(...);
   *** getLifecycle(...);
   *** getExtraData(...);
   *** putExtraData(...);
   *** shouldDumpInternalState(...);
   *** superDispatchKeyEvent(...);
}

-keep class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
}

-keep class androidx.core.app.TaskStackBuilder
-keepclassmembers class androidx.core.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class androidx.core.widget.NestedScrollView$OnScrollChangeListener
-keepclassmembers class androidx.core.widget.NestedScrollView$OnScrollChangeListener {
}

-keep class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor
-keepclassmembers class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor {
}

-keep class androidx.core.widget.NestedScrollView
-keepclassmembers class androidx.core.widget.NestedScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFillViewport(...);
   *** setFillViewport(...);
   *** getMaxScrollAmount(...);
   *** isSmoothScrollingEnabled(...);
   *** setSmoothScrollingEnabled(...);
   *** arrowScroll(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeScrollDeltaToGetChildRectOnScreen(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** executeKeyEvent(...);
   *** fling(...);
   *** fullScroll(...);
   *** hasNestedScrollingParent(...);
   *** onAttachedToWindow(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** pageScroll(...);
   *** setOnScrollChangeListener(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollTo(...);
   *** smoothScrollTo(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class androidx.core.widget.CompoundButtonCompat
-keepclassmembers class androidx.core.widget.CompoundButtonCompat {
   *** getButtonDrawable(...);
   *** getButtonTintList(...);
   *** getButtonTintMode(...);
   *** setButtonTintList(...);
   *** setButtonTintMode(...);
}

-keep class androidx.core.widget.TextViewCompat
-keepclassmembers class androidx.core.widget.TextViewCompat {
   *** getAutoSizeMaxTextSize(...);
   *** getAutoSizeMinTextSize(...);
   *** getAutoSizeStepGranularity(...);
   *** getAutoSizeTextAvailableSizes(...);
   *** getAutoSizeTextType(...);
   *** getCompoundDrawableTintList(...);
   *** getCompoundDrawableTintMode(...);
   *** getCompoundDrawablesRelative(...);
   *** getFirstBaselineToTopHeight(...);
   *** getLastBaselineToBottomHeight(...);
   *** getMaxLines(...);
   *** getMinLines(...);
   *** getTextMetricsParams(...);
   *** setAutoSizeTextTypeUniformWithConfiguration(...);
   *** setAutoSizeTextTypeUniformWithPresetSizes(...);
   *** setAutoSizeTextTypeWithDefaults(...);
   *** setCompoundDrawableTintList(...);
   *** setCompoundDrawableTintMode(...);
   *** setCompoundDrawablesRelative(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCustomSelectionActionModeCallback(...);
   *** setFirstBaselineToTopHeight(...);
   *** setLastBaselineToBottomHeight(...);
   *** setLineHeight(...);
   *** setPrecomputedText(...);
   *** setTextAppearance(...);
   *** setTextMetricsParams(...);
   *** unwrapCustomSelectionActionModeCallback(...);
   *** wrapCustomSelectionActionModeCallback(...);
}

-keep class androidx.core.view.AccessibilityDelegateCompat
-keepclassmembers class androidx.core.view.AccessibilityDelegateCompat {
   <init>(...);
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class androidx.core.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider$VisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$VisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class androidx.core.view.ContentInfoCompat
-keepclassmembers class androidx.core.view.ContentInfoCompat {
   *** getClip(...);
   *** getExtras(...);
   *** getFlags(...);
   *** getLinkUri(...);
   *** getSource(...);
   *** partition(...);
   *** partition(...);
   *** toContentInfo(...);
   *** toContentInfoCompat(...);
}

-keep class androidx.core.view.DisplayCutoutCompat
-keepclassmembers class androidx.core.view.DisplayCutoutCompat {
   <init>(...);
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
   *** getWaterfallInsets(...);
}

-keep class androidx.core.view.DragAndDropPermissionsCompat
-keepclassmembers class androidx.core.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class androidx.core.view.MenuProvider
-keepclassmembers class androidx.core.view.MenuProvider {
}

-keep class androidx.core.view.OnApplyWindowInsetsListener
-keepclassmembers class androidx.core.view.OnApplyWindowInsetsListener {
}

-keep class androidx.core.view.OnReceiveContentListener
-keepclassmembers class androidx.core.view.OnReceiveContentListener {
}

-keep class androidx.core.view.ScrollingView
-keepclassmembers class androidx.core.view.ScrollingView {
}

-keep class androidx.core.view.ViewPropertyAnimatorListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorListener {
}

-keep class androidx.core.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorUpdateListener {
}

-keep class androidx.core.view.WindowInsetsAnimationControlListenerCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationControlListenerCompat {
}

-keep class androidx.core.view.MenuItemCompat$OnActionExpandListener
-keepclassmembers class androidx.core.view.MenuItemCompat$OnActionExpandListener {
}

-keep class androidx.core.view.MenuItemCompat
-keepclassmembers class androidx.core.view.MenuItemCompat {
   *** collapseActionView(...);
   *** expandActionView(...);
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getContentDescription(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getNumericModifiers(...);
   *** getTooltipText(...);
   *** isActionViewExpanded(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setAlphabeticShortcut(...);
   *** setContentDescription(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setTooltipText(...);
}

-keep class androidx.core.view.PointerIconCompat
-keepclassmembers class androidx.core.view.PointerIconCompat {
   *** getPointerIcon(...);
   *** create(...);
   *** getSystemIcon(...);
   *** load(...);
}

-keep class androidx.core.view.ScaleGestureDetectorCompat
-keepclassmembers class androidx.core.view.ScaleGestureDetectorCompat {
   *** isQuickScaleEnabled(...);
   *** isQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
}

-keep class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat
-keepclassmembers class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat {
}

-keep class androidx.core.view.ViewCompat
-keepclassmembers class androidx.core.view.ViewCompat {
   <init>(...);
   *** addAccessibilityAction(...);
   *** addKeyboardNavigationClusters(...);
   *** addOnUnhandledKeyEventListener(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** cancelDragAndDrop(...);
   *** combineMeasuredStates(...);
   *** computeSystemWindowInsets(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** enableAccessibleClickableSpanSupport(...);
   *** generateViewId(...);
   *** getAccessibilityDelegate(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAccessibilityPaneTitle(...);
   *** getAlpha(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getDisplay(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getImportantForAutofill(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMatrix(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getNextClusterForwardId(...);
   *** getOnReceiveContentMimeTypes(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRootWindowInsets(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getScrollIndicators(...);
   *** getStateDescription(...);
   *** getSystemGestureExclusionRects(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowInsetsController(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasExplicitFocusable(...);
   *** hasNestedScrollingParent(...);
   *** hasNestedScrollingParent(...);
   *** hasOnClickListeners(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAccessibilityHeading(...);
   *** isAttachedToWindow(...);
   *** isFocusedByDefault(...);
   *** isImportantForAccessibility(...);
   *** isImportantForAutofill(...);
   *** isInLayout(...);
   *** isKeyboardNavigationCluster(...);
   *** isLaidOut(...);
   *** isLayoutDirectionResolved(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** isScreenReaderFocusable(...);
   *** jumpDrawablesToCurrentState(...);
   *** keyboardNavigationClusterSearch(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** performReceiveContent(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** removeAccessibilityAction(...);
   *** removeOnUnhandledKeyEventListener(...);
   *** replaceAccessibilityAction(...);
   *** requestApplyInsets(...);
   *** requireViewById(...);
   *** resolveSizeAndState(...);
   *** restoreDefaultFocus(...);
   *** saveAttributeDataForStyleable(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityHeading(...);
   *** setAccessibilityLiveRegion(...);
   *** setAccessibilityPaneTitle(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setAutofillHints(...);
   *** setBackground(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setFocusedByDefault(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setImportantForAutofill(...);
   *** setKeyboardNavigationCluster(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setNextClusterForwardId(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOnReceiveContentListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setPointerIcon(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setScreenReaderFocusable(...);
   *** setScrollIndicators(...);
   *** setScrollIndicators(...);
   *** setStateDescription(...);
   *** setSystemGestureExclusionRects(...);
   *** setTooltipText(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setWindowInsetsAnimationCallback(...);
   *** setX(...);
   *** setY(...);
   *** setZ(...);
   *** startDragAndDrop(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
   *** updateDragShadow(...);
}

-keep class androidx.core.view.ViewPropertyAnimatorCompat
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class androidx.core.view.WindowCompat
-keepclassmembers class androidx.core.view.WindowCompat {
   *** getInsetsController(...);
   *** requireViewById(...);
   *** setDecorFitsSystemWindows(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat {
   <init>(...);
   *** getLowerBound(...);
   *** getUpperBound(...);
   *** inset(...);
   *** toBounds(...);
   *** toBoundsCompat(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$Callback
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$Callback {
   <init>(...);
   *** getDispatchMode(...);
   *** onEnd(...);
   *** onPrepare(...);
   *** onProgress(...);
   *** onStart(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$Callback
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$Callback {
   *** onProgress(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat {
   <init>(...);
   *** getAlpha(...);
   *** setAlpha(...);
   *** getDurationMillis(...);
   *** getFraction(...);
   *** setFraction(...);
   *** getInterpolatedFraction(...);
   *** getInterpolator(...);
   *** getTypeMask(...);
}

-keep class androidx.core.view.WindowInsetsAnimationControllerCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationControllerCompat {
   *** getCurrentAlpha(...);
   *** getCurrentFraction(...);
   *** getCurrentInsets(...);
   *** getHiddenStateInsets(...);
   *** isCancelled(...);
   *** isFinished(...);
   *** isReady(...);
   *** getShownStateInsets(...);
   *** getTypes(...);
   *** finish(...);
   *** setInsetsAndAlpha(...);
}

-keep class androidx.core.view.WindowInsetsCompat$Type
-keepclassmembers class androidx.core.view.WindowInsetsCompat$Type {
   *** captionBar(...);
   *** displayCutout(...);
   *** ime(...);
   *** mandatorySystemGestures(...);
   *** navigationBars(...);
   *** statusBars(...);
   *** systemBars(...);
   *** systemGestures(...);
   *** tappableElement(...);
}

-keep class androidx.core.view.WindowInsetsCompat
-keepclassmembers class androidx.core.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getMandatorySystemGestureInsets(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getStableInsets(...);
   *** getSystemGestureInsets(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** getSystemWindowInsets(...);
   *** getTappableElementInsets(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** getInsets(...);
   *** getInsetsIgnoringVisibility(...);
   *** inset(...);
   *** inset(...);
   *** isVisible(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** toWindowInsets(...);
   *** toWindowInsetsCompat(...);
   *** toWindowInsetsCompat(...);
}

-keep class androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener
-keepclassmembers class androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener {
}

-keep class mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor
-keepclassmembers class mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor {
}

-keep class androidx.core.view.WindowInsetsControllerCompat
-keepclassmembers class androidx.core.view.WindowInsetsControllerCompat {
   <init>(...);
   *** isAppearanceLightNavigationBars(...);
   *** setAppearanceLightNavigationBars(...);
   *** isAppearanceLightStatusBars(...);
   *** setAppearanceLightStatusBars(...);
   *** getSystemBarsBehavior(...);
   *** setSystemBarsBehavior(...);
   *** addOnControllableInsetsChangedListener(...);
   *** controlWindowInsetsAnimation(...);
   *** hide(...);
   *** removeOnControllableInsetsChangedListener(...);
   *** show(...);
   *** toWindowInsetsControllerCompat(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
   *** createReplacementAction(...);
   *** perform(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat {
   <init>(...);
   *** getRegionCount(...);
   *** getRegionAt(...);
   *** getTargetForRegion(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** getAvailableExtraData(...);
   *** setAvailableExtraData(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtraRenderingInfo(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getStateDescription(...);
   *** setStateDescription(...);
   *** getText(...);
   *** setText(...);
   *** isTextEntryKey(...);
   *** setTextEntryKey(...);
   *** isTextSelectable(...);
   *** setTextSelectable(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTouchDelegateInfo(...);
   *** setTouchDelegateInfo(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getUniqueId(...);
   *** setUniqueId(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** addSpansToExtras(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** getClickableSpans(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** addExtraDataToAccessibilityNodeInfo(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class androidx.core.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityWindowInfoCompat {
   *** getAnchor(...);
   *** getChildCount(...);
   *** getDisplayId(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** isInPictureInPictureMode(...);
   *** getLayer(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** getRegionInScreen(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
   *** unwrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
   <init>(...);
   *** setBundle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand {
}

-keep class androidx.core.text.PrecomputedTextCompat$Params
-keepclassmembers class androidx.core.text.PrecomputedTextCompat$Params {
   *** getBreakStrategy(...);
   *** getHyphenationFrequency(...);
   *** getTextDirection(...);
   *** getTextPaint(...);
   *** equalsWithoutTextDirection(...);
}

-keep class androidx.core.text.PrecomputedTextCompat
-keepclassmembers class androidx.core.text.PrecomputedTextCompat {
   *** getParagraphCount(...);
   *** charAt(...);
   *** create(...);
   *** getParagraphEnd(...);
   *** getParagraphStart(...);
   *** getParams(...);
   *** getSpanEnd(...);
   *** getSpanFlags(...);
   *** getSpanStart(...);
   *** getSpans(...);
   *** getTextFuture(...);
   *** length(...);
   *** nextSpanTransition(...);
   *** removeSpan(...);
   *** setSpan(...);
   *** subSequence(...);
}

# ACW for Xamarin.AndroidX.Browser
-keep class androidx.browser.customtabs.CustomTabsClient
-keepclassmembers class androidx.browser.customtabs.CustomTabsClient {
   *** attachSession(...);
   *** bindCustomTabsService(...);
   *** bindCustomTabsServicePreservePriority(...);
   *** connectAndInitialize(...);
   *** extraCommand(...);
   *** getPackageName(...);
   *** getPackageName(...);
   *** newPendingSession(...);
   *** newSession(...);
   *** newSession(...);
   *** warmup(...);
}

-keep class androidx.browser.customtabs.CustomTabColorSchemeParams
-keepclassmembers class androidx.browser.customtabs.CustomTabColorSchemeParams {
}

-keep class androidx.browser.customtabs.CustomTabsCallback
-keepclassmembers class androidx.browser.customtabs.CustomTabsCallback {
   <init>(...);
   *** extraCallback(...);
   *** extraCallbackWithResult(...);
   *** onMessageChannelReady(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
}

-keep class androidx.browser.customtabs.CustomTabsIntent$Builder
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$Builder {
   <init>(...);
   <init>(...);
   *** addDefaultShareMenuItem(...);
   *** addMenuItem(...);
   *** addToolbarItem(...);
   *** build(...);
   *** enableUrlBarHiding(...);
   *** setActionButton(...);
   *** setActionButton(...);
   *** setCloseButtonIcon(...);
   *** setColorScheme(...);
   *** setColorSchemeParams(...);
   *** setDefaultColorSchemeParams(...);
   *** setDefaultShareMenuItemEnabled(...);
   *** setExitAnimations(...);
   *** setInstantAppsEnabled(...);
   *** setNavigationBarColor(...);
   *** setNavigationBarDividerColor(...);
   *** setPendingSession(...);
   *** setSecondaryToolbarColor(...);
   *** setSecondaryToolbarViews(...);
   *** setSession(...);
   *** setShareState(...);
   *** setShowTitle(...);
   *** setStartAnimations(...);
   *** setToolbarColor(...);
   *** setUrlBarHidingEnabled(...);
}

-keep class androidx.browser.customtabs.CustomTabsIntent
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent {
   *** getMaxToolbarItems(...);
   *** getColorSchemeParams(...);
   *** launchUrl(...);
   *** setAlwaysUseBrowserUI(...);
   *** shouldAlwaysUseBrowserUI(...);
}

-keep class androidx.browser.customtabs.CustomTabsServiceConnection
-keepclassmembers class androidx.browser.customtabs.CustomTabsServiceConnection {
   <init>(...);
   *** onCustomTabsServiceConnected(...);
   *** onServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class androidx.browser.customtabs.CustomTabsServiceConnection
-keepclassmembers class androidx.browser.customtabs.CustomTabsServiceConnection {
   *** onCustomTabsServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class androidx.browser.customtabs.CustomTabsSession$PendingSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession$PendingSession {
}

-keep class androidx.browser.customtabs.CustomTabsSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession {
   *** createMockSessionForTesting(...);
   *** mayLaunchUrl(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** setActionButton(...);
   *** setSecondaryToolbarViews(...);
   *** setToolbarItem(...);
   *** validateRelationship(...);
}

# ACW for Xamarin.AndroidX.Fragment
-keep class androidx.fragment.app.FragmentActivity
-keepclassmembers class androidx.fragment.app.FragmentActivity {
   <init>(...);
   <init>(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** onAttachFragment(...);
   *** onResumeFragments(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class androidx.fragment.app.Fragment$SavedState
-keepclassmembers class androidx.fragment.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.fragment.app.Fragment
-keepclassmembers class androidx.fragment.app.Fragment {
   <init>(...);
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getDefaultViewModelCreationExtras(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getParentFragmentManager(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSavedStateRegistry(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onPrimaryNavigationFragmentChanged(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** postponeEnterTransition(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireArguments(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** requireParentFragment(...);
   *** requireView(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   <init>(...);
   *** instantiate(...);
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentContainerView
-keepclassmembers class androidx.fragment.app.FragmentContainerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getFragment(...);
}

-keep class androidx.fragment.app.FragmentFactory
-keepclassmembers class androidx.fragment.app.FragmentFactory {
   <init>(...);
   *** instantiate(...);
   *** loadFragmentClass(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   <init>(...);
   *** getHandler(...);
   *** onDump(...);
   *** onFindViewById(...);
   *** onGetHost(...);
   *** onGetLayoutInflater(...);
   *** onGetWindowAnimations(...);
   *** onHasView(...);
   *** onHasWindowAnimations(...);
   *** onRequestPermissionsFromFragment(...);
   *** onShouldSaveFragmentState(...);
   *** onShouldShowRequestPermissionRationale(...);
   *** onStartActivityFromFragment(...);
   *** onStartActivityFromFragment(...);
   *** onStartIntentSenderFromFragment(...);
   *** onSupportInvalidateOptionsMenu(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   *** onGetHost(...);
}

-keep class androidx.fragment.app.FragmentManager$BackStackEntry
-keepclassmembers class androidx.fragment.app.FragmentManager$BackStackEntry {
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class androidx.fragment.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class androidx.fragment.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragmentFactory(...);
   *** setFragmentFactory(...);
   *** getFragments(...);
   *** getHost(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** getStrictModePolicy(...);
   *** setStrictModePolicy(...);
   *** addFragmentOnAttachListener(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** clearBackStack(...);
   *** clearFragmentResult(...);
   *** clearFragmentResultListener(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragment(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** isLoggingEnabled(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeFragmentOnAttachListener(...);
   *** removeOnBackStackChangedListener(...);
   *** restoreBackStack(...);
   *** saveBackStack(...);
   *** saveFragmentInstanceState(...);
   *** setFragmentResult(...);
   *** setFragmentResultListener(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setMaxLifecycle(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
}

-keep class androidx.fragment.app.FragmentOnAttachListener
-keepclassmembers class androidx.fragment.app.FragmentOnAttachListener {
}

-keep class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor {
}

-keep class androidx.fragment.app.FragmentResultListener
-keepclassmembers class androidx.fragment.app.FragmentResultListener {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode$Policy
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode$Policy {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode {
   *** getDefaultPolicy(...);
   *** setDefaultPolicy(...);
   *** onFragmentReuse(...);
   *** onFragmentTagUsage(...);
   *** onGetRetainInstanceUsage(...);
   *** onGetTargetFragmentRequestCodeUsage(...);
   *** onGetTargetFragmentUsage(...);
   *** onPolicyViolation(...);
   *** onSetRetainInstanceUsage(...);
   *** onSetTargetFragmentUsage(...);
   *** onSetUserVisibleHint(...);
   *** onWrongFragmentContainer(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
   *** getFragment(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
}

# ACW for Xamarin.AndroidX.Collection
-keep class androidx.collection.SparseArrayCompat
-keepclassmembers class androidx.collection.SparseArrayCompat {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** removeAtRange(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable.Animated
-keep class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat {
   *** isRunning(...);
   *** getOpacity(...);
   *** clearAnimationCallbacks(...);
   *** clearAnimationCallbacks(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** registerAnimationCallback(...);
   *** registerAnimationCallback(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** start(...);
   *** stop(...);
   *** unregisterAnimationCallback(...);
   *** unregisterAnimationCallback(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat {
   *** loadInterpolator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat {
   *** loadAnimator(...);
   *** loadAnimator(...);
   *** loadAnimator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.ArgbEvaluator
-keepclassmembers class androidx.vectordrawable.graphics.drawable.ArgbEvaluator {
   <init>(...);
   *** getInstance(...);
   *** evaluate(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
   <init>(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat {
}

-keep class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat {
   <init>(...);
   <init>(...);
   *** getInterpolation(...);
}

# ACW for Xamarin.AndroidX.CoordinatorLayout
-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

# ACW for Xamarin.AndroidX.ViewPager2
-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
   <init>(...);
   *** onPageScrollStateChanged(...);
   *** onPageScrolled(...);
   *** onPageSelected(...);
}

-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
}

-keep class androidx.viewpager2.widget.ViewPager2$PageTransformer
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$PageTransformer {
}

-keep class androidx.viewpager2.widget.ViewPager2
-keepclassmembers class androidx.viewpager2.widget.ViewPager2 {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getItemDecorationCount(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScrollState(...);
   *** isUserInputEnabled(...);
   *** setUserInputEnabled(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** beginFakeDrag(...);
   *** dispatchRestoreInstanceState(...);
   *** endFakeDrag(...);
   *** fakeDragBy(...);
   *** getItemDecorationAt(...);
   *** invalidateItemDecorations(...);
   *** onLayout(...);
   *** registerOnPageChangeCallback(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** requestTransform(...);
   *** setCurrentItem(...);
   *** setPageTransformer(...);
   *** unregisterOnPageChangeCallback(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsItem(...);
   *** createFragment(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewRecycled(...);
   *** restoreState(...);
   *** saveState(...);
   *** onBindViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   *** createFragment(...);
   *** getItemCount(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentViewHolder
-keepclassmembers class androidx.viewpager2.adapter.FragmentViewHolder {
}

# ACW for Xamarin.AndroidX.SwipeRefreshLayout
-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** getProgressCircleDiameter(...);
   *** getProgressViewEndOffset(...);
   *** getProgressViewStartOffset(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** hasNestedScrollingParent(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setLegacyRequestDisallowInterceptTouchEventEnabled(...);
   *** setOnChildScrollUpCallback(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** setSlingshotDistance(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

# ACW for Xamarin.AndroidX.RecyclerView
-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   <init>(...);
   *** isSpanGroupIndexCacheEnabled(...);
   *** setSpanGroupIndexCacheEnabled(...);
   *** isSpanIndexCacheEnabled(...);
   *** setSpanIndexCacheEnabled(...);
   *** getSpanGroupIndex(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
   *** invalidateSpanGroupIndexCache(...);
   *** invalidateSpanIndexCache(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanCount(...);
   *** setSpanCount(...);
   *** isUsingSpansToEstimateScrollbarDimensions(...);
   *** setUsingSpansToEstimateScrollbarDimensions(...);
   *** getSpanSizeLookup(...);
   *** setSpanSizeLookup(...);
}

-keep class androidx.recyclerview.widget.ItemTouchUIUtil
-keepclassmembers class androidx.recyclerview.widget.ItemTouchUIUtil {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   <init>(...);
   *** getBoundingBoxMargin(...);
   *** getDefaultUIUtil(...);
   *** isItemViewSwipeEnabled(...);
   *** isLongPressDragEnabled(...);
   *** canDropOver(...);
   *** chooseDropTarget(...);
   *** clearView(...);
   *** convertToAbsoluteDirection(...);
   *** convertToRelativeDirection(...);
   *** getAnimationDuration(...);
   *** getMoveThreshold(...);
   *** getMovementFlags(...);
   *** getSwipeEscapeVelocity(...);
   *** getSwipeThreshold(...);
   *** getSwipeVelocityThreshold(...);
   *** interpolateOutOfBoundsScroll(...);
   *** makeFlag(...);
   *** makeMovementFlags(...);
   *** onChildDraw(...);
   *** onChildDrawOver(...);
   *** onMove(...);
   *** onMoved(...);
   *** onSelectedChanged(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   *** getMovementFlags(...);
   *** onMove(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** onChildViewAttachedToWindow(...);
   *** onChildViewDetachedFromWindow(...);
   *** startDrag(...);
   *** startSwipe(...);
}

-keep class androidx.recyclerview.widget.LinearLayoutManager
-keepclassmembers class androidx.recyclerview.widget.LinearLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isLayoutRTL(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRecycleChildrenOnDetach(...);
   *** setRecycleChildrenOnDetach(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** isSmoothScrollbarEnabled(...);
   *** setSmoothScrollbarEnabled(...);
   *** getStackFromEnd(...);
   *** setStackFromEnd(...);
   *** calculateExtraLayoutSpace(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPosition(...);
   *** findFirstVisibleItemPosition(...);
   *** findLastCompletelyVisibleItemPosition(...);
   *** findLastVisibleItemPosition(...);
   *** generateDefaultLayoutParams(...);
   *** getExtraLayoutSpace(...);
   *** prepareForDrop(...);
   *** scrollToPositionWithOffset(...);
}

-keep class androidx.recyclerview.widget.LinearSmoothScroller
-keepclassmembers class androidx.recyclerview.widget.LinearSmoothScroller {
   <init>(...);
   *** getHorizontalSnapPreference(...);
   *** getVerticalSnapPreference(...);
   *** calculateDtToFit(...);
   *** calculateDxToMakeVisible(...);
   *** calculateDyToMakeVisible(...);
   *** calculateSpeedPerPixel(...);
   *** calculateTimeForDeceleration(...);
   *** calculateTimeForScrolling(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** updateActionForInterimTarget(...);
}

-keep class androidx.recyclerview.widget.LinearSnapHelper
-keepclassmembers class androidx.recyclerview.widget.LinearSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getLayoutManager(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getTotalSpaceChange(...);
   *** createHorizontalHelper(...);
   *** createOrientationHelper(...);
   *** createVerticalHelper(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
   *** onLayoutComplete(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
}

-keep class androidx.recyclerview.widget.PagerSnapHelper
-keepclassmembers class androidx.recyclerview.widget.PagerSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** findRelativeAdapterPositionIn(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getStateRestorationPolicy(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** setStateRestorationPolicy(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
   *** onStateRestorationPolicyChanged(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
}

-keep class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAbsoluteAdapterPosition(...);
   *** getBindingAdapterPosition(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$RecycledViewPool
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Recycler
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$RecyclerListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecyclerListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$State
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAbsoluteAdapterPosition(...);
   *** getAdapterPosition(...);
   *** getBindingAdapter(...);
   *** getBindingAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
}

-keep class androidx.recyclerview.widget.RecyclerView
-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** isLayoutSuppressed(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** addRecyclerListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** nestedScrollBy(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** removeRecyclerListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** suppressLayout(...);
   *** swapAdapter(...);
}

-keep class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** calculateDistanceToFinalSnap(...);
   *** calculateScrollDistance(...);
   *** createScroller(...);
   *** createSnapScroller(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

# ACW for Xamarin.AndroidX.DrawerLayout
-keep class androidx.drawerlayout.widget.DrawerLayout$DrawerListener
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$DrawerListener {
}

-keep class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class androidx.drawerlayout.widget.DrawerLayout$LayoutParams
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.drawerlayout.widget.DrawerLayout
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** isOpen(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** close(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** open(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.AndroidX.Navigation.Fragment
-keep class androidx.navigation.fragment.FragmentNavigator$Destination
-keepclassmembers class androidx.navigation.fragment.FragmentNavigator$Destination {
   <init>(...);
   <init>(...);
   *** getClassName(...);
   *** setClassName(...);
}

-keep class androidx.navigation.fragment.FragmentNavigator
-keepclassmembers class androidx.navigation.fragment.FragmentNavigator {
   <init>(...);
   *** createDestination(...);
   *** instantiateFragment(...);
   *** navigate(...);
}

-keep class androidx.navigation.fragment.NavHostFragment
-keepclassmembers class androidx.navigation.fragment.NavHostFragment {
   <init>(...);
   *** getNavController(...);
   *** create(...);
   *** create(...);
   *** createFragmentNavigator(...);
   *** findNavController(...);
   *** onCreateNavController(...);
   *** onCreateNavHostController(...);
}

# ACW for Xamarin.AndroidX.Navigation.Common
-keep class androidx.navigation.NavDirections
-keepclassmembers class androidx.navigation.NavDirections {
}

-keep class androidx.navigation.NavViewModelStoreProvider
-keepclassmembers class androidx.navigation.NavViewModelStoreProvider {
}

-keep class androidx.navigation.NavAction
-keepclassmembers class androidx.navigation.NavAction {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDefaultArguments(...);
   *** setDefaultArguments(...);
   *** getDestinationId(...);
   *** getNavOptions(...);
   *** setNavOptions(...);
}

-keep class androidx.navigation.NavArgument
-keepclassmembers class androidx.navigation.NavArgument {
   *** getDefaultValue(...);
   *** isDefaultValuePresent(...);
   *** isNullable(...);
   *** getType(...);
   *** putDefaultValue(...);
   *** verify(...);
}

-keep class androidx.navigation.NavBackStackEntry
-keepclassmembers class androidx.navigation.NavBackStackEntry {
   <init>(...);
   <init>(...);
   *** getArguments(...);
   *** getDefaultViewModelCreationExtras(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getDestination(...);
   *** setDestination(...);
   *** getId(...);
   *** getLifecycle(...);
   *** getMaxLifecycle(...);
   *** setMaxLifecycle(...);
   *** getSavedStateHandle(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** handleLifecycleEvent(...);
   *** saveState(...);
   *** updateState(...);
}

-keep class androidx.navigation.NavDeepLink
-keepclassmembers class androidx.navigation.NavDeepLink {
   <init>(...);
   *** getAction(...);
   *** isExactDeepLink(...);
   *** getMimeType(...);
   *** getUriPattern(...);
   *** getMatchingArguments(...);
   *** getMimeTypeMatchRating(...);
}

-keep class androidx.navigation.NavDeepLinkRequest
-keepclassmembers class androidx.navigation.NavDeepLinkRequest {
   <init>(...);
   <init>(...);
   *** getAction(...);
   *** getMimeType(...);
   *** getUri(...);
}

-keep class androidx.navigation.NavDestination$DeepLinkMatch
-keepclassmembers class androidx.navigation.NavDestination$DeepLinkMatch {
   <init>(...);
   *** getDestination(...);
   *** getMatchingArgs(...);
   *** compareTo(...);
   *** compareTo(...);
}

-keep class androidx.navigation.NavDestination
-keepclassmembers class androidx.navigation.NavDestination {
   <init>(...);
   <init>(...);
   *** getArguments(...);
   *** getDisplayName(...);
   *** getId(...);
   *** setId(...);
   *** getLabel(...);
   *** setLabel(...);
   *** getNavigatorName(...);
   *** getParent(...);
   *** setParent(...);
   *** getRoute(...);
   *** setRoute(...);
   *** addArgument(...);
   *** addDeepLink(...);
   *** addDeepLink(...);
   *** addInDefaultArgs(...);
   *** buildDeepLinkIds(...);
   *** buildDeepLinkIds(...);
   *** getAction(...);
   *** getDisplayName(...);
   *** getHierarchy(...);
   *** hasDeepLink(...);
   *** hasDeepLink(...);
   *** matchDeepLink(...);
   *** onInflate(...);
   *** parseClassFromName(...);
   *** parseClassFromNameInternal(...);
   *** putAction(...);
   *** putAction(...);
   *** removeAction(...);
   *** removeArgument(...);
   *** supportsActions(...);
}

-keep class androidx.navigation.NavGraph
-keepclassmembers class androidx.navigation.NavGraph {
   <init>(...);
   *** getNodes(...);
   *** getStartDestDisplayName(...);
   *** getStartDestination(...);
   *** setStartDestination(...);
   *** getStartDestinationId(...);
   *** getStartDestinationRoute(...);
   *** addAll(...);
   *** addDestination(...);
   *** addDestinations(...);
   *** addDestinations(...);
   *** clear(...);
   *** findNode(...);
   *** findNode(...);
   *** findNode(...);
   *** findNode(...);
   *** findStartDestination(...);
   *** iterator(...);
   *** remove(...);
   *** setStartDestination(...);
}

-keep class androidx.navigation.NavGraphNavigator
-keepclassmembers class androidx.navigation.NavGraphNavigator {
   <init>(...);
   *** createDestination(...);
}

-keep class androidx.navigation.Navigator$Extras
-keepclassmembers class androidx.navigation.Navigator$Extras {
}

-keep class androidx.navigation.Navigator
-keepclassmembers class androidx.navigation.Navigator {
   <init>(...);
   *** isAttached(...);
   *** getState(...);
   *** createDestination(...);
   *** navigate(...);
   *** navigate(...);
   *** onAttach(...);
   *** onLaunchSingleTop(...);
   *** onRestoreState(...);
   *** onSaveState(...);
   *** popBackStack(...);
   *** popBackStack(...);
}

-keep class androidx.navigation.Navigator
-keepclassmembers class androidx.navigation.Navigator {
   *** createDestination(...);
}

-keep class androidx.navigation.NavigatorProvider
-keepclassmembers class androidx.navigation.NavigatorProvider {
   <init>(...);
   *** getNavigators(...);
   *** addNavigator(...);
   *** addNavigator(...);
   *** getNavigator(...);
   *** getNavigator(...);
}

-keep class androidx.navigation.NavigatorState
-keepclassmembers class androidx.navigation.NavigatorState {
   <init>(...);
   *** getBackStack(...);
   *** isNavigating(...);
   *** setNavigating(...);
   *** getTransitionsInProgress(...);
   *** createBackStackEntry(...);
   *** markTransitionComplete(...);
   *** onLaunchSingleTop(...);
   *** pop(...);
   *** popWithTransition(...);
   *** push(...);
   *** pushWithTransition(...);
}

-keep class androidx.navigation.NavigatorState
-keepclassmembers class androidx.navigation.NavigatorState {
   *** createBackStackEntry(...);
}

-keep class androidx.navigation.NavOptions
-keepclassmembers class androidx.navigation.NavOptions {
   *** getEnterAnim(...);
   *** getExitAnim(...);
   *** isPopUpToInclusive(...);
   *** getPopEnterAnim(...);
   *** getPopExitAnim(...);
   *** getPopUpTo(...);
   *** getPopUpToId(...);
   *** getPopUpToRoute(...);
   *** shouldLaunchSingleTop(...);
   *** shouldPopUpToSaveState(...);
   *** shouldRestoreState(...);
}

-keep class androidx.navigation.NavType
-keepclassmembers class androidx.navigation.NavType {
   <init>(...);
   *** isNullableAllowed(...);
   *** getName(...);
   *** fromArgType(...);
   *** get(...);
   *** inferFromValue(...);
   *** inferFromValueType(...);
   *** parseAndPut(...);
   *** parseValue(...);
}

-keep class androidx.navigation.NavType
-keepclassmembers class androidx.navigation.NavType {
   *** get(...);
   *** parseValue(...);
}

# ACW for Xamarin.AndroidX.Navigation.Runtime
-keep class androidx.navigation.NavController$OnDestinationChangedListener
-keepclassmembers class androidx.navigation.NavController$OnDestinationChangedListener {
}

-keep class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor
-keepclassmembers class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor {
}

-keep class androidx.navigation.NavController
-keepclassmembers class androidx.navigation.NavController {
   <init>(...);
   *** getBackQueue(...);
   *** getContext(...);
   *** getCurrentBackStackEntry(...);
   *** getCurrentBackStackEntryFlow(...);
   *** getCurrentDestination(...);
   *** getGraph(...);
   *** setGraph(...);
   *** getNavInflater(...);
   *** getNavigatorProvider(...);
   *** setNavigatorProvider(...);
   *** getPreviousBackStackEntry(...);
   *** getVisibleEntries(...);
   *** addOnDestinationChangedListener(...);
   *** clearBackStack(...);
   *** clearBackStack(...);
   *** createDeepLink(...);
   *** enableDeepLinkSaveState(...);
   *** enableOnBackPressed(...);
   *** findDestination(...);
   *** findDestination(...);
   *** getBackStackEntry(...);
   *** getBackStackEntry(...);
   *** getViewModelStoreOwner(...);
   *** handleDeepLink(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigateUp(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** removeOnDestinationChangedListener(...);
   *** restoreState(...);
   *** saveState(...);
   *** setGraph(...);
   *** setGraph(...);
   *** setGraph(...);
   *** setViewModelStore(...);
}

-keep class androidx.navigation.NavDeepLinkBuilder
-keepclassmembers class androidx.navigation.NavDeepLinkBuilder {
   <init>(...);
   *** addDestination(...);
   *** addDestination(...);
   *** addDestination(...);
   *** addDestination(...);
   *** createPendingIntent(...);
   *** createTaskStackBuilder(...);
   *** setArguments(...);
   *** setComponentName(...);
   *** setComponentName(...);
   *** setDestination(...);
   *** setDestination(...);
   *** setDestination(...);
   *** setDestination(...);
   *** setGraph(...);
   *** setGraph(...);
}

-keep class androidx.navigation.NavHostController
-keepclassmembers class androidx.navigation.NavHostController {
   <init>(...);
   *** enableOnBackPressed(...);
   *** setLifecycleOwner(...);
   *** setOnBackPressedDispatcher(...);
   *** setViewModelStore(...);
}

-keep class androidx.navigation.NavInflater
-keepclassmembers class androidx.navigation.NavInflater {
   <init>(...);
   *** inflate(...);
}

# ACW for Xamarin.AndroidX.ViewPager
-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$OnPageChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnPageChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$PageTransformer
-keepclassmembers class androidx.viewpager.widget.ViewPager$PageTransformer {
}

-keep class androidx.viewpager.widget.ViewPager
-keepclassmembers class androidx.viewpager.widget.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.AndroidX.Navigation.UI
-keep class androidx.navigation.ui.AppBarConfiguration$Builder
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
   *** setDrawerLayout(...);
   *** setFallbackOnNavigateUpListener(...);
   *** setOpenableLayout(...);
}

-keep class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener {
}

-keep class androidx.navigation.ui.AppBarConfiguration
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration {
   <init>(...);
   *** getDrawerLayout(...);
   *** getFallbackOnNavigateUpListener(...);
   *** getOpenableLayout(...);
   *** getTopLevelDestinations(...);
}

-keep class androidx.navigation.ui.NavigationUI
-keepclassmembers class androidx.navigation.ui.NavigationUI {
   *** findBottomSheetBehavior(...);
   *** navigateUp(...);
   *** navigateUp(...);
   *** onNavDestinationSelected(...);
   *** onNavDestinationSelected(...);
   *** setupActionBarWithNavController(...);
   *** setupActionBarWithNavController(...);
   *** setupActionBarWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
}

# ACW for Xamarin.AndroidX.Window
-keep class androidx.window.layout.WindowMetricsCalculator$Companion
-keepclassmembers class androidx.window.layout.WindowMetricsCalculator$Companion {
   *** getOrCreate(...);
   *** overrideDecorator(...);
   *** reset(...);
}

-keep class androidx.window.layout.WindowMetricsCalculator
-keepclassmembers class androidx.window.layout.WindowMetricsCalculator {
   *** overrideDecorator(...);
   *** reset(...);
}

-keep class androidx.window.layout.WindowMetricsCalculator
-keepclassmembers class androidx.window.layout.WindowMetricsCalculator {
}

-keep class androidx.window.layout.WindowMetricsCalculatorDecorator
-keepclassmembers class androidx.window.layout.WindowMetricsCalculatorDecorator {
}

-keep class androidx.window.layout.WindowMetrics
-keepclassmembers class androidx.window.layout.WindowMetrics {
   <init>(...);
   *** getBounds(...);
}

# ACW for Xamarin.AndroidX.CustomView
-keep class androidx.customview.widget.Openable
-keepclassmembers class androidx.customview.widget.Openable {
}

# ACW for Xamarin.AndroidX.AppCompat.AppCompatResources
-keep class androidx.appcompat.graphics.drawable.DrawableWrapper
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawableWrapper {
   <init>(...);
   *** getOpacity(...);
   *** getWrappedDrawable(...);
   *** setWrappedDrawable(...);
   *** draw(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** unscheduleDrawable(...);
}

-keep class androidx.appcompat.content.res.AppCompatResources
-keepclassmembers class androidx.appcompat.content.res.AppCompatResources {
   *** getColorStateList(...);
   *** getDrawable(...);
}

# ACW for Xamarin.AndroidX.CardView
-keep class androidx.cardview.widget.CardView
-keepclassmembers class androidx.cardview.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.Common
-keep class androidx.lifecycle.Lifecycle$Event
-keepclassmembers class androidx.lifecycle.Lifecycle$Event {
   *** getTargetState(...);
   *** downFrom(...);
   *** downTo(...);
   *** upFrom(...);
   *** upTo(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle$State
-keepclassmembers class androidx.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class androidx.lifecycle.LifecycleObserver
-keepclassmembers class androidx.lifecycle.LifecycleObserver {
}

-keep class androidx.lifecycle.LifecycleOwner
-keepclassmembers class androidx.lifecycle.LifecycleOwner {
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.AndroidX.Security.SecurityCrypto
-keep class androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme
-keepclassmembers class androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme
-keepclassmembers class androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.security.crypto.EncryptedSharedPreferences
-keepclassmembers class androidx.security.crypto.EncryptedSharedPreferences {
   *** getAll(...);
   *** contains(...);
   *** create(...);
   *** create(...);
   *** edit(...);
   *** getBoolean(...);
   *** getFloat(...);
   *** getInt(...);
   *** getLong(...);
   *** getString(...);
   *** getStringSet(...);
   *** registerOnSharedPreferenceChangeListener(...);
   *** unregisterOnSharedPreferenceChangeListener(...);
}

-keep class androidx.security.crypto.MasterKey$Builder
-keepclassmembers class androidx.security.crypto.MasterKey$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setKeyGenParameterSpec(...);
   *** setKeyScheme(...);
   *** setRequestStrongBoxBacked(...);
   *** setUserAuthenticationRequired(...);
   *** setUserAuthenticationRequired(...);
}

-keep class androidx.security.crypto.MasterKey$KeyScheme
-keepclassmembers class androidx.security.crypto.MasterKey$KeyScheme {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.security.crypto.MasterKey
-keepclassmembers class androidx.security.crypto.MasterKey {
   *** getDefaultAuthenticationValidityDurationSeconds(...);
   *** isKeyStoreBacked(...);
   *** isStrongBoxBacked(...);
   *** isUserAuthenticationRequired(...);
   *** getUserAuthenticationValidityDurationSeconds(...);
}

# ACW for Xamarin.GooglePlayServices.Basement
-keep class com.google.firebase.FirebaseApiNotAvailableException
-keepclassmembers class com.google.firebase.FirebaseApiNotAvailableException {
   <init>(...);
}

-keep class com.google.firebase.FirebaseException
-keepclassmembers class com.google.firebase.FirebaseException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.firebase.FirebaseExceptionMapper
-keepclassmembers class com.google.firebase.FirebaseExceptionMapper {
   <init>(...);
   *** getException(...);
}

-keep class com.google.android.gms.security.ProviderInstaller$ProviderInstallListener
-keepclassmembers class com.google.android.gms.security.ProviderInstaller$ProviderInstallListener {
}

-keep class mono.com.google.android.gms.security.ProviderInstaller_ProviderInstallListenerImplementor
-keepclassmembers class mono.com.google.android.gms.security.ProviderInstaller_ProviderInstallListenerImplementor {
}

-keep class com.google.android.gms.security.ProviderInstaller
-keepclassmembers class com.google.android.gms.security.ProviderInstaller {
   <init>(...);
   *** installIfNeeded(...);
   *** installIfNeededAsync(...);
}

-keep class com.google.android.gms.common.internal.constants.ListAppsActivityContract
-keepclassmembers class com.google.android.gms.common.internal.constants.ListAppsActivityContract {
}

-keep class com.google.android.gms.common.internal.constants.ListAppsActivityContract
-keepclassmembers class com.google.android.gms.common.internal.constants.ListAppsActivityContract {
}

-keep class com.google.android.gms.common.internal.constants.ListAppsActivityContract
-keepclassmembers class com.google.android.gms.common.internal.constants.ListAppsActivityContract {
}

-keep class com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
-keepclassmembers class com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader {
   <init>(...);
}

-keep class com.google.android.gms.dynamite.DynamiteModule$LoadingException
-keepclassmembers class com.google.android.gms.dynamite.DynamiteModule$LoadingException {
}

-keep class com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$IVersions
-keepclassmembers class com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$IVersions {
}

-keep class com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult
-keepclassmembers class com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult {
   <init>(...);
}

-keep class com.google.android.gms.dynamite.DynamiteModule$VersionPolicy
-keepclassmembers class com.google.android.gms.dynamite.DynamiteModule$VersionPolicy {
}

-keep class com.google.android.gms.dynamite.DynamiteModule
-keepclassmembers class com.google.android.gms.dynamite.DynamiteModule {
   *** getModuleContext(...);
   *** getLocalVersion(...);
   *** getRemoteVersion(...);
   *** instantiate(...);
   *** load(...);
}

-keep class com.google.android.gms.dynamic.IFragmentWrapper
-keepclassmembers class com.google.android.gms.dynamic.IFragmentWrapper {
}

-keep class com.google.android.gms.dynamic.LifecycleDelegate
-keepclassmembers class com.google.android.gms.dynamic.LifecycleDelegate {
}

-keep class com.google.android.gms.dynamic.IObjectWrapper
-keepclassmembers class com.google.android.gms.dynamic.IObjectWrapper {
}

-keep class com.google.android.gms.dynamic.OnDelegateCreatedListener
-keepclassmembers class com.google.android.gms.dynamic.OnDelegateCreatedListener {
}

-keep class mono.com.google.android.gms.dynamic.OnDelegateCreatedListenerImplementor
-keepclassmembers class mono.com.google.android.gms.dynamic.OnDelegateCreatedListenerImplementor {
}

-keep class com.google.android.gms.dynamic.RemoteCreator$RemoteCreatorException
-keepclassmembers class com.google.android.gms.dynamic.RemoteCreator$RemoteCreatorException {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.gms.dynamic.RemoteCreator
-keepclassmembers class com.google.android.gms.dynamic.RemoteCreator {
   <init>(...);
   *** getRemoteCreator(...);
   *** getRemoteCreatorInstance(...);
}

-keep class com.google.android.gms.dynamic.RemoteCreator
-keepclassmembers class com.google.android.gms.dynamic.RemoteCreator {
   *** getRemoteCreator(...);
}

-keep class com.google.android.gms.actions.ItemListIntents
-keepclassmembers class com.google.android.gms.actions.ItemListIntents {
}

-keep class com.google.android.gms.actions.NoteIntents
-keepclassmembers class com.google.android.gms.actions.NoteIntents {
}

-keep class com.google.android.gms.actions.ReserveIntents
-keepclassmembers class com.google.android.gms.actions.ReserveIntents {
}

-keep class com.google.android.gms.actions.SearchIntents
-keepclassmembers class com.google.android.gms.actions.SearchIntents {
}

-keep class com.google.android.gms.common.AccountPicker$AccountChooserOptions$Builder
-keepclassmembers class com.google.android.gms.common.AccountPicker$AccountChooserOptions$Builder {
   <init>(...);
   *** build(...);
   *** setAllowableAccounts(...);
   *** setAllowableAccountsTypes(...);
   *** setAlwaysShowAccountPicker(...);
   *** setOptionsForAddingAccount(...);
   *** setSelectedAccount(...);
   *** setTitleOverrideText(...);
}

-keep class com.google.android.gms.common.AccountPicker$AccountChooserOptions
-keepclassmembers class com.google.android.gms.common.AccountPicker$AccountChooserOptions {
   <init>(...);
}

-keep class com.google.android.gms.common.AccountPicker
-keepclassmembers class com.google.android.gms.common.AccountPicker {
   *** newChooseAccountIntent(...);
   *** newChooseAccountIntent(...);
}

-keep class com.google.android.gms.common.BlockingServiceConnection
-keepclassmembers class com.google.android.gms.common.BlockingServiceConnection {
   <init>(...);
   *** getService(...);
   *** getServiceWithTimeout(...);
   *** onServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class com.google.android.gms.common.ConnectionResult
-keepclassmembers class com.google.android.gms.common.ConnectionResult {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getErrorCode(...);
   *** getErrorMessage(...);
   *** hasResolution(...);
   *** isSuccess(...);
   *** getResolution(...);
   *** startResolutionForResult(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.Feature
-keepclassmembers class com.google.android.gms.common.Feature {
   <init>(...);
   <init>(...);
   *** getName(...);
   *** getVersion(...);
   *** equals(...);
   *** hashCode(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.FirstPartyScopes
-keepclassmembers class com.google.android.gms.common.FirstPartyScopes {
}

-keep class com.google.android.gms.common.GmsSignatureVerifier
-keepclassmembers class com.google.android.gms.common.GmsSignatureVerifier {
}

-keep class com.google.android.gms.common.GoogleApiAvailabilityLight
-keepclassmembers class com.google.android.gms.common.GoogleApiAvailabilityLight {
   *** getInstance(...);
   *** cancelAvailabilityErrorNotifications(...);
   *** getApkVersion(...);
   *** getClientVersion(...);
   *** getErrorResolutionIntent(...);
   *** getErrorResolutionIntent(...);
   *** getErrorResolutionPendingIntent(...);
   *** getErrorResolutionPendingIntent(...);
   *** getErrorString(...);
   *** isGooglePlayServicesAvailable(...);
   *** isGooglePlayServicesAvailable(...);
   *** isPlayServicesPossiblyUpdating(...);
   *** isPlayStorePossiblyUpdating(...);
   *** isUninstalledAppPossiblyUpdating(...);
   *** isUserResolvableError(...);
   *** verifyGooglePlayServicesIsAvailable(...);
}

-keep class com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
-keepclassmembers class com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException {
   <init>(...);
}

-keep class com.google.android.gms.common.GooglePlayServicesManifestException
-keepclassmembers class com.google.android.gms.common.GooglePlayServicesManifestException {
   <init>(...);
   *** getActualVersion(...);
   *** getExpectedVersion(...);
}

-keep class com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
-keepclassmembers class com.google.android.gms.common.GooglePlayServicesMissingManifestValueException {
   <init>(...);
}

-keep class com.google.android.gms.common.GooglePlayServicesNotAvailableException
-keepclassmembers class com.google.android.gms.common.GooglePlayServicesNotAvailableException {
   <init>(...);
}

-keep class com.google.android.gms.common.GooglePlayServicesRepairableException
-keepclassmembers class com.google.android.gms.common.GooglePlayServicesRepairableException {
   <init>(...);
   *** getConnectionStatusCode(...);
}

-keep class com.google.android.gms.common.GooglePlayServicesUtilLight
-keepclassmembers class com.google.android.gms.common.GooglePlayServicesUtilLight {
   *** cancelAvailabilityErrorNotifications(...);
   *** enableUsingApkIndependentContext(...);
   *** ensurePlayServicesAvailable(...);
   *** getApkVersion(...);
   *** getClientVersion(...);
   *** getErrorPendingIntent(...);
   *** getErrorString(...);
   *** getGooglePlayServicesAvailabilityRecoveryIntent(...);
   *** getRemoteContext(...);
   *** getRemoteResource(...);
   *** honorsDebugCertificates(...);
   *** isGooglePlayServicesAvailable(...);
   *** isGooglePlayServicesAvailable(...);
   *** isGooglePlayServicesUid(...);
   *** isPlayServicesPossiblyUpdating(...);
   *** isPlayStorePossiblyUpdating(...);
   *** isRestrictedUserProfile(...);
   *** isSidewinderDevice(...);
   *** isUserRecoverableError(...);
   *** uidHasPackageName(...);
}

-keep class com.google.android.gms.common.GoogleSignatureVerifier
-keepclassmembers class com.google.android.gms.common.GoogleSignatureVerifier {
   <init>(...);
   *** getInstance(...);
   *** isGooglePublicSignedPackage(...);
   *** isPackageGoogleSigned(...);
   *** isUidGoogleSigned(...);
}

-keep class com.google.android.gms.common.GoogleSourceStampsChecker
-keepclassmembers class com.google.android.gms.common.GoogleSourceStampsChecker {
}

-keep class com.google.android.gms.common.GoogleSourceStampsResult
-keepclassmembers class com.google.android.gms.common.GoogleSourceStampsResult {
}

-keep class com.google.android.gms.common.PackageSignatureVerifier
-keepclassmembers class com.google.android.gms.common.PackageSignatureVerifier {
   <init>(...);
   *** queryPackageSignatureVerified(...);
   *** queryPackageSignatureVerifiedWithRetry(...);
}

-keep class com.google.android.gms.common.PackageVerificationResult
-keepclassmembers class com.google.android.gms.common.PackageVerificationResult {
}

-keep class com.google.android.gms.common.Scopes
-keepclassmembers class com.google.android.gms.common.Scopes {
}

-keep class com.google.android.gms.common.UserRecoverableException
-keepclassmembers class com.google.android.gms.common.UserRecoverableException {
   <init>(...);
   *** getIntent(...);
}

-keep class com.google.android.gms.common.util.AndroidUtilsLight
-keepclassmembers class com.google.android.gms.common.util.AndroidUtilsLight {
   <init>(...);
   *** getPackageCertificateHashBytes(...);
}

-keep class com.google.android.gms.common.util.ArrayUtils
-keepclassmembers class com.google.android.gms.common.util.ArrayUtils {
   *** concat(...);
   *** concatByteArrays(...);
   *** contains(...);
   *** contains(...);
   *** newArrayList(...);
   *** removeAll(...);
   *** toArrayList(...);
   *** toPrimitiveArray(...);
   *** toWrapperArray(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeStringArray(...);
}

-keep class com.google.android.gms.common.util.Base64Utils
-keepclassmembers class com.google.android.gms.common.util.Base64Utils {
   <init>(...);
   *** decode(...);
   *** decodeUrlSafe(...);
   *** decodeUrlSafeNoPadding(...);
   *** encode(...);
   *** encodeUrlSafe(...);
   *** encodeUrlSafeNoPadding(...);
}

-keep class com.google.android.gms.common.util.ClientLibraryUtils
-keepclassmembers class com.google.android.gms.common.util.ClientLibraryUtils {
   *** isPackageSide(...);
   *** getClientVersion(...);
   *** getPackageInfo(...);
}

-keep class com.google.android.gms.common.util.CollectionUtils
-keepclassmembers class com.google.android.gms.common.util.CollectionUtils {
   *** isEmpty(...);
   *** listOf(...);
   *** listOf(...);
   *** listOf(...);
   *** mapOf(...);
   *** mapOf(...);
   *** mapOfKeyValueArrays(...);
   *** mutableSetOfWithSize(...);
   *** setOf(...);
   *** setOf(...);
}

-keep class com.google.android.gms.common.util.CrashUtils
-keepclassmembers class com.google.android.gms.common.util.CrashUtils {
   <init>(...);
   *** addDynamiteErrorToDropBox(...);
}

-keep class com.google.android.gms.common.util.DataUtils
-keepclassmembers class com.google.android.gms.common.util.DataUtils {
   <init>(...);
   *** copyStringToBuffer(...);
   *** loadImageBytes(...);
}

-keep class com.google.android.gms.common.util.DefaultClock
-keepclassmembers class com.google.android.gms.common.util.DefaultClock {
   *** getInstance(...);
   *** currentThreadTimeMillis(...);
   *** currentTimeMillis(...);
   *** elapsedRealtime(...);
   *** nanoTime(...);
}

-keep class com.google.android.gms.common.util.DeviceProperties
-keepclassmembers class com.google.android.gms.common.util.DeviceProperties {
   *** isUserBuild(...);
   *** isAuto(...);
   *** isBstar(...);
   *** isLatchsky(...);
   *** isPhone(...);
   *** isSevenInchTablet(...);
   *** isSidewinder(...);
   *** isTablet(...);
   *** isTablet(...);
   *** isTv(...);
   *** isWearable(...);
   *** isWearableWithoutPlayStore(...);
}

-keep class com.google.android.gms.common.util.GmsVersion
-keepclassmembers class com.google.android.gms.common.util.GmsVersion {
   *** isAtLeastFenacho(...);
}

-keep class com.google.android.gms.common.util.Hex
-keepclassmembers class com.google.android.gms.common.util.Hex {
   <init>(...);
   *** bytesToStringLowercase(...);
   *** bytesToStringUppercase(...);
   *** bytesToStringUppercase(...);
   *** stringToBytes(...);
}

-keep class com.google.android.gms.common.util.HexDumpUtils
-keepclassmembers class com.google.android.gms.common.util.HexDumpUtils {
   <init>(...);
   *** dump(...);
}

-keep class com.google.android.gms.common.util.HttpUtils
-keepclassmembers class com.google.android.gms.common.util.HttpUtils {
   *** parse(...);
}

-keep class com.google.android.gms.common.util.BiConsumer
-keepclassmembers class com.google.android.gms.common.util.BiConsumer {
}

-keep class com.google.android.gms.common.util.Clock$-CC
-keepclassmembers class com.google.android.gms.common.util.Clock$-CC {
}

-keep class com.google.android.gms.common.util.Clock
-keepclassmembers class com.google.android.gms.common.util.Clock {
}

-keep class com.google.android.gms.common.util.DynamiteApi
-keepclassmembers class com.google.android.gms.common.util.DynamiteApi {
}

-keep class com.google.android.gms.common.util.IOUtils
-keepclassmembers class com.google.android.gms.common.util.IOUtils {
   *** closeQuietly(...);
   *** closeQuietly(...);
   *** copyStream(...);
   *** copyStream(...);
   *** isGzipByteBuffer(...);
   *** readInputStreamFully(...);
   *** readInputStreamFully(...);
   *** toByteArray(...);
}

-keep class com.google.android.gms.common.util.Predicate
-keepclassmembers class com.google.android.gms.common.util.Predicate {
}

-keep class com.google.android.gms.common.util.RetainForClient
-keepclassmembers class com.google.android.gms.common.util.RetainForClient {
}

-keep class com.google.android.gms.common.util.VisibleForTesting
-keepclassmembers class com.google.android.gms.common.util.VisibleForTesting {
}

-keep class com.google.android.gms.common.util.JsonUtils
-keepclassmembers class com.google.android.gms.common.util.JsonUtils {
   *** areJsonValuesEquivalent(...);
   *** escapeString(...);
   *** unescapeString(...);
}

-keep class com.google.android.gms.common.util.MapUtils
-keepclassmembers class com.google.android.gms.common.util.MapUtils {
   <init>(...);
   *** writeStringMapToJson(...);
}

-keep class com.google.android.gms.common.util.MurmurHash3
-keepclassmembers class com.google.android.gms.common.util.MurmurHash3 {
   *** murmurhash3_x86_32(...);
}

-keep class com.google.android.gms.common.util.NumberUtils
-keepclassmembers class com.google.android.gms.common.util.NumberUtils {
}

-keep class com.google.android.gms.common.util.PlatformVersion
-keepclassmembers class com.google.android.gms.common.util.PlatformVersion {
   *** isAtLeastHoneycomb(...);
   *** isAtLeastHoneycombMR1(...);
   *** isAtLeastIceCreamSandwich(...);
   *** isAtLeastIceCreamSandwichMR1(...);
   *** isAtLeastJellyBean(...);
   *** isAtLeastJellyBeanMR1(...);
   *** isAtLeastJellyBeanMR2(...);
   *** isAtLeastKitKat(...);
   *** isAtLeastKitKatWatch(...);
   *** isAtLeastLollipop(...);
   *** isAtLeastLollipopMR1(...);
   *** isAtLeastM(...);
   *** isAtLeastN(...);
   *** isAtLeastO(...);
   *** isAtLeastP(...);
   *** isAtLeastQ(...);
   *** isAtLeastR(...);
   *** isAtLeastS(...);
   *** isAtLeastSv2(...);
   *** isAtLeastT(...);
   *** isAtLeastU(...);
}

-keep class com.google.android.gms.common.util.ProcessUtils
-keepclassmembers class com.google.android.gms.common.util.ProcessUtils {
   *** getMyProcessName(...);
}

-keep class com.google.android.gms.common.util.ScopeUtil
-keepclassmembers class com.google.android.gms.common.util.ScopeUtil {
   *** toScopeString(...);
}

-keep class com.google.android.gms.common.util.SharedPreferencesUtils
-keepclassmembers class com.google.android.gms.common.util.SharedPreferencesUtils {
   *** publishWorldReadableSharedPreferences(...);
}

-keep class com.google.android.gms.common.util.Strings
-keepclassmembers class com.google.android.gms.common.util.Strings {
   *** emptyToNull(...);
   *** isEmptyOrWhitespace(...);
}

-keep class com.google.android.gms.common.util.UidVerifier
-keepclassmembers class com.google.android.gms.common.util.UidVerifier {
   *** isGooglePlayServicesUid(...);
   *** uidHasPackageName(...);
}

-keep class com.google.android.gms.common.util.WorkSourceUtil
-keepclassmembers class com.google.android.gms.common.util.WorkSourceUtil {
   *** add(...);
   *** fromPackage(...);
   *** fromPackageAndModuleExperimentalPi(...);
   *** get(...);
   *** getName(...);
   *** getNames(...);
   *** hasWorkSourcePermission(...);
   *** isEmpty(...);
   *** size(...);
}

-keep class com.google.android.gms.common.wrappers.InstantApps
-keepclassmembers class com.google.android.gms.common.wrappers.InstantApps {
   <init>(...);
   *** isInstantApp(...);
}

-keep class com.google.android.gms.common.wrappers.PackageManagerWrapper
-keepclassmembers class com.google.android.gms.common.wrappers.PackageManagerWrapper {
   <init>(...);
   *** isCallerInstantApp(...);
   *** checkCallingOrSelfPermission(...);
   *** checkPermission(...);
   *** getApplicationInfo(...);
   *** getApplicationLabel(...);
   *** getApplicationLabelAndIcon(...);
   *** getPackageInfo(...);
}

-keep class com.google.android.gms.common.wrappers.Wrappers
-keepclassmembers class com.google.android.gms.common.wrappers.Wrappers {
   <init>(...);
   *** packageManager(...);
}

-keep class com.google.android.gms.common.util.concurrent.HandlerExecutor
-keepclassmembers class com.google.android.gms.common.util.concurrent.HandlerExecutor {
   <init>(...);
   *** execute(...);
}

-keep class com.google.android.gms.common.util.concurrent.NamedThreadFactory
-keepclassmembers class com.google.android.gms.common.util.concurrent.NamedThreadFactory {
   <init>(...);
   *** newThread(...);
}

-keep class com.google.android.gms.common.util.concurrent.NumberedThreadFactory
-keepclassmembers class com.google.android.gms.common.util.concurrent.NumberedThreadFactory {
   <init>(...);
   *** newThread(...);
}

-keep class com.google.android.gms.common.stats.ConnectionTracker
-keepclassmembers class com.google.android.gms.common.stats.ConnectionTracker {
   *** getInstance(...);
   *** bindService(...);
   *** unbindService(...);
   *** unbindServiceSafe(...);
}

-keep class com.google.android.gms.common.stats.LoggingConstants
-keepclassmembers class com.google.android.gms.common.stats.LoggingConstants {
}

-keep class com.google.android.gms.common.stats.StatsEvent$Types
-keepclassmembers class com.google.android.gms.common.stats.StatsEvent$Types {
}

-keep class com.google.android.gms.common.stats.StatsEvent$Types
-keepclassmembers class com.google.android.gms.common.stats.StatsEvent$Types {
}

-keep class com.google.android.gms.common.stats.StatsEvent$Types
-keepclassmembers class com.google.android.gms.common.stats.StatsEvent$Types {
}

-keep class com.google.android.gms.common.stats.StatsEvent
-keepclassmembers class com.google.android.gms.common.stats.StatsEvent {
   <init>(...);
   *** toString(...);
}

-keep class com.google.android.gms.common.stats.StatsEvent
-keepclassmembers class com.google.android.gms.common.stats.StatsEvent {
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.stats.StatsUtils
-keepclassmembers class com.google.android.gms.common.stats.StatsUtils {
   <init>(...);
   *** getEventKey(...);
}

-keep class com.google.android.gms.common.stats.WakeLockEvent
-keepclassmembers class com.google.android.gms.common.stats.WakeLockEvent {
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.stats.WakeLockTracker
-keepclassmembers class com.google.android.gms.common.stats.WakeLockTracker {
   <init>(...);
   *** getInstance(...);
   *** registerAcquireEvent(...);
   *** registerDeadlineEvent(...);
   *** registerEvent(...);
   *** registerEvent(...);
   *** registerReleaseEvent(...);
}

-keep class com.google.android.gms.common.sqlite.CursorWrapper
-keepclassmembers class com.google.android.gms.common.sqlite.CursorWrapper {
   <init>(...);
   *** getWindow(...);
   *** setWindow(...);
   *** fillWindow(...);
   *** onMove(...);
}

-keep class com.google.android.gms.common.providers.PooledExecutorsProvider$PooledExecutorFactory
-keepclassmembers class com.google.android.gms.common.providers.PooledExecutorsProvider$PooledExecutorFactory {
}

-keep class com.google.android.gms.common.providers.PooledExecutorsProvider
-keepclassmembers class com.google.android.gms.common.providers.PooledExecutorsProvider {
   *** getInstance(...);
}

-keep class com.google.android.gms.common.logging.Logger
-keepclassmembers class com.google.android.gms.common.logging.Logger {
   <init>(...);
   *** getTag(...);
   *** d(...);
   *** e(...);
   *** e(...);
   *** format(...);
   *** i(...);
   *** isLoggable(...);
   *** v(...);
   *** v(...);
   *** w(...);
   *** wtf(...);
   *** wtf(...);
}

-keep class com.google.android.gms.common.internal.DowngradeableSafeParcel
-keepclassmembers class com.google.android.gms.common.internal.DowngradeableSafeParcel {
   <init>(...);
   *** getUnparcelClientVersion(...);
   *** canUnparcelSafely(...);
   *** prepareForClientVersion(...);
   *** setShouldDowngrade(...);
   *** shouldDowngrade(...);
}

-keep class com.google.android.gms.common.internal.DowngradeableSafeParcel
-keepclassmembers class com.google.android.gms.common.internal.DowngradeableSafeParcel {
   *** prepareForClientVersion(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.internal.IAccountAccessor
-keepclassmembers class com.google.android.gms.common.internal.IAccountAccessor {
}

-keep class com.google.android.gms.common.internal.ICancelToken
-keepclassmembers class com.google.android.gms.common.internal.ICancelToken {
}

-keep class com.google.android.gms.common.internal.IGmsCallbacks
-keepclassmembers class com.google.android.gms.common.internal.IGmsCallbacks {
}

-keep class com.google.android.gms.common.internal.HideFirstParty
-keepclassmembers class com.google.android.gms.common.internal.HideFirstParty {
}

-keep class com.google.android.gms.common.internal.ReflectedParcelable
-keepclassmembers class com.google.android.gms.common.internal.ReflectedParcelable {
}

-keep class com.google.android.gms.common.internal.ShowFirstParty
-keepclassmembers class com.google.android.gms.common.internal.ShowFirstParty {
}

-keep class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable {
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Class
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Class {
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Constructor
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Constructor {
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Field
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Field {
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Indicator
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Indicator {
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Param
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Param {
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable$RemovedParam
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable$RemovedParam {
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Reserved
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable$Reserved {
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable$VersionField
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable$VersionField {
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer {
   *** deserializeFromBytes(...);
   *** deserializeFromIntentExtra(...);
   *** deserializeFromString(...);
   *** deserializeIterableFromBundle(...);
   *** deserializeIterableFromBundleSafe(...);
   *** deserializeIterableFromBytes(...);
   *** deserializeIterableFromIntentExtra(...);
   *** deserializeIterableFromIntentExtraSafe(...);
   *** serializeIterableToBundle(...);
   *** serializeIterableToBundleSafe(...);
   *** serializeIterableToIntentExtra(...);
   *** serializeIterableToIntentExtraSafe(...);
   *** serializeToBytes(...);
   *** serializeToIntentExtra(...);
   *** serializeToString(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException {
   <init>(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelReader
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelReader {
   *** createBigDecimal(...);
   *** createBigDecimalArray(...);
   *** createBigInteger(...);
   *** createBigIntegerArray(...);
   *** createBooleanArray(...);
   *** createBooleanList(...);
   *** createBundle(...);
   *** createByteArray(...);
   *** createByteArrayArray(...);
   *** createByteArraySparseArray(...);
   *** createCharArray(...);
   *** createDoubleArray(...);
   *** createDoubleList(...);
   *** createDoubleSparseArray(...);
   *** createFloatArray(...);
   *** createFloatList(...);
   *** createFloatSparseArray(...);
   *** createIBinderArray(...);
   *** createIBinderList(...);
   *** createIBinderSparseArray(...);
   *** createIntArray(...);
   *** createIntegerList(...);
   *** createLongArray(...);
   *** createLongList(...);
   *** createParcel(...);
   *** createParcelArray(...);
   *** createParcelList(...);
   *** createParcelSparseArray(...);
   *** createParcelable(...);
   *** createSparseBooleanArray(...);
   *** createSparseIntArray(...);
   *** createSparseLongArray(...);
   *** createString(...);
   *** createStringArray(...);
   *** createStringList(...);
   *** createStringSparseArray(...);
   *** createTypedArray(...);
   *** createTypedList(...);
   *** createTypedSparseArray(...);
   *** ensureAtEnd(...);
   *** getFieldId(...);
   *** readBoolean(...);
   *** readBooleanObject(...);
   *** readByte(...);
   *** readChar(...);
   *** readDouble(...);
   *** readDoubleObject(...);
   *** readFloat(...);
   *** readFloatObject(...);
   *** readHeader(...);
   *** readIBinder(...);
   *** readInt(...);
   *** readIntegerObject(...);
   *** readList(...);
   *** readLong(...);
   *** readLongObject(...);
   *** readPendingIntent(...);
   *** readShort(...);
   *** readSize(...);
   *** skipUnknownField(...);
   *** validateObjectHeader(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelWriter
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelWriter {
   *** beginObjectHeader(...);
   *** finishObjectHeader(...);
   *** writeBigDecimal(...);
   *** writeBigDecimalArray(...);
   *** writeBigInteger(...);
   *** writeBigIntegerArray(...);
   *** writeBoolean(...);
   *** writeBooleanArray(...);
   *** writeBooleanList(...);
   *** writeBooleanObject(...);
   *** writeBundle(...);
   *** writeByte(...);
   *** writeByteArray(...);
   *** writeByteArrayArray(...);
   *** writeByteArraySparseArray(...);
   *** writeChar(...);
   *** writeCharArray(...);
   *** writeDouble(...);
   *** writeDoubleArray(...);
   *** writeDoubleList(...);
   *** writeDoubleObject(...);
   *** writeDoubleSparseArray(...);
   *** writeFloat(...);
   *** writeFloatArray(...);
   *** writeFloatList(...);
   *** writeFloatObject(...);
   *** writeFloatSparseArray(...);
   *** writeIBinder(...);
   *** writeIBinderArray(...);
   *** writeIBinderList(...);
   *** writeIBinderSparseArray(...);
   *** writeInt(...);
   *** writeIntArray(...);
   *** writeIntegerList(...);
   *** writeIntegerObject(...);
   *** writeList(...);
   *** writeLong(...);
   *** writeLongArray(...);
   *** writeLongList(...);
   *** writeLongObject(...);
   *** writeParcel(...);
   *** writeParcelArray(...);
   *** writeParcelList(...);
   *** writeParcelSparseArray(...);
   *** writeParcelable(...);
   *** writePendingIntent(...);
   *** writeShort(...);
   *** writeSparseBooleanArray(...);
   *** writeSparseIntArray(...);
   *** writeSparseLongArray(...);
   *** writeString(...);
   *** writeStringArray(...);
   *** writeStringList(...);
   *** writeStringSparseArray(...);
   *** writeTypedArray(...);
   *** writeTypedList(...);
   *** writeTypedSparseArray(...);
}

-keep class com.google.android.gms.common.config.GservicesValue
-keepclassmembers class com.google.android.gms.common.config.GservicesValue {
   <init>(...);
   *** getBinderSafe(...);
   *** isInitialized(...);
   *** get(...);
   *** override(...);
   *** resetOverride(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
}

-keep class com.google.android.gms.common.config.GservicesValue
-keepclassmembers class com.google.android.gms.common.config.GservicesValue {
}

-keep class com.google.android.gms.common.annotation.KeepForSdk
-keepclassmembers class com.google.android.gms.common.annotation.KeepForSdk {
}

-keep class com.google.android.gms.common.annotation.KeepForSdkWithFieldsAndMethods
-keepclassmembers class com.google.android.gms.common.annotation.KeepForSdkWithFieldsAndMethods {
}

-keep class com.google.android.gms.common.annotation.KeepForSdkWithMembers
-keepclassmembers class com.google.android.gms.common.annotation.KeepForSdkWithMembers {
}

-keep class com.google.android.gms.common.annotation.KeepName
-keepclassmembers class com.google.android.gms.common.annotation.KeepName {
}

-keep class com.google.android.gms.common.annotation.NonNullApi
-keepclassmembers class com.google.android.gms.common.annotation.NonNullApi {
}

-keep class com.google.android.gms.common.api.ApiException
-keepclassmembers class com.google.android.gms.common.api.ApiException {
   <init>(...);
   *** getStatus(...);
   *** getStatusCode(...);
   *** getStatusMessage(...);
}

-keep class com.google.android.gms.common.api.CommonStatusCodes
-keepclassmembers class com.google.android.gms.common.api.CommonStatusCodes {
   <init>(...);
   *** getStatusCodeString(...);
}

-keep class com.google.android.gms.common.api.Releasable
-keepclassmembers class com.google.android.gms.common.api.Releasable {
}

-keep class com.google.android.gms.common.api.Result
-keepclassmembers class com.google.android.gms.common.api.Result {
}

-keep class com.google.android.gms.common.api.ResultCallback
-keepclassmembers class com.google.android.gms.common.api.ResultCallback {
}

-keep class com.google.android.gms.common.api.ResolvableApiException
-keepclassmembers class com.google.android.gms.common.api.ResolvableApiException {
   <init>(...);
   *** getResolution(...);
   *** startResolutionForResult(...);
}

-keep class com.google.android.gms.common.api.ResolvingResultCallbacks
-keepclassmembers class com.google.android.gms.common.api.ResolvingResultCallbacks {
   <init>(...);
   *** onFailure(...);
   *** onUnresolvableFailure(...);
}

-keep class com.google.android.gms.common.api.ResolvingResultCallbacks
-keepclassmembers class com.google.android.gms.common.api.ResolvingResultCallbacks {
   *** onUnresolvableFailure(...);
   *** onSuccess(...);
}

-keep class com.google.android.gms.common.api.Response
-keepclassmembers class com.google.android.gms.common.api.Response {
   <init>(...);
   <init>(...);
   *** getResult(...);
   *** setResult(...);
}

-keep class com.google.android.gms.common.api.ResultCallbacks
-keepclassmembers class com.google.android.gms.common.api.ResultCallbacks {
   <init>(...);
   *** onFailure(...);
   *** onResult(...);
   *** onSuccess(...);
}

-keep class com.google.android.gms.common.api.ResultCallbacks
-keepclassmembers class com.google.android.gms.common.api.ResultCallbacks {
   *** onFailure(...);
   *** onSuccess(...);
}

-keep class com.google.android.gms.common.api.Scope
-keepclassmembers class com.google.android.gms.common.api.Scope {
   <init>(...);
   *** getScopeUri(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.api.Status
-keepclassmembers class com.google.android.gms.common.api.Status {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getConnectionResult(...);
   *** hasResolution(...);
   *** isCanceled(...);
   *** isInterrupted(...);
   *** isSuccess(...);
   *** getResolution(...);
   *** getStatus(...);
   *** getStatusCode(...);
   *** getStatusMessage(...);
   *** startResolutionForResult(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.api.UnsupportedApiCallException
-keepclassmembers class com.google.android.gms.common.api.UnsupportedApiCallException {
   <init>(...);
}

-keep class com.google.android.gms.common.api.internal.BackgroundDetector$BackgroundStateChangeListener
-keepclassmembers class com.google.android.gms.common.api.internal.BackgroundDetector$BackgroundStateChangeListener {
}

-keep class mono.com.google.android.gms.common.api.internal.BackgroundDetector_BackgroundStateChangeListenerImplementor
-keepclassmembers class mono.com.google.android.gms.common.api.internal.BackgroundDetector_BackgroundStateChangeListenerImplementor {
}

-keep class com.google.android.gms.common.api.internal.BackgroundDetector
-keepclassmembers class com.google.android.gms.common.api.internal.BackgroundDetector {
   *** getInstance(...);
   *** isInBackground(...);
   *** addListener(...);
   *** initialize(...);
   *** onActivityCreated(...);
   *** onActivityDestroyed(...);
   *** onActivityPaused(...);
   *** onActivityResumed(...);
   *** onActivitySaveInstanceState(...);
   *** onActivityStarted(...);
   *** onActivityStopped(...);
   *** onConfigurationChanged(...);
   *** onLowMemory(...);
   *** onTrimMemory(...);
   *** readCurrentStateIfPossible(...);
}

-keep class com.google.android.gms.common.api.internal.GoogleServices
-keepclassmembers class com.google.android.gms.common.api.internal.GoogleServices {
   *** getGoogleAppId(...);
   *** isMeasurementEnabled(...);
   *** isMeasurementExplicitlyDisabled(...);
   *** initialize(...);
   *** initialize(...);
}

-keep class com.google.android.gms.common.api.internal.LifecycleFragment
-keepclassmembers class com.google.android.gms.common.api.internal.LifecycleFragment {
}

-keep class com.google.android.gms.common.api.internal.StatusExceptionMapper
-keepclassmembers class com.google.android.gms.common.api.internal.StatusExceptionMapper {
}

-keep class com.google.android.gms.common.api.internal.LifecycleActivity
-keepclassmembers class com.google.android.gms.common.api.internal.LifecycleActivity {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.gms.common.api.internal.LifecycleCallback
-keepclassmembers class com.google.android.gms.common.api.internal.LifecycleCallback {
   <init>(...);
   *** getActivity(...);
   *** dump(...);
   *** getFragment(...);
   *** getFragment(...);
   *** getFragment(...);
   *** onActivityResult(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
}

# ACW for Xamarin.AndroidX.Activity
-keep class androidx.activity.ComponentActivity
-keepclassmembers class androidx.activity.ComponentActivity {
   <init>(...);
   <init>(...);
   *** getActivityResultRegistry(...);
   *** getDefaultViewModelCreationExtras(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getOnBackPressedDispatcher(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addOnConfigurationChangedListener(...);
   *** addOnContextAvailableListener(...);
   *** addOnMultiWindowModeChangedListener(...);
   *** addOnNewIntentListener(...);
   *** addOnPictureInPictureModeChangedListener(...);
   *** addOnTrimMemoryListener(...);
   *** invalidateMenu(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** peekAvailableContext(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** removeMenuProvider(...);
   *** removeOnConfigurationChangedListener(...);
   *** removeOnContextAvailableListener(...);
   *** removeOnMultiWindowModeChangedListener(...);
   *** removeOnNewIntentListener(...);
   *** removeOnPictureInPictureModeChangedListener(...);
   *** removeOnTrimMemoryListener(...);
}

-keep class androidx.activity.ComponentDialog
-keepclassmembers class androidx.activity.ComponentDialog {
   <init>(...);
   <init>(...);
   *** getLifecycle(...);
   *** getOnBackPressedDispatcher(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   <init>(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** handleOnBackPressed(...);
   *** remove(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   *** handleOnBackPressed(...);
}

-keep class androidx.activity.OnBackPressedDispatcher
-keepclassmembers class androidx.activity.OnBackPressedDispatcher {
   <init>(...);
   <init>(...);
   *** hasEnabledCallbacks(...);
   *** addCallback(...);
   *** addCallback(...);
   *** onBackPressed(...);
}

-keep class androidx.activity.contextaware.OnContextAvailableListener
-keepclassmembers class androidx.activity.contextaware.OnContextAvailableListener {
}

-keep class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor
-keepclassmembers class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor {
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   <init>(...);
   *** getContract(...);
   *** launch(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   *** getContract(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   <init>(...);
   *** dispatchResult(...);
   *** dispatchResult(...);
   *** onLaunch(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** register(...);
   *** register(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   *** onLaunch(...);
}

-keep class androidx.activity.result.ActivityResultCallback
-keepclassmembers class androidx.activity.result.ActivityResultCallback {
}

-keep class androidx.activity.result.contract.ActivityResultContract$SynchronousResult
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract$SynchronousResult {
   <init>(...);
   *** getValue(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   <init>(...);
   *** createIntent(...);
   *** getSynchronousResult(...);
   *** parseResult(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   *** createIntent(...);
   *** parseResult(...);
}

# ACW for Xamarin.AndroidX.CursorAdapter
-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCursor(...);
   *** getFilter(...);
   *** getFilterQueryProvider(...);
   *** setFilterQueryProvider(...);
   *** bindView(...);
   *** changeCursor(...);
   *** convertToString(...);
   *** getItem(...);
   *** getItemId(...);
   *** getView(...);
   *** init(...);
   *** newDropDownView(...);
   *** newView(...);
   *** onContentChanged(...);
   *** runQueryOnBackgroundThread(...);
   *** swapCursor(...);
}

-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   *** bindView(...);
   *** newView(...);
}

# ACW for Xamarin.AndroidX.Transition
-keep class androidx.transition.FragmentTransitionSupport
-keepclassmembers class androidx.transition.FragmentTransitionSupport {
   *** addTargets(...);
   *** scheduleRemoveTargets(...);
   *** swapSharedElementTargets(...);
   *** scheduleHideFragmentView(...);
   *** setSharedElementTargets(...);
   *** replaceTargets(...);
   <init>(...);
   *** addTarget(...);
   *** beginDelayedTransition(...);
   *** canHandle(...);
   *** cloneTransition(...);
   *** mergeTransitionsInSequence(...);
   *** mergeTransitionsTogether(...);
   *** removeTarget(...);
   *** setEpicenter(...);
   *** setEpicenter(...);
   *** wrapTransitionInSet(...);
}

-keep class androidx.transition.ArcMotion
-keepclassmembers class androidx.transition.ArcMotion {
   <init>(...);
   <init>(...);
   *** getMaximumAngle(...);
   *** setMaximumAngle(...);
   *** getMinimumHorizontalAngle(...);
   *** setMinimumHorizontalAngle(...);
   *** getMinimumVerticalAngle(...);
   *** setMinimumVerticalAngle(...);
   *** getPath(...);
}

-keep class androidx.transition.AutoTransition
-keepclassmembers class androidx.transition.AutoTransition {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.ChangeBounds
-keepclassmembers class androidx.transition.ChangeBounds {
   <init>(...);
   <init>(...);
   *** getResizeClip(...);
   *** setResizeClip(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeClipBounds
-keepclassmembers class androidx.transition.ChangeClipBounds {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeImageTransform
-keepclassmembers class androidx.transition.ChangeImageTransform {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeScroll
-keepclassmembers class androidx.transition.ChangeScroll {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeTransform
-keepclassmembers class androidx.transition.ChangeTransform {
   <init>(...);
   <init>(...);
   *** getReparent(...);
   *** setReparent(...);
   *** getReparentWithOverlay(...);
   *** setReparentWithOverlay(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.CircularPropagation
-keepclassmembers class androidx.transition.CircularPropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
}

-keep class androidx.transition.Explode
-keepclassmembers class androidx.transition.Explode {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Fade
-keepclassmembers class androidx.transition.Fade {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   <init>(...);
   <init>(...);
   *** getPath(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   *** getPath(...);
}

-keep class androidx.transition.PatternPathMotion
-keepclassmembers class androidx.transition.PatternPathMotion {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPatternPath(...);
   *** setPatternPath(...);
   *** getPath(...);
}

-keep class androidx.transition.Scene
-keepclassmembers class androidx.transition.Scene {
   <init>(...);
   <init>(...);
   *** getSceneRoot(...);
   *** enter(...);
   *** exit(...);
   *** getCurrentScene(...);
   *** getSceneForLayout(...);
   *** setEnterAction(...);
   *** setExitAction(...);
}

-keep class androidx.transition.SidePropagation
-keepclassmembers class androidx.transition.SidePropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
   *** setSide(...);
}

-keep class androidx.transition.Slide$GravityFlag
-keepclassmembers class androidx.transition.Slide$GravityFlag {
}

-keep class androidx.transition.Slide
-keepclassmembers class androidx.transition.Slide {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSlideEdge(...);
   *** setSlideEdge(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   <init>(...);
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$MatchOrder
-keepclassmembers class androidx.transition.Transition$MatchOrder {
}

-keep class androidx.transition.Transition$TransitionListener
-keepclassmembers class androidx.transition.Transition$TransitionListener {
}

-keep class mono.androidx.transition.Transition_TransitionListenerImplementor
-keepclassmembers class mono.androidx.transition.Transition_TransitionListenerImplementor {
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** getEpicenter(...);
   *** getInterpolator(...);
   *** getName(...);
   *** getPathMotion(...);
   *** setPathMotion(...);
   *** getPropagation(...);
   *** setPropagation(...);
   *** getStartDelay(...);
   *** getTargetIds(...);
   *** getTargetNames(...);
   *** getTargetTypes(...);
   *** getTargets(...);
   *** addListener(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** animate(...);
   *** cancel(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** clone(...);
   *** createAnimator(...);
   *** end(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** getEpicenterCallback(...);
   *** getTransitionProperties(...);
   *** getTransitionValues(...);
   *** isTransitionRequired(...);
   *** pause(...);
   *** removeListener(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** resume(...);
   *** runAnimators(...);
   *** setDuration(...);
   *** setEpicenterCallback(...);
   *** setInterpolator(...);
   *** setMatchOrder(...);
   *** setStartDelay(...);
   *** start(...);
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.TransitionInflater
-keepclassmembers class androidx.transition.TransitionInflater {
   *** from(...);
   *** inflateTransition(...);
   *** inflateTransitionManager(...);
}

-keep class androidx.transition.TransitionListenerAdapter
-keepclassmembers class androidx.transition.TransitionListenerAdapter {
   <init>(...);
   *** onTransitionCancel(...);
   *** onTransitionEnd(...);
   *** onTransitionPause(...);
   *** onTransitionResume(...);
   *** onTransitionStart(...);
}

-keep class androidx.transition.TransitionManager
-keepclassmembers class androidx.transition.TransitionManager {
   <init>(...);
   *** beginDelayedTransition(...);
   *** beginDelayedTransition(...);
   *** endTransitions(...);
   *** go(...);
   *** go(...);
   *** setTransition(...);
   *** setTransition(...);
   *** transitionTo(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionSet
-keepclassmembers class androidx.transition.TransitionSet {
   <init>(...);
   <init>(...);
   *** getOrdering(...);
   *** getTransitionCount(...);
   *** addTransition(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** getTransitionAt(...);
   *** removeTransition(...);
   *** setOrdering(...);
}

-keep class androidx.transition.TransitionValues
-keepclassmembers class androidx.transition.TransitionValues {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Visibility$Mode
-keepclassmembers class androidx.transition.Visibility$Mode {
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
   <init>(...);
   <init>(...);
   *** getMode(...);
   *** setMode(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** isVisible(...);
   *** onAppear(...);
   *** onAppear(...);
   *** onDisappear(...);
   *** onDisappear(...);
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getViewVisibility(...);
   *** getViewX(...);
   *** getViewY(...);
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   *** getStartDelay(...);
}

# ACW for Xamarin.AndroidX.DynamicAnimation
-keep class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationEndListener
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationEndListener {
}

-keep class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationEndListenerImplementor
-keepclassmembers class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationEndListenerImplementor {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener {
}

-keep class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationUpdateListenerImplementor
-keepclassmembers class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationUpdateListenerImplementor {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty {
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation {
   *** isRunning(...);
   *** getMinimumVisibleChange(...);
   *** addEndListener(...);
   *** addUpdateListener(...);
   *** cancel(...);
   *** doAnimationFrame(...);
   *** removeEndListener(...);
   *** removeUpdateListener(...);
   *** setMaxValue(...);
   *** setMinValue(...);
   *** setMinimumVisibleChange(...);
   *** setStartValue(...);
   *** setStartVelocity(...);
   *** start(...);
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation {
}

-keep class androidx.dynamicanimation.animation.FlingAnimation
-keepclassmembers class androidx.dynamicanimation.animation.FlingAnimation {
   <init>(...);
   <init>(...);
   *** getFriction(...);
   *** setFriction(...);
}

-keep class androidx.dynamicanimation.animation.FloatPropertyCompat
-keepclassmembers class androidx.dynamicanimation.animation.FloatPropertyCompat {
   <init>(...);
   *** createFloatPropertyCompat(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.FloatPropertyCompat
-keepclassmembers class androidx.dynamicanimation.animation.FloatPropertyCompat {
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.FloatValueHolder
-keepclassmembers class androidx.dynamicanimation.animation.FloatValueHolder {
   <init>(...);
   <init>(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.SpringAnimation
-keepclassmembers class androidx.dynamicanimation.animation.SpringAnimation {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpring(...);
   *** animateToFinalPosition(...);
   *** canSkipToEnd(...);
   *** setSpring(...);
   *** skipToEnd(...);
}

-keep class androidx.dynamicanimation.animation.SpringForce
-keepclassmembers class androidx.dynamicanimation.animation.SpringForce {
   <init>(...);
   <init>(...);
   *** getDampingRatio(...);
   *** getFinalPosition(...);
   *** getStiffness(...);
   *** getAcceleration(...);
   *** isAtEquilibrium(...);
   *** setDampingRatio(...);
   *** setFinalPosition(...);
   *** setStiffness(...);
}

# ACW for Xamarin.AndroidX.VersionedParcelable
-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
   <init>(...);
   *** onPostParceling(...);
   *** onPreParceling(...);
}

-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
}

-keep class androidx.versionedparcelable.NonParcelField
-keepclassmembers class androidx.versionedparcelable.NonParcelField {
}

-keep class androidx.versionedparcelable.ParcelField
-keepclassmembers class androidx.versionedparcelable.ParcelField {
}

-keep class androidx.versionedparcelable.VersionedParcelable
-keepclassmembers class androidx.versionedparcelable.VersionedParcelable {
}

-keep class androidx.versionedparcelable.VersionedParcelize
-keepclassmembers class androidx.versionedparcelable.VersionedParcelize {
}

-keep class androidx.versionedparcelable.ParcelImpl
-keepclassmembers class androidx.versionedparcelable.ParcelImpl {
   <init>(...);
   <init>(...);
   *** getVersionedParcel(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.versionedparcelable.ParcelUtils
-keepclassmembers class androidx.versionedparcelable.ParcelUtils {
   *** fromInputStream(...);
   *** fromParcelable(...);
   *** getVersionedParcelable(...);
   *** getVersionedParcelableList(...);
   *** putVersionedParcelable(...);
   *** putVersionedParcelableList(...);
   *** toOutputStream(...);
   *** toParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel$ParcelException
-keepclassmembers class androidx.versionedparcelable.VersionedParcel$ParcelException {
   <init>(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   <init>(...);
   *** isStream(...);
   *** closeField(...);
   *** createSubParcel(...);
   *** getRootCause(...);
   *** readArray(...);
   *** readArray(...);
   *** readBoolean(...);
   *** readBoolean(...);
   *** readBooleanArray(...);
   *** readBooleanArray(...);
   *** readBundle(...);
   *** readBundle(...);
   *** readByte(...);
   *** readByteArray(...);
   *** readByteArray(...);
   *** readCharArray(...);
   *** readCharSequence(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readDouble(...);
   *** readDoubleArray(...);
   *** readDoubleArray(...);
   *** readException(...);
   *** readField(...);
   *** readFloat(...);
   *** readFloat(...);
   *** readFloatArray(...);
   *** readFloatArray(...);
   *** readFromParcel(...);
   *** readInt(...);
   *** readInt(...);
   *** readIntArray(...);
   *** readIntArray(...);
   *** readList(...);
   *** readLong(...);
   *** readLong(...);
   *** readLongArray(...);
   *** readLongArray(...);
   *** readMap(...);
   *** readParcelable(...);
   *** readParcelable(...);
   *** readSerializable(...);
   *** readSet(...);
   *** readSize(...);
   *** readSizeF(...);
   *** readSparseBooleanArray(...);
   *** readString(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** readStrongBinder(...);
   *** readVersionedParcelable(...);
   *** readVersionedParcelable(...);
   *** setOutputField(...);
   *** setSerializationFlags(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeBoolean(...);
   *** writeBoolean(...);
   *** writeBooleanArray(...);
   *** writeBooleanArray(...);
   *** writeBundle(...);
   *** writeBundle(...);
   *** writeByte(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharArray(...);
   *** writeCharSequence(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeDouble(...);
   *** writeDoubleArray(...);
   *** writeDoubleArray(...);
   *** writeException(...);
   *** writeFloat(...);
   *** writeFloat(...);
   *** writeFloatArray(...);
   *** writeFloatArray(...);
   *** writeInt(...);
   *** writeInt(...);
   *** writeIntArray(...);
   *** writeIntArray(...);
   *** writeList(...);
   *** writeLong(...);
   *** writeLong(...);
   *** writeLongArray(...);
   *** writeLongArray(...);
   *** writeMap(...);
   *** writeNoException(...);
   *** writeParcelable(...);
   *** writeParcelable(...);
   *** writeSerializable(...);
   *** writeSet(...);
   *** writeSize(...);
   *** writeSizeF(...);
   *** writeSparseBooleanArray(...);
   *** writeString(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
   *** writeStrongInterface(...);
   *** writeToParcel(...);
   *** writeVersionedParcelable(...);
   *** writeVersionedParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   *** closeField(...);
   *** createSubParcel(...);
   *** readBoolean(...);
   *** readBundle(...);
   *** readByteArray(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readField(...);
   *** readFloat(...);
   *** readInt(...);
   *** readLong(...);
   *** readParcelable(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** setOutputField(...);
   *** writeBoolean(...);
   *** writeBundle(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeFloat(...);
   *** writeInt(...);
   *** writeLong(...);
   *** writeParcelable(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
}

# ACW for Xamarin.Google.Guava.ListenableFuture
-keep class com.google.common.util.concurrent.ListenableFuture
-keepclassmembers class com.google.common.util.concurrent.ListenableFuture {
}

# ACW for Xamarin.AndroidX.Concurrent.Futures
-keep class androidx.concurrent.futures.AbstractResolvableFuture
-keepclassmembers class androidx.concurrent.futures.AbstractResolvableFuture {
   <init>(...);
   *** isCancelled(...);
   *** isDone(...);
   *** addListener(...);
   *** afterDone(...);
   *** cancel(...);
   *** get(...);
   *** get(...);
   *** interruptTask(...);
   *** pendingToString(...);
   *** set(...);
   *** setException(...);
   *** setFuture(...);
   *** wasInterrupted(...);
}

-keep class androidx.concurrent.futures.AbstractResolvableFuture
-keepclassmembers class androidx.concurrent.futures.AbstractResolvableFuture {
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter$Completer
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter$Completer {
   *** addCancellationListener(...);
   *** set(...);
   *** setCancelled(...);
   *** setException(...);
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter$Resolver
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter$Resolver {
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter {
   *** getFuture(...);
}

-keep class androidx.concurrent.futures.DirectExecutor
-keepclassmembers class androidx.concurrent.futures.DirectExecutor {
   *** execute(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.concurrent.futures.ResolvableFuture
-keepclassmembers class androidx.concurrent.futures.ResolvableFuture {
   *** create(...);
   *** set(...);
   *** setException(...);
   *** setFuture(...);
}

# ACW for Xamarin.AndroidX.Loader
-keep class androidx.loader.content.Loader$OnLoadCanceledListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCanceledListener {
}

-keep class androidx.loader.content.Loader$OnLoadCompleteListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCompleteListener {
}

-keep class androidx.loader.content.Loader
-keepclassmembers class androidx.loader.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class androidx.loader.app.LoaderManager$LoaderCallbacks
-keepclassmembers class androidx.loader.app.LoaderManager$LoaderCallbacks {
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModel
-keep class androidx.lifecycle.ViewModelStoreOwner
-keepclassmembers class androidx.lifecycle.ViewModelStoreOwner {
}

-keep class androidx.lifecycle.ViewModelProvider$Factory
-keepclassmembers class androidx.lifecycle.ViewModelProvider$Factory {
}

-keep class androidx.lifecycle.ViewModelProvider
-keepclassmembers class androidx.lifecycle.ViewModelProvider {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.lifecycle.ViewModelStore
-keepclassmembers class androidx.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

-keep class androidx.lifecycle.viewmodel.CreationExtras$Key
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras$Key {
}

-keep class androidx.lifecycle.viewmodel.CreationExtras
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras {
   *** get(...);
}

-keep class androidx.lifecycle.viewmodel.CreationExtras
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras {
   *** get(...);
}

# ACW for Xamarin.AndroidX.SavedState
-keep class androidx.savedstate.SavedStateRegistry$SavedStateProvider
-keepclassmembers class androidx.savedstate.SavedStateRegistry$SavedStateProvider {
}

-keep class androidx.savedstate.SavedStateRegistry
-keepclassmembers class androidx.savedstate.SavedStateRegistry {
   *** isRestored(...);
   *** consumeRestoredStateForKey(...);
   *** getSavedStateProvider(...);
   *** performSave(...);
   *** registerSavedStateProvider(...);
   *** runOnNextRecreation(...);
   *** unregisterSavedStateProvider(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData.Core
-keep class androidx.lifecycle.Observer
-keepclassmembers class androidx.lifecycle.Observer {
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
   <init>(...);
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
}

-keep class androidx.lifecycle.MutableLiveData
-keepclassmembers class androidx.lifecycle.MutableLiveData {
   <init>(...);
   <init>(...);
   *** postValue(...);
   *** setValue(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable
-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat {
   *** getCurrent(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getOpacity(...);
   *** getPixelSize(...);
   *** getTransparentRegion(...);
   *** applyTheme(...);
   *** clearColorFilter(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** getPadding(...);
   *** getState(...);
   *** jumpToCurrentState(...);
   *** onBoundsChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setFilterBitmap(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setState(...);
}

# ACW for Xamarin.AndroidX.SlidingPaneLayout
-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener {
}

-keep class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor
-keepclassmembers class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor {
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener {
   <init>(...);
   *** onPanelClosed(...);
   *** onPanelOpened(...);
   *** onPanelSlide(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCoveredFadeColor(...);
   *** setCoveredFadeColor(...);
   *** isOpen(...);
   *** isSlideable(...);
   *** getLockMode(...);
   *** setLockMode(...);
   *** getParallaxDistance(...);
   *** setParallaxDistance(...);
   *** getSliderFadeColor(...);
   *** setSliderFadeColor(...);
   *** canScroll(...);
   *** canSlide(...);
   *** close(...);
   *** closePane(...);
   *** onLayout(...);
   *** open(...);
   *** openPane(...);
   *** setPanelSlideListener(...);
   *** setShadowDrawable(...);
   *** setShadowDrawableLeft(...);
   *** setShadowDrawableRight(...);
   *** setShadowResource(...);
   *** setShadowResourceLeft(...);
   *** setShadowResourceRight(...);
   *** smoothSlideClosed(...);
   *** smoothSlideOpen(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModelSavedState
-keep class androidx.lifecycle.SavedStateHandle
-keepclassmembers class androidx.lifecycle.SavedStateHandle {
   <init>(...);
   <init>(...);
   *** clearSavedStateProvider(...);
   *** contains(...);
   *** createHandle(...);
   *** get(...);
   *** getLiveData(...);
   *** getLiveData(...);
   *** getStateFlow(...);
   *** keys(...);
   *** remove(...);
   *** savedStateProvider(...);
   *** set(...);
   *** setSavedStateProvider(...);
}

